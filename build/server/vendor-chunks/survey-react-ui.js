/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/survey-react-ui";
exports.ids = ["vendor-chunks/survey-react-ui"];
exports.modules = {

/***/ "(ssr)/./node_modules/survey-react-ui/survey-react-ui.js":
/*!*********************************************************!*\
  !*** ./node_modules/survey-react-ui/survey-react-ui.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/*!\n * surveyjs - Survey JavaScript library v1.9.138\n * Copyright (c) 2015-2024 Devsoft Baltic OÃœ  - http://surveyjs.io/\n * License: MIT (http://www.opensource.org/licenses/mit-license.php)\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"), __webpack_require__(/*! react-dom */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-dom.js\"), __webpack_require__(/*! survey-core */ \"(ssr)/./node_modules/survey-core/survey.core.js\"));\n\telse {}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_react__, __WEBPACK_EXTERNAL_MODULE_react_dom__, __WEBPACK_EXTERNAL_MODULE_survey_core__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __nested_webpack_require_1081__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __nested_webpack_require_1081__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__nested_webpack_require_1081__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__nested_webpack_require_1081__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__nested_webpack_require_1081__.d = function(exports, name, getter) {\n/******/ \t\tif(!__nested_webpack_require_1081__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__nested_webpack_require_1081__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__nested_webpack_require_1081__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __nested_webpack_require_1081__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__nested_webpack_require_1081__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __nested_webpack_require_1081__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__nested_webpack_require_1081__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__nested_webpack_require_1081__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__nested_webpack_require_1081__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__nested_webpack_require_1081__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __nested_webpack_require_1081__(__nested_webpack_require_1081__.s = \"./src/entries/react-ui.ts\");\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ \"./src/actions/action.ts\":\n/*!*******************************!*\\\n  !*** ./src/actions/action.ts ***!\n  \\*******************************/\n/*! exports provided: createDropdownActionModel, createDropdownActionModelAdvanced, getActionDropdownButtonTarget, BaseAction, Action, ActionDropdownViewModel */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_4881__) {\n\n\"use strict\";\n__nested_webpack_require_4881__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_4881__.d(__nested_webpack_exports__, \"createDropdownActionModel\", function() { return createDropdownActionModel; });\n/* harmony export (binding) */ __nested_webpack_require_4881__.d(__nested_webpack_exports__, \"createDropdownActionModelAdvanced\", function() { return createDropdownActionModelAdvanced; });\n/* harmony export (binding) */ __nested_webpack_require_4881__.d(__nested_webpack_exports__, \"getActionDropdownButtonTarget\", function() { return getActionDropdownButtonTarget; });\n/* harmony export (binding) */ __nested_webpack_require_4881__.d(__nested_webpack_exports__, \"BaseAction\", function() { return BaseAction; });\n/* harmony export (binding) */ __nested_webpack_require_4881__.d(__nested_webpack_exports__, \"Action\", function() { return Action; });\n/* harmony export (binding) */ __nested_webpack_require_4881__.d(__nested_webpack_exports__, \"ActionDropdownViewModel\", function() { return ActionDropdownViewModel; });\n/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_4881__(/*! ../base */ \"./src/base.ts\");\n/* harmony import */ var _surveyStrings__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_4881__(/*! ../surveyStrings */ \"./src/surveyStrings.ts\");\n/* harmony import */ var _jsonobject__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_4881__(/*! ../jsonobject */ \"./src/jsonobject.ts\");\n/* harmony import */ var _list__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_4881__(/*! ../list */ \"./src/list.ts\");\n/* harmony import */ var _popup__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_4881__(/*! ../popup */ \"./src/popup.ts\");\n/* harmony import */ var _utils_cssClassBuilder__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_4881__(/*! ../utils/cssClassBuilder */ \"./src/utils/cssClassBuilder.ts\");\n/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_6__ = __nested_webpack_require_4881__(/*! ./container */ \"./src/actions/container.ts\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = ( false) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n\n\n\n\n\n\nfunction createDropdownActionModel(actionOptions, dropdownOptions, locOwner) {\n    return createDropdownActionModelAdvanced(actionOptions, dropdownOptions, dropdownOptions, locOwner);\n}\nfunction createDropdownActionModelAdvanced(actionOptions, listOptions, popupOptions, locOwner) {\n    var listModel = new _list__WEBPACK_IMPORTED_MODULE_3__[\"ListModel\"](listOptions.items, function (item) {\n        if (newAction.hasTitle) {\n            newAction.title = item.title;\n        }\n        listOptions.onSelectionChanged(item);\n        innerPopupModel.toggleVisibility();\n    }, listOptions.allowSelection, listOptions.selectedItem, listOptions.onFilterStringChangedCallback);\n    listModel.locOwner = locOwner;\n    var innerPopupModel = new _popup__WEBPACK_IMPORTED_MODULE_4__[\"PopupModel\"](\"sv-list\", { model: listModel }, popupOptions === null || popupOptions === void 0 ? void 0 : popupOptions.verticalPosition, popupOptions === null || popupOptions === void 0 ? void 0 : popupOptions.horizontalPosition, popupOptions === null || popupOptions === void 0 ? void 0 : popupOptions.showPointer, popupOptions === null || popupOptions === void 0 ? void 0 : popupOptions.isModal, popupOptions === null || popupOptions === void 0 ? void 0 : popupOptions.onCancel, popupOptions === null || popupOptions === void 0 ? void 0 : popupOptions.onApply, popupOptions === null || popupOptions === void 0 ? void 0 : popupOptions.onHide, popupOptions === null || popupOptions === void 0 ? void 0 : popupOptions.onShow, popupOptions === null || popupOptions === void 0 ? void 0 : popupOptions.cssClass, popupOptions === null || popupOptions === void 0 ? void 0 : popupOptions.title, function () {\n        listModel.dispose();\n    });\n    innerPopupModel.displayMode = popupOptions === null || popupOptions === void 0 ? void 0 : popupOptions.displayMode;\n    var newActionOptions = Object.assign({}, actionOptions, {\n        component: \"sv-action-bar-item-dropdown\",\n        popupModel: innerPopupModel,\n        action: function (action, isUserAction) {\n            !!(actionOptions.action) && actionOptions.action();\n            innerPopupModel.isFocusedContent = !isUserAction || listModel.showFilter;\n            innerPopupModel.toggleVisibility();\n            listModel.scrollToSelectedItem();\n        },\n    });\n    var newAction = new Action(newActionOptions);\n    newAction.data = listModel;\n    return newAction;\n}\nfunction getActionDropdownButtonTarget(container) {\n    return container === null || container === void 0 ? void 0 : container.previousElementSibling;\n}\nvar BaseAction = /** @class */ (function (_super) {\n    __extends(BaseAction, _super);\n    function BaseAction() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.iconSize = 24;\n        return _this;\n    }\n    Object.defineProperty(BaseAction.prototype, \"visible\", {\n        get: function () {\n            return this.getVisible();\n        },\n        set: function (val) {\n            this.setVisible(val);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseAction.prototype, \"enabled\", {\n        get: function () {\n            return this.getEnabled();\n        },\n        set: function (val) {\n            this.setEnabled(val);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseAction.prototype, \"component\", {\n        get: function () {\n            return this.getComponent();\n        },\n        set: function (val) {\n            this.setComponent(val);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseAction.prototype, \"locTitle\", {\n        get: function () {\n            return this.getLocTitle();\n        },\n        set: function (val) {\n            this.setLocTitle(val);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseAction.prototype, \"title\", {\n        get: function () {\n            return this.getTitle();\n        },\n        set: function (val) {\n            this.setTitle(val);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseAction.prototype, \"cssClasses\", {\n        get: function () {\n            return this.cssClassesValue || _container__WEBPACK_IMPORTED_MODULE_6__[\"defaultActionBarCss\"];\n        },\n        set: function (val) {\n            this.cssClassesValue = val;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseAction.prototype, \"isVisible\", {\n        get: function () {\n            return this.visible && this.mode !== \"popup\" && this.mode !== \"removed\";\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseAction.prototype, \"disabled\", {\n        get: function () {\n            return this.enabled !== undefined && !this.enabled;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseAction.prototype, \"canShrink\", {\n        get: function () {\n            return !!this.iconName;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseAction.prototype, \"hasTitle\", {\n        get: function () {\n            return (((this.mode != \"small\" &&\n                (this.showTitle || this.showTitle === undefined)) ||\n                !this.iconName) &&\n                !!this.title);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    BaseAction.prototype.getActionBarItemTitleCss = function () {\n        return new _utils_cssClassBuilder__WEBPACK_IMPORTED_MODULE_5__[\"CssClassBuilder\"]()\n            .append(this.cssClasses.itemTitle)\n            .append(this.cssClasses.itemTitleWithIcon, !!this.iconName)\n            .toString();\n    };\n    BaseAction.prototype.getActionBarItemCss = function () {\n        return new _utils_cssClassBuilder__WEBPACK_IMPORTED_MODULE_5__[\"CssClassBuilder\"]()\n            .append(this.cssClasses.item)\n            .append(this.cssClasses.itemWithTitle, this.hasTitle)\n            .append(this.cssClasses.itemAsIcon, !this.hasTitle)\n            .append(this.cssClasses.itemActive, !!this.active)\n            .append(this.cssClasses.itemPressed, !!this.pressed)\n            .append(this.innerCss)\n            .toString();\n    };\n    BaseAction.prototype.getActionRootCss = function () {\n        return new _utils_cssClassBuilder__WEBPACK_IMPORTED_MODULE_5__[\"CssClassBuilder\"]()\n            .append(\"sv-action\")\n            .append(this.css)\n            .append(\"sv-action--space\", this.needSpace)\n            .append(\"sv-action--hidden\", !this.isVisible)\n            .toString();\n    };\n    BaseAction.prototype.getTooltip = function () {\n        return this.tooltip || this.title;\n    };\n    BaseAction.prototype.getIsTrusted = function (args) {\n        if (!!args.originalEvent) {\n            return args.originalEvent.isTrusted;\n        }\n        return args.isTrusted;\n    };\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_2__[\"property\"])()\n    ], BaseAction.prototype, \"tooltip\", void 0);\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_2__[\"property\"])()\n    ], BaseAction.prototype, \"showTitle\", void 0);\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_2__[\"property\"])()\n    ], BaseAction.prototype, \"innerCss\", void 0);\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_2__[\"property\"])()\n    ], BaseAction.prototype, \"active\", void 0);\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_2__[\"property\"])()\n    ], BaseAction.prototype, \"pressed\", void 0);\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_2__[\"property\"])()\n    ], BaseAction.prototype, \"data\", void 0);\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_2__[\"property\"])()\n    ], BaseAction.prototype, \"popupModel\", void 0);\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_2__[\"property\"])()\n    ], BaseAction.prototype, \"needSeparator\", void 0);\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_2__[\"property\"])()\n    ], BaseAction.prototype, \"template\", void 0);\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_2__[\"property\"])({ defaultValue: \"large\" })\n    ], BaseAction.prototype, \"mode\", void 0);\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_2__[\"property\"])()\n    ], BaseAction.prototype, \"visibleIndex\", void 0);\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_2__[\"property\"])()\n    ], BaseAction.prototype, \"disableTabStop\", void 0);\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_2__[\"property\"])()\n    ], BaseAction.prototype, \"disableShrink\", void 0);\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_2__[\"property\"])()\n    ], BaseAction.prototype, \"disableHide\", void 0);\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_2__[\"property\"])({ defaultValue: false })\n    ], BaseAction.prototype, \"needSpace\", void 0);\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_2__[\"property\"])()\n    ], BaseAction.prototype, \"ariaChecked\", void 0);\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_2__[\"property\"])()\n    ], BaseAction.prototype, \"ariaExpanded\", void 0);\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_2__[\"property\"])({ defaultValue: \"button\" })\n    ], BaseAction.prototype, \"ariaRole\", void 0);\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_2__[\"property\"])()\n    ], BaseAction.prototype, \"iconName\", void 0);\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_2__[\"property\"])()\n    ], BaseAction.prototype, \"iconSize\", void 0);\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_2__[\"property\"])()\n    ], BaseAction.prototype, \"css\", void 0);\n    return BaseAction;\n}(_base__WEBPACK_IMPORTED_MODULE_0__[\"Base\"]));\n\nvar Action = /** @class */ (function (_super) {\n    __extends(Action, _super);\n    function Action(innerItem) {\n        var _this = _super.call(this) || this;\n        _this.innerItem = innerItem;\n        _this.locTitleChanged = function () {\n            var val = _this.locTitle.renderedHtml;\n            _this.setPropertyValue(\"_title\", !!val ? val : undefined);\n        };\n        _this.locTitle = !!innerItem ? innerItem[\"locTitle\"] : null;\n        //Object.assign(this, item) to support IE11\n        if (!!innerItem) {\n            for (var key in innerItem) {\n                if (key !== \"locTitle\") {\n                    _this[key] = innerItem[key];\n                }\n            }\n        }\n        if (!!_this.locTitleName) {\n            _this.locTitleChanged();\n        }\n        _this.registerFunctionOnPropertyValueChanged(\"_title\", function () {\n            _this.raiseUpdate(true);\n        });\n        _this.locStrChangedInPopupModel();\n        return _this;\n    }\n    Action.prototype.raiseUpdate = function (isResetInitialized) {\n        if (isResetInitialized === void 0) { isResetInitialized = false; }\n        this.updateCallback && this.updateCallback(isResetInitialized);\n    };\n    Action.prototype.createLocTitle = function () {\n        return this.createLocalizableString(\"title\", this, true);\n    };\n    Action.prototype.getLocTitle = function () {\n        return this.locTitleValue;\n    };\n    Action.prototype.setLocTitle = function (val) {\n        if (!val && !this.locTitleValue) {\n            val = this.createLocTitle();\n        }\n        if (!!this.locTitleValue) {\n            this.locTitleValue.onStringChanged.remove(this.locTitleChanged);\n        }\n        this.locTitleValue = val;\n        this.locTitleValue.onStringChanged.add(this.locTitleChanged);\n        this.locTitleChanged();\n    };\n    Action.prototype.getTitle = function () {\n        return this._title;\n    };\n    Action.prototype.setTitle = function (val) {\n        this._title = val;\n    };\n    Object.defineProperty(Action.prototype, \"locTitleName\", {\n        get: function () {\n            return this.locTitle.localizationName;\n        },\n        set: function (val) {\n            this.locTitle.localizationName = val;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Action.prototype.locStrsChanged = function () {\n        _super.prototype.locStrsChanged.call(this);\n        this.locTooltipChanged();\n        this.locStrChangedInPopupModel();\n    };\n    Action.prototype.locStrChangedInPopupModel = function () {\n        if (!this.popupModel || !this.popupModel.contentComponentData || !this.popupModel.contentComponentData.model)\n            return;\n        var model = this.popupModel.contentComponentData.model;\n        if (Array.isArray(model.actions)) {\n            var actions = model.actions;\n            actions.forEach(function (item) {\n                if (!!item.locStrsChanged) {\n                    item.locStrsChanged();\n                }\n            });\n        }\n    };\n    Action.prototype.locTooltipChanged = function () {\n        if (!this.locTooltipName)\n            return;\n        this.tooltip = _surveyStrings__WEBPACK_IMPORTED_MODULE_1__[\"surveyLocalization\"].getString(this.locTooltipName, this.locTitle.locale);\n    };\n    //ILocalizableOwner\n    Action.prototype.getLocale = function () { return this.owner ? this.owner.getLocale() : \"\"; };\n    Action.prototype.getMarkdownHtml = function (text, name) { return this.owner ? this.owner.getMarkdownHtml(text, name) : undefined; };\n    Action.prototype.getProcessedText = function (text) { return this.owner ? this.owner.getProcessedText(text) : text; };\n    Action.prototype.getRenderer = function (name) { return this.owner ? this.owner.getRenderer(name) : null; };\n    Action.prototype.getRendererContext = function (locStr) { return this.owner ? this.owner.getRendererContext(locStr) : locStr; };\n    Action.prototype.setVisible = function (val) {\n        this._visible = val;\n    };\n    Action.prototype.getVisible = function () {\n        return this._visible;\n    };\n    Action.prototype.setEnabled = function (val) {\n        this._enabled = val;\n    };\n    Action.prototype.getEnabled = function () {\n        if (this.enabledIf)\n            return this.enabledIf();\n        return this._enabled;\n    };\n    Action.prototype.setComponent = function (val) {\n        this._component = val;\n    };\n    Action.prototype.getComponent = function () {\n        return this._component;\n    };\n    Action.prototype.dispose = function () {\n        this.updateCallback = undefined;\n        this.action = undefined;\n        _super.prototype.dispose.call(this);\n        if (this.popupModel) {\n            this.popupModel.dispose();\n        }\n        if (!!this.locTitleValue) {\n            this.locTitleValue.onStringChanged.remove(this.locTitleChanged);\n            this.locTitleChanged = undefined;\n        }\n    };\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_2__[\"property\"])()\n    ], Action.prototype, \"id\", void 0);\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_2__[\"property\"])({\n            defaultValue: true,\n            onSet: function (_, target) {\n                target.raiseUpdate();\n            }\n        })\n    ], Action.prototype, \"_visible\", void 0);\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_2__[\"property\"])({\n            onSet: function (_, target) {\n                target.locTooltipChanged();\n            }\n        })\n    ], Action.prototype, \"locTooltipName\", void 0);\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_2__[\"property\"])()\n    ], Action.prototype, \"_enabled\", void 0);\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_2__[\"property\"])()\n    ], Action.prototype, \"action\", void 0);\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_2__[\"property\"])()\n    ], Action.prototype, \"_component\", void 0);\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_2__[\"property\"])()\n    ], Action.prototype, \"items\", void 0);\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_2__[\"property\"])({\n            onSet: function (val, target) {\n                if (target.locTitleValue.text === val)\n                    return;\n                target.locTitleValue.text = val;\n            }\n        })\n    ], Action.prototype, \"_title\", void 0);\n    return Action;\n}(BaseAction));\n\nvar ActionDropdownViewModel = /** @class */ (function () {\n    function ActionDropdownViewModel(item) {\n        this.item = item;\n        this.funcKey = \"sv-dropdown-action\";\n        this.setupPopupCallbacks();\n    }\n    ActionDropdownViewModel.prototype.setupPopupCallbacks = function () {\n        var _this = this;\n        var popupModel = this.popupModel = this.item.popupModel;\n        if (!popupModel)\n            return;\n        popupModel.registerPropertyChangedHandlers([\"isVisible\"], function () {\n            if (!popupModel.isVisible) {\n                _this.item.pressed = false;\n            }\n            else {\n                _this.item.pressed = true;\n            }\n        }, this.funcKey);\n    };\n    ActionDropdownViewModel.prototype.removePopupCallbacks = function () {\n        if (!!this.popupModel) {\n            this.popupModel.unregisterPropertyChangedHandlers([\"isVisible\"], this.funcKey);\n        }\n    };\n    ActionDropdownViewModel.prototype.dispose = function () {\n        this.removePopupCallbacks();\n    };\n    return ActionDropdownViewModel;\n}());\n\n\n\n/***/ }),\n\n/***/ \"./src/actions/adaptive-container.ts\":\n/*!*******************************************!*\\\n  !*** ./src/actions/adaptive-container.ts ***!\n  \\*******************************************/\n/*! exports provided: AdaptiveActionContainer */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_26060__) {\n\n\"use strict\";\n__nested_webpack_require_26060__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_26060__.d(__nested_webpack_exports__, \"AdaptiveActionContainer\", function() { return AdaptiveActionContainer; });\n/* harmony import */ var _utils_responsivity_manager__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_26060__(/*! ../utils/responsivity-manager */ \"./src/utils/responsivity-manager.ts\");\n/* harmony import */ var _action__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_26060__(/*! ./action */ \"./src/actions/action.ts\");\n/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_26060__(/*! ./container */ \"./src/actions/container.ts\");\n/* harmony import */ var _surveyStrings__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_26060__(/*! ../surveyStrings */ \"./src/surveyStrings.ts\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\nvar AdaptiveActionContainer = /** @class */ (function (_super) {\n    __extends(AdaptiveActionContainer, _super);\n    function AdaptiveActionContainer() {\n        var _this = _super.call(this) || this;\n        _this.minVisibleItemsCount = 0;\n        _this.isResponsivenessDisabled = false;\n        _this.dotsItem = Object(_action__WEBPACK_IMPORTED_MODULE_1__[\"createDropdownActionModelAdvanced\"])({\n            id: \"dotsItem-id\" + AdaptiveActionContainer.ContainerID++,\n            css: \"sv-dots\",\n            innerCss: \"sv-dots__item\",\n            iconName: \"icon-more\",\n            visible: false,\n            tooltip: _surveyStrings__WEBPACK_IMPORTED_MODULE_3__[\"surveyLocalization\"].getString(\"more\"),\n        }, {\n            items: [],\n            onSelectionChanged: function (item) {\n                _this.hiddenItemSelected(item);\n            },\n            allowSelection: false\n        });\n        return _this;\n    }\n    AdaptiveActionContainer.prototype.hideItemsGreaterN = function (visibleItemsCount) {\n        var actionsToHide = this.getActionsToHide();\n        visibleItemsCount = Math.max(visibleItemsCount, this.minVisibleItemsCount - (this.visibleActions.length - actionsToHide.length));\n        var hiddenItems = [];\n        actionsToHide.forEach(function (item) {\n            if (visibleItemsCount <= 0) {\n                if (item.removePriority) {\n                    item.mode = \"removed\";\n                }\n                else {\n                    item.mode = \"popup\";\n                    hiddenItems.push(item.innerItem);\n                }\n            }\n            visibleItemsCount--;\n        });\n        this.hiddenItemsListModel.setItems(hiddenItems);\n    };\n    AdaptiveActionContainer.prototype.getActionsToHide = function () {\n        return this.visibleActions.filter(function (action) { return !action.disableHide; }).sort(function (a, b) { return a.removePriority || 0 - b.removePriority || 0; });\n    };\n    AdaptiveActionContainer.prototype.getVisibleItemsCount = function (availableSize) {\n        this.visibleActions.filter(function (action) { return action.disableHide; }).forEach(function (action) { return availableSize -= action.minDimension; });\n        var itemsSizes = this.getActionsToHide().map(function (item) { return item.minDimension; });\n        var currSize = 0;\n        for (var i = 0; i < itemsSizes.length; i++) {\n            currSize += itemsSizes[i];\n            if (currSize > availableSize)\n                return i;\n        }\n        return i;\n    };\n    AdaptiveActionContainer.prototype.updateItemMode = function (availableSize, itemsSize) {\n        var items = this.visibleActions;\n        for (var index = items.length - 1; index >= 0; index--) {\n            if (itemsSize > availableSize && !items[index].disableShrink) {\n                itemsSize -= items[index].maxDimension - items[index].minDimension;\n                items[index].mode = \"small\";\n            }\n            else {\n                items[index].mode = \"large\";\n            }\n        }\n        if (itemsSize > availableSize) {\n            var hidableItems = this.visibleActions.filter(function (a) { return a.removePriority; });\n            hidableItems.sort(function (a, b) { return a.removePriority - b.removePriority; });\n            for (var index = 0; index < hidableItems.length; index++) {\n                if (itemsSize > availableSize) {\n                    itemsSize -= items[index].disableShrink ? hidableItems[index].maxDimension : hidableItems[index].minDimension;\n                    hidableItems[index].mode = \"removed\";\n                }\n            }\n        }\n    };\n    Object.defineProperty(AdaptiveActionContainer.prototype, \"hiddenItemsListModel\", {\n        get: function () {\n            return this.dotsItem.data;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    AdaptiveActionContainer.prototype.hiddenItemSelected = function (item) {\n        if (!!item && typeof item.action === \"function\") {\n            item.action();\n        }\n    };\n    AdaptiveActionContainer.prototype.onSet = function () {\n        var _this = this;\n        this.actions.forEach(function (action) { return action.updateCallback = function (isResetInitialized) { return _this.raiseUpdate(isResetInitialized); }; });\n        _super.prototype.onSet.call(this);\n    };\n    AdaptiveActionContainer.prototype.onPush = function (item) {\n        var _this = this;\n        item.updateCallback = function (isResetInitialized) { return _this.raiseUpdate(isResetInitialized); };\n        _super.prototype.onPush.call(this, item);\n    };\n    AdaptiveActionContainer.prototype.getRenderedActions = function () {\n        if (this.actions.length === 1 && !!this.actions[0].iconName)\n            return this.actions;\n        return this.actions.concat([this.dotsItem]);\n    };\n    AdaptiveActionContainer.prototype.raiseUpdate = function (isResetInitialized) {\n        if (!this.isResponsivenessDisabled) {\n            _super.prototype.raiseUpdate.call(this, isResetInitialized);\n        }\n    };\n    AdaptiveActionContainer.prototype.fit = function (dimension, dotsItemSize) {\n        if (dimension <= 0)\n            return;\n        this.dotsItem.visible = false;\n        var minSize = 0;\n        var maxSize = 0;\n        var items = this.visibleActions;\n        items.forEach(function (item) {\n            minSize += item.minDimension;\n            maxSize += item.maxDimension;\n        });\n        if (dimension >= maxSize) {\n            this.setActionsMode(\"large\");\n        }\n        else if (dimension < minSize) {\n            this.setActionsMode(\"small\");\n            this.hideItemsGreaterN(this.getVisibleItemsCount(dimension - dotsItemSize));\n            this.dotsItem.visible = !!this.hiddenItemsListModel.actions.length;\n        }\n        else {\n            this.updateItemMode(dimension, maxSize);\n        }\n    };\n    AdaptiveActionContainer.prototype.initResponsivityManager = function (container, delayedUpdateFunction) {\n        this.responsivityManager = new _utils_responsivity_manager__WEBPACK_IMPORTED_MODULE_0__[\"ResponsivityManager\"](container, this, \":scope > .sv-action:not(.sv-dots) > .sv-action__content\", null, delayedUpdateFunction);\n    };\n    AdaptiveActionContainer.prototype.resetResponsivityManager = function () {\n        if (!!this.responsivityManager) {\n            this.responsivityManager.dispose();\n            this.responsivityManager = undefined;\n        }\n    };\n    AdaptiveActionContainer.prototype.setActionsMode = function (mode) {\n        this.actions.forEach(function (action) {\n            if (mode == \"small\" && action.disableShrink)\n                return;\n            action.mode = mode;\n        });\n    };\n    AdaptiveActionContainer.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.dotsItem.data.dispose();\n        this.dotsItem.dispose();\n        this.resetResponsivityManager();\n    };\n    AdaptiveActionContainer.ContainerID = 1;\n    return AdaptiveActionContainer;\n}(_container__WEBPACK_IMPORTED_MODULE_2__[\"ActionContainer\"]));\n\n\n\n/***/ }),\n\n/***/ \"./src/actions/container.ts\":\n/*!**********************************!*\\\n  !*** ./src/actions/container.ts ***!\n  \\**********************************/\n/*! exports provided: defaultActionBarCss, ActionContainer */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_35007__) {\n\n\"use strict\";\n__nested_webpack_require_35007__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_35007__.d(__nested_webpack_exports__, \"defaultActionBarCss\", function() { return defaultActionBarCss; });\n/* harmony export (binding) */ __nested_webpack_require_35007__.d(__nested_webpack_exports__, \"ActionContainer\", function() { return ActionContainer; });\n/* harmony import */ var _jsonobject__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_35007__(/*! ../jsonobject */ \"./src/jsonobject.ts\");\n/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_35007__(/*! ../base */ \"./src/base.ts\");\n/* harmony import */ var _action__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_35007__(/*! ./action */ \"./src/actions/action.ts\");\n/* harmony import */ var _utils_cssClassBuilder__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_35007__(/*! ../utils/cssClassBuilder */ \"./src/utils/cssClassBuilder.ts\");\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_35007__(/*! ../utils/utils */ \"./src/utils/utils.ts\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = ( false) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n\n\n\n\nvar defaultActionBarCss = {\n    root: \"sv-action-bar\",\n    defaultSizeMode: \"sv-action-bar--default-size-mode\",\n    smallSizeMode: \"sv-action-bar--small-size-mode\",\n    item: \"sv-action-bar-item\",\n    itemWithTitle: \"\",\n    itemAsIcon: \"sv-action-bar-item--icon\",\n    itemActive: \"sv-action-bar-item--active\",\n    itemPressed: \"sv-action-bar-item--pressed\",\n    itemIcon: \"sv-action-bar-item__icon\",\n    itemTitle: \"sv-action-bar-item__title\",\n    itemTitleWithIcon: \"sv-action-bar-item__title--with-icon\",\n};\nvar ActionContainer = /** @class */ (function (_super) {\n    __extends(ActionContainer, _super);\n    function ActionContainer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.sizeMode = \"default\";\n        return _this;\n    }\n    ActionContainer.prototype.getMarkdownHtml = function (text, name) {\n        return !!this.locOwner ? this.locOwner.getMarkdownHtml(text, name) : undefined;\n    };\n    ActionContainer.prototype.getRenderer = function (name) {\n        return !!this.locOwner ? this.locOwner.getRenderer(name) : null;\n    };\n    ActionContainer.prototype.getRendererContext = function (locStr) {\n        return !!this.locOwner ? this.locOwner.getRendererContext(locStr) : locStr;\n    };\n    ActionContainer.prototype.getProcessedText = function (text) {\n        return this.locOwner ? this.locOwner.getProcessedText(text) : text;\n    };\n    ActionContainer.prototype.getLocale = function () {\n        return !!this.locOwner ? this.locOwner.getLocale() : \"\";\n    };\n    ActionContainer.prototype.getRenderedActions = function () {\n        return this.actions;\n    };\n    ActionContainer.prototype.locStrsChanged = function () {\n        _super.prototype.locStrsChanged.call(this);\n        this.actions.forEach(function (item) {\n            if (item.locTitle)\n                item.locTitle.strChanged();\n            item.locStrsChanged();\n        });\n    };\n    ActionContainer.prototype.raiseUpdate = function (isResetInitialized) {\n        this.isEmpty = !this.actions.some(function (action) { return action.visible; });\n        this.updateCallback && this.updateCallback(isResetInitialized);\n    };\n    ActionContainer.prototype.onSet = function () {\n        var _this = this;\n        this.actions.forEach(function (item) { _this.setActionCssClasses(item); });\n        this.raiseUpdate(true);\n    };\n    ActionContainer.prototype.onPush = function (item) {\n        this.setActionCssClasses(item);\n        item.owner = this;\n        this.raiseUpdate(true);\n    };\n    ActionContainer.prototype.onRemove = function (item) {\n        item.owner = null;\n        this.raiseUpdate(true);\n    };\n    ActionContainer.prototype.setActionCssClasses = function (item) {\n        item.cssClasses = this.cssClasses;\n    };\n    Object.defineProperty(ActionContainer.prototype, \"hasActions\", {\n        get: function () {\n            return (this.actions || []).length > 0;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ActionContainer.prototype, \"renderedActions\", {\n        get: function () {\n            return this.getRenderedActions();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ActionContainer.prototype, \"visibleActions\", {\n        get: function () {\n            return this.actions.filter(function (action) { return action.visible !== false; });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ActionContainer.prototype.getRootCss = function () {\n        var sizeModeClass = this.sizeMode === \"small\" ? this.cssClasses.smallSizeMode : this.cssClasses.defaultSizeMode;\n        return new _utils_cssClassBuilder__WEBPACK_IMPORTED_MODULE_3__[\"CssClassBuilder\"]().append(this.cssClasses.root + (!!sizeModeClass ? \" \" + sizeModeClass : \"\") + (!!this.containerCss ? \" \" + this.containerCss : \"\"))\n            .append(this.cssClasses.root + \"--empty\", this.isEmpty)\n            .toString();\n    };\n    ActionContainer.prototype.getDefaultCssClasses = function () {\n        return defaultActionBarCss;\n    };\n    Object.defineProperty(ActionContainer.prototype, \"cssClasses\", {\n        get: function () {\n            if (!this.cssClassesValue) {\n                this.cssClassesValue = this.getDefaultCssClasses();\n            }\n            return this.cssClassesValue;\n        },\n        set: function (val) {\n            var _this = this;\n            this.cssClassesValue = {};\n            this.copyCssClasses(this.cssClassesValue, this.getDefaultCssClasses());\n            Object(_utils_utils__WEBPACK_IMPORTED_MODULE_4__[\"mergeValues\"])(val, this.cssClasses);\n            this.actions.forEach(function (action) {\n                _this.setActionCssClasses(action);\n            });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ActionContainer.prototype.createAction = function (item) {\n        return (item instanceof _action__WEBPACK_IMPORTED_MODULE_2__[\"BaseAction\"] ? item : new _action__WEBPACK_IMPORTED_MODULE_2__[\"Action\"](item));\n    };\n    ActionContainer.prototype.addAction = function (val, sortByVisibleIndex) {\n        if (sortByVisibleIndex === void 0) { sortByVisibleIndex = true; }\n        var res = this.createAction(val);\n        this.actions.push(res);\n        this.sortItems();\n        return res;\n    };\n    ActionContainer.prototype.sortItems = function () {\n        this.actions = []\n            .concat(this.actions.filter(function (item) { return item.visibleIndex === undefined || item.visibleIndex >= 0; }))\n            .sort(function (firstItem, secondItem) {\n            return firstItem.visibleIndex - secondItem.visibleIndex;\n        });\n    };\n    ActionContainer.prototype.setItems = function (items, sortByVisibleIndex) {\n        var _this = this;\n        if (sortByVisibleIndex === void 0) { sortByVisibleIndex = true; }\n        this.actions = items.map(function (item) { return _this.createAction(item); });\n        if (sortByVisibleIndex) {\n            this.sortItems();\n        }\n    };\n    ActionContainer.prototype.initResponsivityManager = function (container, delayedUpdateFunction) {\n        return;\n    };\n    ActionContainer.prototype.resetResponsivityManager = function () { };\n    ActionContainer.prototype.getActionById = function (id) {\n        for (var i = 0; i < this.actions.length; i++) {\n            if (this.actions[i].id === id)\n                return this.actions[i];\n        }\n        return null;\n    };\n    ActionContainer.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.actions.forEach(function (action) { return action.dispose(); });\n        this.actions.length = 0;\n    };\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_0__[\"propertyArray\"])({\n            onSet: function (_, target) {\n                target.onSet();\n            },\n            onPush: function (item, i, target) {\n                target.onPush(item);\n            },\n            onRemove: function (item, i, target) {\n                target.onRemove(item);\n            }\n        })\n    ], ActionContainer.prototype, \"actions\", void 0);\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_0__[\"property\"])({})\n    ], ActionContainer.prototype, \"containerCss\", void 0);\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_0__[\"property\"])({ defaultValue: false })\n    ], ActionContainer.prototype, \"isEmpty\", void 0);\n    return ActionContainer;\n}(_base__WEBPACK_IMPORTED_MODULE_1__[\"Base\"]));\n\n\n\n/***/ }),\n\n/***/ \"./src/base.ts\":\n/*!*********************!*\\\n  !*** ./src/base.ts ***!\n  \\*********************/\n/*! exports provided: Bindings, Dependencies, ComputedUpdater, Base, ArrayChanges, Event, EventBase */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_45208__) {\n\n\"use strict\";\n__nested_webpack_require_45208__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_45208__.d(__nested_webpack_exports__, \"Bindings\", function() { return Bindings; });\n/* harmony export (binding) */ __nested_webpack_require_45208__.d(__nested_webpack_exports__, \"Dependencies\", function() { return Dependencies; });\n/* harmony export (binding) */ __nested_webpack_require_45208__.d(__nested_webpack_exports__, \"ComputedUpdater\", function() { return ComputedUpdater; });\n/* harmony export (binding) */ __nested_webpack_require_45208__.d(__nested_webpack_exports__, \"Base\", function() { return Base; });\n/* harmony export (binding) */ __nested_webpack_require_45208__.d(__nested_webpack_exports__, \"ArrayChanges\", function() { return ArrayChanges; });\n/* harmony export (binding) */ __nested_webpack_require_45208__.d(__nested_webpack_exports__, \"Event\", function() { return Event; });\n/* harmony export (binding) */ __nested_webpack_require_45208__.d(__nested_webpack_exports__, \"EventBase\", function() { return EventBase; });\n/* harmony import */ var _localizablestring__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_45208__(/*! ./localizablestring */ \"./src/localizablestring.ts\");\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_45208__(/*! ./helpers */ \"./src/helpers.ts\");\n/* harmony import */ var _jsonobject__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_45208__(/*! ./jsonobject */ \"./src/jsonobject.ts\");\n/* harmony import */ var _settings__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_45208__(/*! ./settings */ \"./src/settings.ts\");\n/* harmony import */ var _conditions__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_45208__(/*! ./conditions */ \"./src/conditions.ts\");\n/* harmony import */ var _surveyStrings__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_45208__(/*! ./surveyStrings */ \"./src/surveyStrings.ts\");\n/* harmony import */ var _console_warnings__WEBPACK_IMPORTED_MODULE_6__ = __nested_webpack_require_45208__(/*! ./console-warnings */ \"./src/console-warnings.ts\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __spreadArray = ( false) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\n\n\n\n\n\n\n\nvar Bindings = /** @class */ (function () {\n    function Bindings(obj) {\n        this.obj = obj;\n        this.properties = null;\n        this.values = null;\n    }\n    Bindings.prototype.getType = function () {\n        return \"bindings\";\n    };\n    Bindings.prototype.getNames = function () {\n        var res = [];\n        this.fillProperties();\n        for (var i = 0; i < this.properties.length; i++) {\n            if (this.properties[i].isVisible(\"\", this.obj)) {\n                res.push(this.properties[i].name);\n            }\n        }\n        return res;\n    };\n    Bindings.prototype.getProperties = function () {\n        var res = [];\n        this.fillProperties();\n        for (var i = 0; i < this.properties.length; i++) {\n            res.push(this.properties[i]);\n        }\n        return res;\n    };\n    Bindings.prototype.setBinding = function (propertyName, valueName) {\n        if (!this.values)\n            this.values = {};\n        var oldValue = this.getJson();\n        if (oldValue === valueName)\n            return;\n        if (!!valueName) {\n            this.values[propertyName] = valueName;\n        }\n        else {\n            delete this.values[propertyName];\n            if (Object.keys(this.values).length == 0) {\n                this.values = null;\n            }\n        }\n        this.onChangedJSON(oldValue);\n    };\n    Bindings.prototype.clearBinding = function (propertyName) {\n        this.setBinding(propertyName, \"\");\n    };\n    Bindings.prototype.isEmpty = function () {\n        if (!this.values)\n            return true;\n        for (var key in this.values)\n            return false;\n        return true;\n    };\n    Bindings.prototype.getValueNameByPropertyName = function (propertyName) {\n        if (!this.values)\n            return undefined;\n        return this.values[propertyName];\n    };\n    Bindings.prototype.getPropertiesByValueName = function (valueName) {\n        if (!this.values)\n            return [];\n        var res = [];\n        for (var key in this.values) {\n            if (this.values[key] == valueName) {\n                res.push(key);\n            }\n        }\n        return res;\n    };\n    Bindings.prototype.getJson = function () {\n        if (this.isEmpty())\n            return undefined;\n        var res = {};\n        for (var key in this.values) {\n            res[key] = this.values[key];\n        }\n        return res;\n    };\n    Bindings.prototype.setJson = function (value) {\n        var oldValue = this.getJson();\n        this.values = null;\n        if (!!value) {\n            this.values = {};\n            for (var key in value) {\n                this.values[key] = value[key];\n            }\n        }\n        this.onChangedJSON(oldValue);\n    };\n    Bindings.prototype.fillProperties = function () {\n        if (this.properties !== null)\n            return;\n        this.properties = [];\n        var objProperties = _jsonobject__WEBPACK_IMPORTED_MODULE_2__[\"Serializer\"].getPropertiesByObj(this.obj);\n        for (var i = 0; i < objProperties.length; i++) {\n            if (objProperties[i].isBindable) {\n                this.properties.push(objProperties[i]);\n            }\n        }\n    };\n    Bindings.prototype.onChangedJSON = function (oldValue) {\n        if (this.obj) {\n            this.obj.onBindingChanged(oldValue, this.getJson());\n        }\n    };\n    return Bindings;\n}());\n\nvar Dependencies = /** @class */ (function () {\n    function Dependencies(currentDependency, target, property) {\n        this.currentDependency = currentDependency;\n        this.target = target;\n        this.property = property;\n        this.dependencies = [];\n        this.id = \"\" + (++Dependencies.DependenciesCount);\n    }\n    Dependencies.prototype.addDependency = function (target, property) {\n        if (this.target === target && this.property === property)\n            return;\n        if (this.dependencies.some(function (dependency) { return dependency.obj === target && dependency.prop === property; }))\n            return;\n        this.dependencies.push({\n            obj: target,\n            prop: property,\n            id: this.id\n        });\n        target.registerPropertyChangedHandlers([property], this.currentDependency, this.id);\n    };\n    Dependencies.prototype.dispose = function () {\n        this.dependencies.forEach(function (dependency) {\n            dependency.obj.unregisterPropertyChangedHandlers([dependency.prop], dependency.id);\n        });\n        // this.currentDependency = undefined;\n    };\n    Dependencies.DependenciesCount = 0;\n    return Dependencies;\n}());\n\nvar ComputedUpdater = /** @class */ (function () {\n    function ComputedUpdater(_updater) {\n        this._updater = _updater;\n        this.dependencies = undefined;\n        this.type = ComputedUpdater.ComputedUpdaterType;\n    }\n    Object.defineProperty(ComputedUpdater.prototype, \"updater\", {\n        get: function () {\n            return this._updater;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ComputedUpdater.prototype.setDependencies = function (dependencies) {\n        this.clearDependencies();\n        this.dependencies = dependencies;\n    };\n    ComputedUpdater.prototype.getDependencies = function () {\n        return this.dependencies;\n    };\n    ComputedUpdater.prototype.clearDependencies = function () {\n        if (this.dependencies) {\n            this.dependencies.dispose();\n            this.dependencies = undefined;\n        }\n    };\n    ComputedUpdater.prototype.dispose = function () {\n        this.clearDependencies();\n    };\n    ComputedUpdater.ComputedUpdaterType = \"__dependency_computed\";\n    return ComputedUpdater;\n}());\n\n/**\n * A base class for all SurveyJS objects.\n */\nvar Base = /** @class */ (function () {\n    function Base() {\n        this.dependencies = {};\n        this.propertyHash = Base.createPropertiesHash();\n        this.eventList = [];\n        this.isLoadingFromJsonValue = false;\n        this.loadingOwner = null;\n        /**\n         * An event that is raised when a property of this SurveyJS object has changed.\n         *\n         * Parameters:\n         *\n         * - `sender`: `this`\\\n         * A SurveyJS object whose property has changed.\n         * - `options.name`: `string`\\\n         * The name of the changed property.\n         * - `options.newValue`: `any`\\\n         * A new value for the property.\n         * - `options.oldValue`: `any`\\\n         * An old value of the property. If the property is an array, `oldValue` contains the same array as `newValue` does.\n         */\n        this.onPropertyChanged = this.addEvent();\n        /**\n         * An event that is raised when an [`ItemValue`](https://surveyjs.io/form-library/documentation/itemvalue) property is changed.\n         *\n         * Parameters:\n         *\n         * - `sender`: `this`\\\n         * A SurveyJS object whose property contains an array of `ItemValue` objects.\n         * - `options.obj`: [`ItemValue`](https://surveyjs.io/form-library/documentation/itemvalue)\\\n         * An `ItemValue` object.\n         * - `options.propertyName`: `string`\\\n         * The name of the property to which an array of `ItemValue` objects is assigned (for example, `\"choices\"` or `\"rows\"`).\n         * - `options.name`: `\"text\"` | `\"value\"`\\\n         * The name of the changed property.\n         * - `options.newValue`: `any`\\\n         * A new value for the property.\n         */\n        this.onItemValuePropertyChanged = this.addEvent();\n        this.isCreating = true;\n        this.bindingsValue = new Bindings(this);\n        _jsonobject__WEBPACK_IMPORTED_MODULE_2__[\"CustomPropertiesCollection\"].createProperties(this);\n        this.onBaseCreating();\n        this.isCreating = false;\n    }\n    Base.finishCollectDependencies = function () {\n        var deps = Base.currentDependencis;\n        Base.currentDependencis = undefined;\n        return deps;\n    };\n    Base.startCollectDependencies = function (updater, target, property) {\n        if (Base.currentDependencis !== undefined) {\n            throw new Error(\"Attempt to collect nested dependencies. Nested dependencies are not supported.\");\n        }\n        Base.currentDependencis = new Dependencies(updater, target, property);\n    };\n    Base.collectDependency = function (target, property) {\n        if (Base.currentDependencis === undefined)\n            return;\n        Base.currentDependencis.addDependency(target, property);\n    };\n    Object.defineProperty(Base, \"commentSuffix\", {\n        get: function () {\n            return _settings__WEBPACK_IMPORTED_MODULE_3__[\"settings\"].commentSuffix;\n        },\n        set: function (val) {\n            _settings__WEBPACK_IMPORTED_MODULE_3__[\"settings\"].commentSuffix = val;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Base, \"commentPrefix\", {\n        get: function () {\n            return Base.commentSuffix;\n        },\n        set: function (val) {\n            Base.commentSuffix = val;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Returns `true` if a passed `value` is an empty string, array, or object or if it equals to `undefined` or `null`.\n     *\n     * @param value A value to be checked.\n     * @param trimString *(Optional)* When this parameter is `true`, the method ignores whitespace characters at the beginning and end of a string value. Pass `false` to disable this functionality.\n     */\n    Base.prototype.isValueEmpty = function (value, trimString) {\n        if (trimString === void 0) { trimString = true; }\n        if (trimString) {\n            value = this.trimValue(value);\n        }\n        return _helpers__WEBPACK_IMPORTED_MODULE_1__[\"Helpers\"].isValueEmpty(value);\n    };\n    Base.prototype.equals = function (obj) {\n        if (!obj)\n            return false;\n        if (this.isDisposed || obj.isDisposed)\n            return false;\n        if (this.getType() != obj.getType())\n            return false;\n        return this.equalsCore(obj);\n    };\n    Base.prototype.equalsCore = function (obj) {\n        if (this.name !== obj.name)\n            return false;\n        return _helpers__WEBPACK_IMPORTED_MODULE_1__[\"Helpers\"].isTwoValueEquals(this.toJSON(), obj.toJSON(), false, true, false);\n    };\n    Base.prototype.trimValue = function (value) {\n        if (!!value && (typeof value === \"string\" || value instanceof String))\n            return value.trim();\n        return value;\n    };\n    Base.prototype.isPropertyEmpty = function (value) {\n        return value !== \"\" && this.isValueEmpty(value);\n    };\n    Base.createPropertiesHash = function () {\n        return {};\n    };\n    Base.prototype.dispose = function () {\n        var _this = this;\n        for (var i = 0; i < this.eventList.length; i++) {\n            this.eventList[i].clear();\n        }\n        this.onPropertyValueChangedCallback = undefined;\n        this.isDisposedValue = true;\n        Object.keys(this.dependencies).forEach(function (key) { return _this.dependencies[key].dispose(); });\n    };\n    Object.defineProperty(Base.prototype, \"isDisposed\", {\n        get: function () {\n            return this.isDisposedValue === true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Base.prototype.addEvent = function () {\n        var res = new EventBase();\n        this.eventList.push(res);\n        return res;\n    };\n    Base.prototype.onBaseCreating = function () { };\n    /**\n     * Returns the object type as it is used in the JSON schema.\n     */\n    Base.prototype.getType = function () {\n        return \"base\";\n    };\n    /**\n     * Use this method to find out if the current object is of a given `typeName` or inherited from it.\n     *\n     * @param typeName One of the values listed in the [getType()](https://surveyjs.io/form-library/documentation/question#getType) description.\n     * @returns `true` if the current object is of a given `typeName` or inherited from it.\n     * @see getType\n     */\n    Base.prototype.isDescendantOf = function (typeName) {\n        return _jsonobject__WEBPACK_IMPORTED_MODULE_2__[\"Serializer\"].isDescendantOf(this.getType(), typeName);\n    };\n    Base.prototype.getSurvey = function (isLive) {\n        if (isLive === void 0) { isLive = false; }\n        return null;\n    };\n    Object.defineProperty(Base.prototype, \"isDesignMode\", {\n        /**\n         * Returns `true` if the survey is being designed in Survey Creator.\n         */\n        get: function () {\n            var survey = this.getSurvey();\n            return !!survey && survey.isDesignMode;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Base.prototype, \"isDesignModeV2\", {\n        get: function () {\n            return _settings__WEBPACK_IMPORTED_MODULE_3__[\"settings\"].supportCreatorV2 && this.isDesignMode;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Base.prototype, \"inSurvey\", {\n        /**\n         * Returns `true` if the object is included in a survey.\n         *\n         * This property may return `false`, for example, when you [create a survey model dynamically](https://surveyjs.io/form-library/documentation/design-survey-create-a-simple-survey#create-or-change-a-survey-model-dynamically).\n         */\n        get: function () {\n            return !!this.getSurvey(true);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Base.prototype, \"bindings\", {\n        get: function () {\n            return this.bindingsValue;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Base.prototype.checkBindings = function (valueName, value) { };\n    Base.prototype.updateBindings = function (propertyName, value) {\n        var valueName = this.bindings.getValueNameByPropertyName(propertyName);\n        if (!!valueName) {\n            this.updateBindingValue(valueName, value);\n        }\n    };\n    Base.prototype.updateBindingValue = function (valueName, value) { };\n    Base.prototype.getTemplate = function () {\n        return this.getType();\n    };\n    Object.defineProperty(Base.prototype, \"isLoadingFromJson\", {\n        /**\n         * Returns `true` if the object configuration is being loaded from JSON.\n         */\n        get: function () {\n            return this.isLoadingFromJsonValue || this.getIsLoadingFromJson();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Base.prototype.getIsLoadingFromJson = function () {\n        if (!!this.loadingOwner && this.loadingOwner.isLoadingFromJson)\n            return true;\n        return this.isLoadingFromJsonValue;\n    };\n    Base.prototype.startLoadingFromJson = function (json) {\n        this.isLoadingFromJsonValue = true;\n        this.jsonObj = json;\n    };\n    Base.prototype.endLoadingFromJson = function () {\n        this.isLoadingFromJsonValue = false;\n    };\n    /**\n     * Returns a JSON object that corresponds to the current SurveyJS object.\n     * @see fromJSON\n     */\n    Base.prototype.toJSON = function (options) {\n        return new _jsonobject__WEBPACK_IMPORTED_MODULE_2__[\"JsonObject\"]().toJsonObject(this, options);\n    };\n    /**\n     * Assigns a new configuration to the current SurveyJS object. This configuration is taken from a passed JSON object.\n     *\n     * The JSON object should contain only serializable properties of this SurveyJS object. Event handlers and properties that do not belong to the SurveyJS object are ignored.\n     *\n     * @param json A JSON object with properties that you want to apply to the current SurveyJS object.\n     * @param options An object with configuration options.\n     * @param {boolean} options.validatePropertyValues Pass `true` if you want to validate property values. Use the [`jsonErrors`](#jsonErrors) array to access validation errors.\n     * @see toJSON\n     */\n    Base.prototype.fromJSON = function (json, options) {\n        new _jsonobject__WEBPACK_IMPORTED_MODULE_2__[\"JsonObject\"]().toObject(json, this, options);\n        this.onSurveyLoad();\n    };\n    Base.prototype.onSurveyLoad = function () { };\n    /**\n     * Creates a new object that has the same type and properties as the current SurveyJS object.\n     */\n    Base.prototype.clone = function () {\n        var clonedObj = _jsonobject__WEBPACK_IMPORTED_MODULE_2__[\"Serializer\"].createClass(this.getType());\n        clonedObj.fromJSON(this.toJSON());\n        return clonedObj;\n    };\n    /**\n     * Returns a `JsonObjectProperty` object with metadata about a serializable property that belongs to the current SurveyJS object.\n     *\n     * If the property is not found, this method returns `null`.\n     * @param propName A property name.\n     */\n    Base.prototype.getPropertyByName = function (propName) {\n        var type = this.getType();\n        if (!this.classMetaData || this.classMetaData.name !== type) {\n            this.classMetaData = _jsonobject__WEBPACK_IMPORTED_MODULE_2__[\"Serializer\"].findClass(type);\n        }\n        return !!this.classMetaData ? this.classMetaData.findProperty(propName) : null;\n    };\n    Base.prototype.isPropertyVisible = function (propName) {\n        var prop = this.getPropertyByName(propName);\n        return !!prop ? prop.isVisible(\"\", this) : false;\n    };\n    Base.createProgressInfo = function () {\n        return {\n            questionCount: 0,\n            answeredQuestionCount: 0,\n            requiredQuestionCount: 0,\n            requiredAnsweredQuestionCount: 0,\n        };\n    };\n    Base.prototype.getProgressInfo = function () {\n        return Base.createProgressInfo();\n    };\n    Base.prototype.localeChanged = function () { };\n    Base.prototype.locStrsChanged = function () {\n        if (!!this.arraysInfo) {\n            for (var key in this.arraysInfo) {\n                var item = this.arraysInfo[key];\n                if (item && item.isItemValues) {\n                    var arr = this.getPropertyValue(key);\n                    if (arr && !!Base.itemValueLocStrChanged)\n                        Base.itemValueLocStrChanged(arr);\n                }\n            }\n        }\n        if (!!this.localizableStrings) {\n            for (var key in this.localizableStrings) {\n                var item = this.getLocalizableString(key);\n                if (item)\n                    item.strChanged();\n            }\n        }\n    };\n    /**\n     * Returns the value of a property with a specified name.\n     *\n     * If the property is not found or does not have a value, this method returns either `undefined`, `defaultValue` specified in the property configuration, or a value passed as the `defaultValue` parameter.\n     *\n     * @param name A property name.\n     * @param defaultValue *(Optional)* A value to return if the property is not found or does not have a value.\n     */\n    Base.prototype.getPropertyValue = function (name, defaultValue) {\n        if (defaultValue === void 0) { defaultValue = null; }\n        var res = this.getPropertyValueWithoutDefault(name);\n        if (this.isPropertyEmpty(res)) {\n            var locStr = this.localizableStrings ? this.localizableStrings[name] : undefined;\n            if (locStr)\n                return locStr.text;\n            if (defaultValue !== null && defaultValue !== undefined)\n                return defaultValue;\n            var propDefaultValue = this.getDefaultPropertyValue(name);\n            if (propDefaultValue !== undefined)\n                return propDefaultValue;\n        }\n        return res;\n    };\n    Base.prototype.getDefaultPropertyValue = function (name) {\n        var prop = this.getPropertyByName(name);\n        if (!prop || prop.isCustom && this.isCreating)\n            return undefined;\n        var dValue = prop.defaultValue;\n        if (!this.isPropertyEmpty(dValue) && !Array.isArray(dValue))\n            return dValue;\n        var locStr = this.localizableStrings ? this.localizableStrings[name] : undefined;\n        if (locStr && locStr.localizationName)\n            return this.getLocalizationString(locStr.localizationName);\n        if (prop.type == \"boolean\" || prop.type == \"switch\")\n            return false;\n        if (prop.isCustom && !!prop.onGetValue)\n            return prop.onGetValue(this);\n        return undefined;\n    };\n    Base.prototype.hasDefaultPropertyValue = function (name) {\n        return this.getDefaultPropertyValue(name) !== undefined;\n    };\n    Base.prototype.resetPropertyValue = function (name) {\n        var locStr = this.localizableStrings ? this.localizableStrings[name] : undefined;\n        if (locStr) {\n            this.setLocalizableStringText(name, undefined);\n            locStr.clear();\n        }\n        else {\n            this.setPropertyValue(name, undefined);\n        }\n    };\n    Base.prototype.getPropertyValueWithoutDefault = function (name) {\n        return this.getPropertyValueCore(this.propertyHash, name);\n    };\n    Base.prototype.getPropertyValueCore = function (propertiesHash, name) {\n        if (!this.isLoadingFromJson) {\n            Base.collectDependency(this, name);\n        }\n        if (this.getPropertyValueCoreHandler)\n            return this.getPropertyValueCoreHandler(propertiesHash, name);\n        else\n            return propertiesHash[name];\n    };\n    Base.prototype.geValueFromHash = function () {\n        return this.propertyHash[\"value\"];\n    };\n    Base.prototype.setPropertyValueCore = function (propertiesHash, name, val) {\n        if (this.setPropertyValueCoreHandler) {\n            if (!this.isDisposedValue) {\n                this.setPropertyValueCoreHandler(propertiesHash, name, val);\n            }\n            else {\n                _console_warnings__WEBPACK_IMPORTED_MODULE_6__[\"ConsoleWarnings\"].disposedObjectChangedProperty(name, this.getType());\n            }\n        }\n        else\n            propertiesHash[name] = val;\n    };\n    Object.defineProperty(Base.prototype, \"isEditingSurveyElement\", {\n        get: function () {\n            var survey = this.getSurvey();\n            return !!survey && survey.isEditingSurveyElement;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Base.prototype.iteratePropertiesHash = function (func) {\n        var _this = this;\n        var keys = [];\n        for (var key in this.propertyHash) {\n            if (key === \"value\" &&\n                this.isEditingSurveyElement &&\n                Array.isArray(this.value))\n                continue;\n            keys.push(key);\n        }\n        keys.forEach(function (key) { return func(_this.propertyHash, key); });\n    };\n    /**\n     * Assigns a new value to a specified property.\n     * @param name A property name.\n     * @param val A new value for the property.\n     */\n    Base.prototype.setPropertyValue = function (name, val) {\n        if (name) {\n        }\n        if (!this.isLoadingFromJson) {\n            var prop = this.getPropertyByName(name);\n            if (!!prop) {\n                val = prop.settingValue(this, val);\n            }\n        }\n        var oldValue = this.getPropertyValue(name);\n        if (oldValue &&\n            Array.isArray(oldValue) &&\n            !!this.arraysInfo &&\n            (!val || Array.isArray(val))) {\n            if (!this.isTwoValueEquals(oldValue, val)) {\n                this.setArrayPropertyDirectly(name, val);\n            }\n        }\n        else {\n            this.setPropertyValueDirectly(name, val);\n            if (!this.isDisposedValue && !this.isTwoValueEquals(oldValue, val)) {\n                this.propertyValueChanged(name, oldValue, val);\n            }\n        }\n    };\n    Base.prototype.setArrayPropertyDirectly = function (name, val, sendNotification) {\n        if (sendNotification === void 0) { sendNotification = true; }\n        var arrayInfo = this.arraysInfo[name];\n        this.setArray(name, this.getPropertyValue(name), val, arrayInfo ? arrayInfo.isItemValues : false, arrayInfo ? sendNotification && arrayInfo.onPush : null);\n    };\n    Base.prototype.setPropertyValueDirectly = function (name, val) {\n        this.setPropertyValueCore(this.propertyHash, name, val);\n    };\n    Base.prototype.clearPropertyValue = function (name) {\n        this.setPropertyValueCore(this.propertyHash, name, null);\n        delete this.propertyHash[name];\n    };\n    Base.prototype.onPropertyValueChangedCallback = function (name, oldValue, newValue, sender, arrayChanges) { };\n    Base.prototype.itemValuePropertyChanged = function (item, name, oldValue, newValue) {\n        this.onItemValuePropertyChanged.fire(this, {\n            obj: item,\n            name: name,\n            oldValue: oldValue,\n            newValue: newValue,\n            propertyName: item.ownerPropertyName,\n        });\n    };\n    Base.prototype.onPropertyValueChanged = function (name, oldValue, newValue) { };\n    Base.prototype.propertyValueChanged = function (name, oldValue, newValue, arrayChanges, target) {\n        if (this.isLoadingFromJson)\n            return;\n        this.updateBindings(name, newValue);\n        this.onPropertyValueChanged(name, oldValue, newValue);\n        this.onPropertyChanged.fire(this, {\n            name: name,\n            oldValue: oldValue,\n            newValue: newValue,\n        });\n        this.doPropertyValueChangedCallback(name, oldValue, newValue, arrayChanges, this);\n        this.checkConditionPropertyChanged(name);\n        if (!this.onPropChangeFunctions)\n            return;\n        for (var i = 0; i < this.onPropChangeFunctions.length; i++) {\n            if (this.onPropChangeFunctions[i].name == name)\n                this.onPropChangeFunctions[i].func(newValue, arrayChanges);\n        }\n    };\n    Base.prototype.onBindingChanged = function (oldValue, newValue) {\n        if (this.isLoadingFromJson)\n            return;\n        this.doPropertyValueChangedCallback(\"bindings\", oldValue, newValue);\n    };\n    Object.defineProperty(Base.prototype, \"isInternal\", {\n        get: function () {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Base.prototype.doPropertyValueChangedCallback = function (name, oldValue, newValue, arrayChanges, target) {\n        var fireCallback = function (obj) {\n            if (!!obj && !!obj.onPropertyValueChangedCallback) {\n                obj.onPropertyValueChangedCallback(name, oldValue, newValue, target, arrayChanges);\n            }\n        };\n        if (this.isInternal) {\n            fireCallback(this);\n            return;\n        }\n        if (!target)\n            target = this;\n        var notifier = this.getSurvey();\n        if (!notifier)\n            notifier = this;\n        fireCallback(notifier);\n        if (notifier !== this) {\n            fireCallback(this);\n        }\n    };\n    Base.prototype.addExpressionProperty = function (name, onExecute, canRun) {\n        if (!this.expressionInfo) {\n            this.expressionInfo = {};\n        }\n        this.expressionInfo[name] = { onExecute: onExecute, canRun: canRun };\n    };\n    Base.prototype.getDataFilteredValues = function () {\n        return {};\n    };\n    Base.prototype.getDataFilteredProperties = function () {\n        return {};\n    };\n    Base.prototype.runConditionCore = function (values, properties) {\n        if (!this.expressionInfo)\n            return;\n        for (var key in this.expressionInfo) {\n            this.runConditionItemCore(key, values, properties);\n        }\n    };\n    Base.prototype.canRunConditions = function () {\n        return !this.isDesignMode;\n    };\n    Base.prototype.checkConditionPropertyChanged = function (propName) {\n        if (!this.expressionInfo || !this.expressionInfo[propName])\n            return;\n        if (!this.canRunConditions())\n            return;\n        this.runConditionItemCore(propName, this.getDataFilteredValues(), this.getDataFilteredProperties());\n    };\n    Base.prototype.runConditionItemCore = function (propName, values, properties) {\n        var _this = this;\n        var info = this.expressionInfo[propName];\n        var expression = this.getPropertyValue(propName);\n        if (!expression)\n            return;\n        if (!!info.canRun && !info.canRun(this))\n            return;\n        if (!info.runner) {\n            info.runner = this.createExpressionRunner(expression);\n            info.runner.onRunComplete = function (res) {\n                info.onExecute(_this, res);\n            };\n        }\n        info.runner.expression = expression;\n        info.runner.run(values, properties);\n    };\n    Base.prototype.doBeforeAsynRun = function (id) {\n        if (!this.asynExpressionHash)\n            this.asynExpressionHash = [];\n        var isChanged = !this.isAsyncExpressionRunning;\n        this.asynExpressionHash[id] = true;\n        if (isChanged) {\n            this.onAsyncRunningChanged();\n        }\n    };\n    Base.prototype.doAfterAsynRun = function (id) {\n        if (!!this.asynExpressionHash) {\n            delete this.asynExpressionHash[id];\n            if (!this.isAsyncExpressionRunning) {\n                this.onAsyncRunningChanged();\n            }\n        }\n    };\n    Base.prototype.onAsyncRunningChanged = function () { };\n    Object.defineProperty(Base.prototype, \"isAsyncExpressionRunning\", {\n        get: function () {\n            return !!this.asynExpressionHash && Object.keys(this.asynExpressionHash).length > 0;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Base.prototype.createExpressionRunner = function (expression) {\n        var _this = this;\n        var res = new _conditions__WEBPACK_IMPORTED_MODULE_4__[\"ExpressionRunner\"](expression);\n        res.onBeforeAsyncRun = function (id) { _this.doBeforeAsynRun(id); };\n        res.onAfterAsyncRun = function (id) { _this.doAfterAsynRun(id); };\n        return res;\n    };\n    /**\n     * Registers a function to call when a property value changes.\n     * @param propertyNames An array of one or multiple property names.\n     * @param handler A function to call when one of the listed properties change.\n     * @param key *(Optional)* A key that identifies the current registration. If a function for one of the properties is already registered with the same key, the function will be overwritten. You can also use the key to subsequently unregister handlers.\n     * @see unregisterPropertyChangedHandlers\n     */\n    Base.prototype.registerPropertyChangedHandlers = function (propertyNames, handler, key) {\n        if (key === void 0) { key = null; }\n        for (var i = 0; i < propertyNames.length; i++) {\n            this.registerFunctionOnPropertyValueChanged(propertyNames[i], handler, key);\n        }\n    };\n    /**\n     * Unregisters value change event handlers for the specified properties.\n     * @param propertyNames An array of one or multiple property names.\n     * @param key *(Optional)* A key of the registration that you want to cancel.\n     * @see registerPropertyChangedHandlers\n     */\n    Base.prototype.unregisterPropertyChangedHandlers = function (propertyNames, key) {\n        if (key === void 0) { key = null; }\n        for (var i = 0; i < propertyNames.length; i++) {\n            this.unRegisterFunctionOnPropertyValueChanged(propertyNames[i], key);\n        }\n    };\n    Base.prototype.registerFunctionOnPropertyValueChanged = function (name, func, key) {\n        if (key === void 0) { key = null; }\n        if (!this.onPropChangeFunctions) {\n            this.onPropChangeFunctions = [];\n        }\n        if (key) {\n            for (var i = 0; i < this.onPropChangeFunctions.length; i++) {\n                var item = this.onPropChangeFunctions[i];\n                if (item.name == name && item.key == key) {\n                    item.func = func;\n                    return;\n                }\n            }\n        }\n        this.onPropChangeFunctions.push({ name: name, func: func, key: key });\n    };\n    Base.prototype.registerFunctionOnPropertiesValueChanged = function (names, func, key) {\n        if (key === void 0) { key = null; }\n        this.registerPropertyChangedHandlers(names, func, key);\n    };\n    Base.prototype.unRegisterFunctionOnPropertyValueChanged = function (name, key) {\n        if (key === void 0) { key = null; }\n        if (!this.onPropChangeFunctions)\n            return;\n        for (var i = 0; i < this.onPropChangeFunctions.length; i++) {\n            var item = this.onPropChangeFunctions[i];\n            if (item.name == name && item.key == key) {\n                this.onPropChangeFunctions.splice(i, 1);\n                return;\n            }\n        }\n    };\n    Base.prototype.unRegisterFunctionOnPropertiesValueChanged = function (names, key) {\n        if (key === void 0) { key = null; }\n        this.unregisterPropertyChangedHandlers(names, key);\n    };\n    Base.prototype.createCustomLocalizableObj = function (name) {\n        var locStr = this.getLocalizableString(name);\n        if (locStr)\n            return locStr;\n        return this.createLocalizableString(name, this, false, true);\n    };\n    Base.prototype.getLocale = function () {\n        var locOwner = this.getSurvey();\n        return !!locOwner ? locOwner.getLocale() : \"\";\n    };\n    Base.prototype.getLocalizationString = function (strName) {\n        return _surveyStrings__WEBPACK_IMPORTED_MODULE_5__[\"surveyLocalization\"].getString(strName, this.getLocale());\n    };\n    Base.prototype.getLocalizationFormatString = function (strName) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var str = this.getLocalizationString(strName);\n        if (!str || !str.format)\n            return \"\";\n        return str.format.apply(str, args);\n    };\n    Base.prototype.createLocalizableString = function (name, owner, useMarkDown, defaultStr) {\n        var _this = this;\n        if (useMarkDown === void 0) { useMarkDown = false; }\n        if (defaultStr === void 0) { defaultStr = false; }\n        var locStr = new _localizablestring__WEBPACK_IMPORTED_MODULE_0__[\"LocalizableString\"](owner, useMarkDown, name);\n        if (defaultStr) {\n            locStr.localizationName = defaultStr === true ? name : defaultStr;\n        }\n        locStr.onStrChanged = function (oldValue, newValue) {\n            _this.propertyValueChanged(name, oldValue, newValue);\n        };\n        if (!this.localizableStrings) {\n            this.localizableStrings = {};\n        }\n        this.localizableStrings[name] = locStr;\n        var prop = this.getPropertyByName(name);\n        locStr.disableLocalization = prop && prop.isLocalizable === false;\n        return locStr;\n    };\n    Base.prototype.getLocalizableString = function (name) {\n        return !!this.localizableStrings ? this.localizableStrings[name] : null;\n    };\n    Base.prototype.getLocalizableStringText = function (name, defaultStr) {\n        if (defaultStr === void 0) { defaultStr = \"\"; }\n        Base.collectDependency(this, name);\n        var locStr = this.getLocalizableString(name);\n        if (!locStr)\n            return \"\";\n        var res = locStr.text;\n        return res ? res : defaultStr;\n    };\n    Base.prototype.setLocalizableStringText = function (name, value) {\n        var locStr = this.getLocalizableString(name);\n        if (!locStr)\n            return;\n        var oldValue = locStr.text;\n        if (oldValue != value) {\n            locStr.text = value;\n            // this.propertyValueChanged(name, oldValue, value);\n        }\n    };\n    Base.prototype.addUsedLocales = function (locales) {\n        if (!!this.localizableStrings) {\n            for (var key in this.localizableStrings) {\n                var item = this.getLocalizableString(key);\n                if (item)\n                    this.AddLocStringToUsedLocales(item, locales);\n            }\n        }\n        if (!!this.arraysInfo) {\n            for (var key in this.arraysInfo) {\n                var items = this.getPropertyValue(key);\n                if (!items || !items.length)\n                    continue;\n                for (var i = 0; i < items.length; i++) {\n                    var item = items[i];\n                    if (item && item.addUsedLocales) {\n                        item.addUsedLocales(locales);\n                    }\n                }\n            }\n        }\n    };\n    Base.prototype.searchText = function (text, founded) {\n        var strs = [];\n        this.getSearchableLocalizedStrings(strs);\n        for (var i = 0; i < strs.length; i++) {\n            if (strs[i].setFindText(text)) {\n                founded.push({ element: this, str: strs[i] });\n            }\n        }\n    };\n    Base.prototype.getSearchableLocalizedStrings = function (arr) {\n        if (!!this.localizableStrings) {\n            var keys_1 = [];\n            this.getSearchableLocKeys(keys_1);\n            for (var i = 0; i < keys_1.length; i++) {\n                var item = this.getLocalizableString(keys_1[i]);\n                if (item)\n                    arr.push(item);\n            }\n        }\n        if (!this.arraysInfo)\n            return;\n        var keys = [];\n        this.getSearchableItemValueKeys(keys);\n        for (var i = 0; i < keys.length; i++) {\n            var items = this.getPropertyValue(keys[i]);\n            if (!items)\n                continue;\n            for (var j = 0; j < items.length; j++) {\n                arr.push(items[j].locText);\n            }\n        }\n    };\n    Base.prototype.getSearchableLocKeys = function (keys) { };\n    Base.prototype.getSearchableItemValueKeys = function (keys) { };\n    Base.prototype.AddLocStringToUsedLocales = function (locStr, locales) {\n        var locs = locStr.getLocales();\n        for (var i = 0; i < locs.length; i++) {\n            if (locales.indexOf(locs[i]) < 0) {\n                locales.push(locs[i]);\n            }\n        }\n    };\n    Base.prototype.createItemValues = function (name) {\n        var self = this;\n        var result = this.createNewArray(name, function (item) {\n            item.locOwner = self;\n            item.ownerPropertyName = name;\n            if (typeof item.getSurvey == \"function\") {\n                var survey = item.getSurvey();\n                if (!!survey && typeof survey.makeReactive == \"function\") {\n                    survey.makeReactive(item);\n                }\n            }\n        });\n        this.arraysInfo[name].isItemValues = true;\n        return result;\n    };\n    Base.prototype.notifyArrayChanged = function (ar, arrayChanges) {\n        !!ar.onArrayChanged && ar.onArrayChanged(arrayChanges);\n    };\n    Base.prototype.createNewArrayCore = function (name) {\n        var res = null;\n        if (!!this.createArrayCoreHandler) {\n            res = this.createArrayCoreHandler(this.propertyHash, name);\n        }\n        if (!res) {\n            res = new Array();\n            this.setPropertyValueCore(this.propertyHash, name, res);\n        }\n        return res;\n    };\n    Base.prototype.ensureArray = function (name, onPush, onRemove) {\n        if (onPush === void 0) { onPush = null; }\n        if (onRemove === void 0) { onRemove = null; }\n        if (this.arraysInfo && this.arraysInfo[name]) {\n            return;\n        }\n        return this.createNewArray(name, onPush, onRemove);\n    };\n    Base.prototype.createNewArray = function (name, onPush, onRemove) {\n        if (onPush === void 0) { onPush = null; }\n        if (onRemove === void 0) { onRemove = null; }\n        var newArray = this.createNewArrayCore(name);\n        if (!this.arraysInfo) {\n            this.arraysInfo = {};\n        }\n        this.arraysInfo[name] = { onPush: onPush, isItemValues: false };\n        var self = this;\n        newArray.push = function (value) {\n            var result = Object.getPrototypeOf(newArray).push.call(newArray, value);\n            if (!self.isDisposedValue) {\n                if (onPush)\n                    onPush(value, newArray.length - 1);\n                var arrayChanges = new ArrayChanges(newArray.length - 1, 0, [value], []);\n                self.propertyValueChanged(name, newArray, newArray, arrayChanges);\n                self.notifyArrayChanged(newArray, arrayChanges);\n            }\n            return result;\n        };\n        newArray.shift = function () {\n            var result = Object.getPrototypeOf(newArray).shift.call(newArray);\n            if (!self.isDisposedValue && result) {\n                if (onRemove)\n                    onRemove(result);\n                var arrayChanges = new ArrayChanges(newArray.length - 1, 1, [], []);\n                self.propertyValueChanged(name, newArray, newArray, arrayChanges);\n                self.notifyArrayChanged(newArray, arrayChanges);\n            }\n            return result;\n        };\n        newArray.unshift = function (value) {\n            var result = Object.getPrototypeOf(newArray).unshift.call(newArray, value);\n            if (!self.isDisposedValue) {\n                if (onPush)\n                    onPush(value, newArray.length - 1);\n                var arrayChanges = new ArrayChanges(0, 0, [value], []);\n                self.propertyValueChanged(name, newArray, newArray, arrayChanges);\n                self.notifyArrayChanged(newArray, arrayChanges);\n            }\n            return result;\n        };\n        newArray.pop = function () {\n            var result = Object.getPrototypeOf(newArray).pop.call(newArray);\n            if (!self.isDisposedValue) {\n                if (onRemove)\n                    onRemove(result);\n                var arrayChanges = new ArrayChanges(newArray.length - 1, 1, [], []);\n                self.propertyValueChanged(name, newArray, newArray, arrayChanges);\n                self.notifyArrayChanged(newArray, arrayChanges);\n            }\n            return result;\n        };\n        newArray.splice = function (start, deleteCount) {\n            var _a;\n            var items = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                items[_i - 2] = arguments[_i];\n            }\n            if (!start)\n                start = 0;\n            if (!deleteCount)\n                deleteCount = 0;\n            var result = (_a = Object.getPrototypeOf(newArray).splice).call.apply(_a, __spreadArray([newArray,\n                start,\n                deleteCount], items));\n            if (!items)\n                items = [];\n            if (!self.isDisposedValue) {\n                if (onRemove && result) {\n                    for (var i = 0; i < result.length; i++) {\n                        onRemove(result[i]);\n                    }\n                }\n                if (onPush) {\n                    for (var i = 0; i < items.length; i++) {\n                        onPush(items[i], start + i);\n                    }\n                }\n                var arrayChanges = new ArrayChanges(start, deleteCount, items, result);\n                self.propertyValueChanged(name, newArray, newArray, arrayChanges);\n                self.notifyArrayChanged(newArray, arrayChanges);\n            }\n            return result;\n        };\n        return newArray;\n    };\n    Base.prototype.getItemValueType = function () {\n        return undefined;\n    };\n    Base.prototype.setArray = function (name, src, dest, isItemValues, onPush) {\n        var deletedItems = [].concat(src);\n        Object.getPrototypeOf(src).splice.call(src, 0, src.length);\n        if (!!dest) {\n            for (var i = 0; i < dest.length; i++) {\n                var item = dest[i];\n                if (isItemValues) {\n                    if (!!Base.createItemValue) {\n                        item = Base.createItemValue(item, this.getItemValueType());\n                    }\n                }\n                Object.getPrototypeOf(src).push.call(src, item);\n                if (onPush)\n                    onPush(src[i]);\n            }\n        }\n        var arrayChanges = new ArrayChanges(0, deletedItems.length, src, deletedItems);\n        this.propertyValueChanged(name, deletedItems, src, arrayChanges);\n        this.notifyArrayChanged(src, arrayChanges);\n    };\n    Base.prototype.isTwoValueEquals = function (x, y, caseInSensitive, trimString) {\n        if (caseInSensitive === void 0) { caseInSensitive = false; }\n        if (trimString === void 0) { trimString = false; }\n        return _helpers__WEBPACK_IMPORTED_MODULE_1__[\"Helpers\"].isTwoValueEquals(x, y, false, !caseInSensitive, trimString);\n    };\n    Base.copyObject = function (dst, src) {\n        for (var key in src) {\n            var source = src[key];\n            if (typeof source === \"object\") {\n                source = {};\n                this.copyObject(source, src[key]);\n            }\n            dst[key] = source;\n        }\n    };\n    Base.prototype.copyCssClasses = function (dest, source) {\n        if (!source)\n            return;\n        if (typeof source === \"string\" || source instanceof String) {\n            dest[\"root\"] = source;\n        }\n        else {\n            Base.copyObject(dest, source);\n        }\n    };\n    Base.prototype.getValueInLowCase = function (val) {\n        if (!!val && typeof val == \"string\")\n            return val.toLowerCase();\n        return val;\n    };\n    Base.prototype.getElementsInDesign = function (includeHidden) {\n        if (includeHidden === void 0) { includeHidden = false; }\n        return [];\n    };\n    Base.currentDependencis = undefined;\n    return Base;\n}());\n\nvar ArrayChanges = /** @class */ (function () {\n    function ArrayChanges(index, deleteCount, itemsToAdd, deletedItems) {\n        this.index = index;\n        this.deleteCount = deleteCount;\n        this.itemsToAdd = itemsToAdd;\n        this.deletedItems = deletedItems;\n    }\n    return ArrayChanges;\n}());\n\nvar Event = /** @class */ (function () {\n    function Event() {\n    }\n    Object.defineProperty(Event.prototype, \"isEmpty\", {\n        get: function () {\n            return this.length === 0;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Event.prototype, \"length\", {\n        get: function () {\n            return !!this.callbacks ? this.callbacks.length : 0;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Event.prototype.fireByCreatingOptions = function (sender, createOptions) {\n        if (!this.callbacks)\n            return;\n        for (var i = 0; i < this.callbacks.length; i++) {\n            this.callbacks[i](sender, createOptions());\n            if (!this.callbacks)\n                return;\n        }\n    };\n    Event.prototype.fire = function (sender, options) {\n        if (!this.callbacks)\n            return;\n        for (var i = 0; i < this.callbacks.length; i++) {\n            this.callbacks[i](sender, options);\n            if (!this.callbacks)\n                return;\n        }\n    };\n    Event.prototype.clear = function () {\n        this.callbacks = undefined;\n    };\n    Event.prototype.add = function (func) {\n        if (this.hasFunc(func))\n            return;\n        if (!this.callbacks) {\n            this.callbacks = new Array();\n        }\n        this.callbacks.push(func);\n        this.fireCallbackChanged();\n    };\n    Event.prototype.remove = function (func) {\n        if (this.hasFunc(func)) {\n            var index = this.callbacks.indexOf(func, 0);\n            this.callbacks.splice(index, 1);\n            this.fireCallbackChanged();\n        }\n    };\n    Event.prototype.hasFunc = function (func) {\n        if (this.callbacks == null)\n            return false;\n        return this.callbacks.indexOf(func, 0) > -1;\n    };\n    Event.prototype.fireCallbackChanged = function () {\n        if (!!this.onCallbacksChanged) {\n            this.onCallbacksChanged();\n        }\n    };\n    return Event;\n}());\n\nvar EventBase = /** @class */ (function (_super) {\n    __extends(EventBase, _super);\n    function EventBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return EventBase;\n}(Event));\n\n\n\n/***/ }),\n\n/***/ \"./src/conditionProcessValue.ts\":\n/*!**************************************!*\\\n  !*** ./src/conditionProcessValue.ts ***!\n  \\**************************************/\n/*! exports provided: ProcessValue */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_96092__) {\n\n\"use strict\";\n__nested_webpack_require_96092__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_96092__.d(__nested_webpack_exports__, \"ProcessValue\", function() { return ProcessValue; });\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_96092__(/*! ./helpers */ \"./src/helpers.ts\");\n\nvar surveyBuiltInVarible = \"@survey\";\nvar ProcessValue = /** @class */ (function () {\n    function ProcessValue() {\n        this.values = null;\n        this.properties = null;\n    }\n    ProcessValue.prototype.getFirstName = function (text, obj) {\n        if (obj === void 0) { obj = null; }\n        if (!text)\n            return text;\n        var res = \"\";\n        if (!!obj) {\n            res = this.getFirstPropertyName(text, obj);\n            if (!!res)\n                return res;\n        }\n        for (var i = 0; i < text.length; i++) {\n            var ch = text[i];\n            if (ch == \".\" || ch == \"[\")\n                break;\n            res += ch;\n        }\n        return res;\n    };\n    ProcessValue.prototype.hasValue = function (text, values) {\n        if (values === void 0) { values = null; }\n        if (!values)\n            values = this.values;\n        var res = this.getValueCore(text, values);\n        return res.hasValue;\n    };\n    ProcessValue.prototype.getValue = function (text, values) {\n        if (values === void 0) { values = null; }\n        if (!values)\n            values = this.values;\n        var res = this.getValueCore(text, values);\n        return res.value;\n    };\n    ProcessValue.prototype.setValue = function (obj, text, value) {\n        if (!text)\n            return;\n        var nonNestedObj = this.getNonNestedObject(obj, text, true);\n        if (!nonNestedObj)\n            return;\n        obj = nonNestedObj.value;\n        text = nonNestedObj.text;\n        if (!!obj && !!text) {\n            obj[text] = value;\n        }\n    };\n    ProcessValue.prototype.getValueInfo = function (valueInfo) {\n        if (!!valueInfo.path) {\n            valueInfo.value = this.getValueFromPath(valueInfo.path, this.values);\n            valueInfo.hasValue =\n                valueInfo.value !== null && !_helpers__WEBPACK_IMPORTED_MODULE_0__[\"Helpers\"].isValueEmpty(valueInfo.value);\n            if (!valueInfo.hasValue &&\n                valueInfo.path.length > 1 &&\n                valueInfo.path[valueInfo.path.length - 1] == \"length\") {\n                valueInfo.hasValue = true;\n                valueInfo.value = 0;\n            }\n            return;\n        }\n        var res = this.getValueCore(valueInfo.name, this.values);\n        valueInfo.value = res.value;\n        valueInfo.hasValue = res.hasValue;\n        valueInfo.path = res.hasValue ? res.path : null;\n        valueInfo.sctrictCompare = res.sctrictCompare;\n    };\n    ProcessValue.prototype.isAnyKeyChanged = function (keys, usedNames) {\n        for (var i = 0; i < usedNames.length; i++) {\n            var name = usedNames[i];\n            if (keys.hasOwnProperty(name))\n                return true;\n            var firstName = this.getFirstName(name);\n            if (!keys.hasOwnProperty(firstName))\n                continue;\n            if (name === firstName)\n                return true;\n            var keyValue = keys[firstName];\n            if (keyValue == undefined)\n                continue;\n            if (!keyValue.hasOwnProperty(\"oldValue\") ||\n                !keyValue.hasOwnProperty(\"newValue\"))\n                return true;\n            var v = {};\n            v[firstName] = keyValue[\"oldValue\"];\n            var oldValue = this.getValue(name, v);\n            v[firstName] = keyValue[\"newValue\"];\n            var newValue = this.getValue(name, v);\n            if (!_helpers__WEBPACK_IMPORTED_MODULE_0__[\"Helpers\"].isTwoValueEquals(oldValue, newValue, false, false, false))\n                return true;\n        }\n        return false;\n    };\n    ProcessValue.prototype.getValueFromPath = function (path, values) {\n        if (path.length === 2 && path[0] === surveyBuiltInVarible) {\n            return this.getValueFromSurvey(path[1]);\n        }\n        var index = 0;\n        while (!!values && index < path.length) {\n            var ind_name = path[index];\n            if (_helpers__WEBPACK_IMPORTED_MODULE_0__[\"Helpers\"].isNumber(ind_name) &&\n                Array.isArray(values) &&\n                ind_name >= values.length)\n                return null;\n            values = values[ind_name];\n            index++;\n        }\n        return values;\n    };\n    ProcessValue.prototype.getValueCore = function (text, values) {\n        var question = this.getQuestionDirectly(text);\n        if (question) {\n            return { hasValue: true, value: question.value, path: [text], sctrictCompare: question.requireStrictCompare };\n        }\n        var res = this.getValueFromValues(text, values);\n        if (!!text && !res.hasValue) {\n            var val = this.getValueFromSurvey(text);\n            if (val !== undefined) {\n                res.hasValue = true;\n                res.value = val;\n                res.path = [surveyBuiltInVarible, text];\n            }\n        }\n        return res;\n    };\n    ProcessValue.prototype.getQuestionDirectly = function (name) {\n        if (!!this.properties && !!this.properties.survey)\n            return this.properties.survey.getQuestionByValueName(name);\n        return undefined;\n    };\n    ProcessValue.prototype.getValueFromSurvey = function (name) {\n        if (!!this.properties && !!this.properties.survey)\n            return this.properties.survey.getBuiltInVariableValue(name.toLocaleLowerCase());\n        return undefined;\n    };\n    ProcessValue.prototype.getValueFromValues = function (text, values) {\n        var res = { hasValue: false, value: null, path: null };\n        var curValue = values;\n        if (!curValue && curValue !== 0 && curValue !== false)\n            return res;\n        if (text &&\n            text.lastIndexOf(\".length\") > -1 &&\n            text.lastIndexOf(\".length\") === text.length - \".length\".length) {\n            res.value = 0;\n            res.hasValue = true;\n        }\n        var nonNestedObj = this.getNonNestedObject(curValue, text, false);\n        if (!nonNestedObj)\n            return res;\n        res.path = nonNestedObj.path;\n        res.value = !!nonNestedObj.text\n            ? this.getObjectValue(nonNestedObj.value, nonNestedObj.text)\n            : nonNestedObj.value;\n        res.hasValue = !_helpers__WEBPACK_IMPORTED_MODULE_0__[\"Helpers\"].isValueEmpty(res.value);\n        return res;\n    };\n    ProcessValue.prototype.getNonNestedObject = function (obj, text, createPath) {\n        var checkedKeys = new Array();\n        var len = 0;\n        var res = this.getNonNestedObjectCore(obj, text, createPath, checkedKeys);\n        while (!res && len < checkedKeys.length) {\n            len = checkedKeys.length;\n            res = this.getNonNestedObjectCore(obj, text, createPath, checkedKeys);\n        }\n        return res;\n    };\n    ProcessValue.prototype.getNonNestedObjectCore = function (obj, text, createPath, checkedKeys) {\n        var curName = this.getFirstPropertyName(text, obj, createPath, checkedKeys);\n        if (!!curName) {\n            checkedKeys.push(curName);\n        }\n        var path = !!curName ? [curName] : null;\n        while (text != curName && !!obj) {\n            var isArray = text[0] == \"[\";\n            if (!isArray) {\n                if (!curName && text == this.getFirstName(text))\n                    return { value: obj, text: text, path: path };\n                obj = this.getObjectValue(obj, curName);\n                if (_helpers__WEBPACK_IMPORTED_MODULE_0__[\"Helpers\"].isValueEmpty(obj) && !createPath)\n                    return null;\n                text = text.substring(curName.length);\n            }\n            else {\n                var objInArray = this.getObjInArray(obj, text);\n                if (!objInArray)\n                    return null;\n                obj = objInArray.value;\n                text = objInArray.text;\n                path.push(objInArray.index);\n            }\n            if (!!text && text[0] == \".\") {\n                text = text.substring(1);\n            }\n            curName = this.getFirstPropertyName(text, obj, createPath, checkedKeys);\n            if (!!curName) {\n                path.push(curName);\n            }\n        }\n        return { value: obj, text: text, path: path };\n    };\n    ProcessValue.prototype.getObjInArray = function (curValue, text) {\n        if (!Array.isArray(curValue))\n            return null;\n        var index = 1;\n        var str = \"\";\n        while (index < text.length && text[index] != \"]\") {\n            str += text[index];\n            index++;\n        }\n        text = index < text.length ? text.substring(index + 1) : \"\";\n        index = this.getIntValue(str);\n        if (index < 0 || index >= curValue.length)\n            return null;\n        return { value: curValue[index], text: text, index: index };\n    };\n    ProcessValue.prototype.getFirstPropertyName = function (name, obj, createProp, checkedKeys) {\n        if (createProp === void 0) { createProp = false; }\n        if (checkedKeys === void 0) { checkedKeys = undefined; }\n        if (!name)\n            return name;\n        if (!obj)\n            obj = {};\n        if (obj.hasOwnProperty(name))\n            return name;\n        var nameInLow = name.toLowerCase();\n        var A = nameInLow[0];\n        var a = A.toUpperCase();\n        for (var key in obj) {\n            if (Array.isArray(checkedKeys) && checkedKeys.indexOf(key) > -1)\n                continue;\n            var first = key[0];\n            if (first === a || first === A) {\n                var keyName = key.toLowerCase();\n                if (keyName == nameInLow)\n                    return key;\n                if (nameInLow.length <= keyName.length)\n                    continue;\n                var ch = nameInLow[keyName.length];\n                if (ch != \".\" && ch != \"[\")\n                    continue;\n                if (keyName == nameInLow.substring(0, keyName.length))\n                    return key;\n            }\n        }\n        if (createProp && name[0] !== \"[\") {\n            var ind = name.indexOf(\".\");\n            if (ind > -1) {\n                name = name.substring(0, ind);\n                obj[name] = {};\n            }\n            return name;\n        }\n        return \"\";\n    };\n    ProcessValue.prototype.getObjectValue = function (obj, name) {\n        if (!name)\n            return null;\n        return obj[name];\n    };\n    ProcessValue.prototype.getIntValue = function (str) {\n        if (str == \"0\" || ((str | 0) > 0 && str % 1 == 0))\n            return Number(str);\n        return -1;\n    };\n    return ProcessValue;\n}());\n\n\n\n/***/ }),\n\n/***/ \"./src/conditions.ts\":\n/*!***************************!*\\\n  !*** ./src/conditions.ts ***!\n  \\***************************/\n/*! exports provided: ExpressionExecutor, ExpressionRunnerBase, ConditionRunner, ExpressionRunner */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_107120__) {\n\n\"use strict\";\n__nested_webpack_require_107120__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_107120__.d(__nested_webpack_exports__, \"ExpressionExecutor\", function() { return ExpressionExecutor; });\n/* harmony export (binding) */ __nested_webpack_require_107120__.d(__nested_webpack_exports__, \"ExpressionRunnerBase\", function() { return ExpressionRunnerBase; });\n/* harmony export (binding) */ __nested_webpack_require_107120__.d(__nested_webpack_exports__, \"ConditionRunner\", function() { return ConditionRunner; });\n/* harmony export (binding) */ __nested_webpack_require_107120__.d(__nested_webpack_exports__, \"ExpressionRunner\", function() { return ExpressionRunner; });\n/* harmony import */ var _conditionProcessValue__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_107120__(/*! ./conditionProcessValue */ \"./src/conditionProcessValue.ts\");\n/* harmony import */ var _console_warnings__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_107120__(/*! ./console-warnings */ \"./src/console-warnings.ts\");\n/* harmony import */ var _conditionsParser__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_107120__(/*! ./conditionsParser */ \"./src/conditionsParser.ts\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar ExpressionExecutor = /** @class */ (function () {\n    function ExpressionExecutor(expression) {\n        this.processValue = new _conditionProcessValue__WEBPACK_IMPORTED_MODULE_0__[\"ProcessValue\"]();\n        this.parser = new _conditionsParser__WEBPACK_IMPORTED_MODULE_2__[\"ConditionsParser\"]();\n        this.isAsyncValue = false;\n        this.hasFunctionValue = false;\n        this.setExpression(expression);\n    }\n    Object.defineProperty(ExpressionExecutor.prototype, \"expression\", {\n        get: function () {\n            return this.expressionValue;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ExpressionExecutor.prototype.setExpression = function (value) {\n        if (this.expression === value)\n            return;\n        this.expressionValue = value;\n        this.operand = this.parser.parseExpression(value);\n        this.hasFunctionValue = this.canRun() ? this.operand.hasFunction() : false;\n        this.isAsyncValue = this.hasFunction()\n            ? this.operand.hasAsyncFunction()\n            : false;\n    };\n    ExpressionExecutor.prototype.getVariables = function () {\n        if (!this.operand)\n            return [];\n        var variables = [];\n        this.operand.setVariables(variables);\n        return variables;\n    };\n    ExpressionExecutor.prototype.hasFunction = function () {\n        return this.hasFunctionValue;\n    };\n    Object.defineProperty(ExpressionExecutor.prototype, \"isAsync\", {\n        get: function () {\n            return this.isAsyncValue;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ExpressionExecutor.prototype.canRun = function () {\n        return !!this.operand;\n    };\n    ExpressionExecutor.prototype.run = function (values, properties) {\n        var _this = this;\n        if (properties === void 0) { properties = null; }\n        if (!this.operand) {\n            if (!!this.expression) {\n                _console_warnings__WEBPACK_IMPORTED_MODULE_1__[\"ConsoleWarnings\"].warn(\"Invalid expression: \" + this.expression);\n            }\n            return null;\n        }\n        this.processValue.values = values;\n        this.processValue.properties = properties;\n        if (!this.isAsync)\n            return this.runValues();\n        this.asyncFuncList = [];\n        this.operand.addToAsyncList(this.asyncFuncList);\n        for (var i = 0; i < this.asyncFuncList.length; i++) {\n            this.asyncFuncList[i].onAsyncReady = function () {\n                _this.doAsyncFunctionReady();\n            };\n        }\n        for (var i = 0; i < this.asyncFuncList.length; i++) {\n            this.asyncFuncList[i].evaluateAsync(this.processValue);\n        }\n        return false;\n    };\n    ExpressionExecutor.prototype.doAsyncFunctionReady = function () {\n        for (var i = 0; i < this.asyncFuncList.length; i++) {\n            if (!this.asyncFuncList[i].isReady)\n                return;\n        }\n        this.runValues();\n    };\n    ExpressionExecutor.prototype.runValues = function () {\n        var res = this.operand.evaluate(this.processValue);\n        if (!!this.onComplete) {\n            this.onComplete(res);\n        }\n        return res;\n    };\n    ExpressionExecutor.createExpressionExecutor = function (expression) { return new ExpressionExecutor(expression); };\n    return ExpressionExecutor;\n}());\n\nvar ExpressionRunnerBase = /** @class */ (function () {\n    function ExpressionRunnerBase(expression) {\n        this._id = ExpressionRunnerBase.IdCounter++;\n        this.expression = expression;\n    }\n    Object.defineProperty(ExpressionRunnerBase.prototype, \"id\", {\n        get: function () { return this._id; },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ExpressionRunnerBase.prototype, \"expression\", {\n        get: function () {\n            return !!this.expressionExecutor ? this.expressionExecutor.expression : \"\";\n        },\n        set: function (value) {\n            var _this = this;\n            if (!!this.expressionExecutor && value === this.expression)\n                return;\n            this.expressionExecutor = ExpressionExecutor.createExpressionExecutor(value);\n            this.expressionExecutor.onComplete = function (res) { _this.doOnComplete(res); };\n            this.variables = undefined;\n            this.containsFunc = undefined;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ExpressionRunnerBase.prototype.getVariables = function () {\n        if (this.variables === undefined) {\n            this.variables = this.expressionExecutor.getVariables();\n        }\n        return this.variables;\n    };\n    ExpressionRunnerBase.prototype.hasFunction = function () {\n        if (this.containsFunc === undefined) {\n            this.containsFunc = this.expressionExecutor.hasFunction();\n        }\n        return this.containsFunc;\n    };\n    Object.defineProperty(ExpressionRunnerBase.prototype, \"isAsync\", {\n        get: function () {\n            return this.expressionExecutor.isAsync;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ExpressionRunnerBase.prototype.canRun = function () {\n        return this.expressionExecutor.canRun();\n    };\n    ExpressionRunnerBase.prototype.runCore = function (values, properties) {\n        if (properties === void 0) { properties = null; }\n        if (this.onBeforeAsyncRun && this.isAsync) {\n            this.onBeforeAsyncRun(this.id);\n        }\n        return this.expressionExecutor.run(values, properties);\n    };\n    ExpressionRunnerBase.prototype.doOnComplete = function (res) {\n        if (this.onAfterAsyncRun && this.isAsync) {\n            this.onAfterAsyncRun(this.id);\n        }\n    };\n    ExpressionRunnerBase.IdCounter = 1;\n    return ExpressionRunnerBase;\n}());\n\nvar ConditionRunner = /** @class */ (function (_super) {\n    __extends(ConditionRunner, _super);\n    function ConditionRunner() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ConditionRunner.prototype.run = function (values, properties) {\n        if (properties === void 0) { properties = null; }\n        return this.runCore(values, properties) == true;\n    };\n    ConditionRunner.prototype.doOnComplete = function (res) {\n        if (!!this.onRunComplete)\n            this.onRunComplete(res == true);\n        _super.prototype.doOnComplete.call(this, res);\n    };\n    return ConditionRunner;\n}(ExpressionRunnerBase));\n\nvar ExpressionRunner = /** @class */ (function (_super) {\n    __extends(ExpressionRunner, _super);\n    function ExpressionRunner() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ExpressionRunner.prototype.run = function (values, properties) {\n        if (properties === void 0) { properties = null; }\n        return this.runCore(values, properties);\n    };\n    ExpressionRunner.prototype.doOnComplete = function (res) {\n        if (!!this.onRunComplete)\n            this.onRunComplete(res);\n        _super.prototype.doOnComplete.call(this, res);\n    };\n    return ExpressionRunner;\n}(ExpressionRunnerBase));\n\n\n\n/***/ }),\n\n/***/ \"./src/conditionsParser.ts\":\n/*!*********************************!*\\\n  !*** ./src/conditionsParser.ts ***!\n  \\*********************************/\n/*! exports provided: ConditionsParserError, ConditionsParser */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_116343__) {\n\n\"use strict\";\n__nested_webpack_require_116343__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_116343__.d(__nested_webpack_exports__, \"ConditionsParserError\", function() { return ConditionsParserError; });\n/* harmony export (binding) */ __nested_webpack_require_116343__.d(__nested_webpack_exports__, \"ConditionsParser\", function() { return ConditionsParser; });\n/* harmony import */ var _expressions_expressionParser__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_116343__(/*! ./expressions/expressionParser */ \"./src/expressions/expressionParser.ts\");\n\nvar ConditionsParserError = /** @class */ (function () {\n    function ConditionsParserError(at, code) {\n        this.at = at;\n        this.code = code;\n    }\n    return ConditionsParserError;\n}());\n\nvar ConditionsParser = /** @class */ (function () {\n    function ConditionsParser() {\n    }\n    ConditionsParser.prototype.patchExpression = function (text) {\n        return text\n            .replace(/=>/g, \">=\")\n            .replace(/=</g, \"<=\")\n            .replace(/<>/g, \"!=\")\n            .replace(/equals/g, \"equal \")\n            .replace(/notequals/g, \"notequal \");\n    };\n    ConditionsParser.prototype.createCondition = function (text) {\n        return this.parseExpression(text);\n    };\n    ConditionsParser.prototype.parseExpression = function (text) {\n        try {\n            var result = ConditionsParser.parserCache[text];\n            if (result === undefined) {\n                result = Object(_expressions_expressionParser__WEBPACK_IMPORTED_MODULE_0__[\"parse\"])(this.patchExpression(text));\n                if (!result.hasAsyncFunction()) {\n                    ConditionsParser.parserCache[text] = result;\n                }\n            }\n            return result;\n        }\n        catch (e) {\n            if (e instanceof _expressions_expressionParser__WEBPACK_IMPORTED_MODULE_0__[\"SyntaxError\"]) {\n                this.conditionError = new ConditionsParserError(e.location.start.offset, e.message);\n            }\n        }\n    };\n    Object.defineProperty(ConditionsParser.prototype, \"error\", {\n        get: function () {\n            return this.conditionError;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ConditionsParser.parserCache = {};\n    return ConditionsParser;\n}());\n\n\n\n/***/ }),\n\n/***/ \"./src/console-warnings.ts\":\n/*!*********************************!*\\\n  !*** ./src/console-warnings.ts ***!\n  \\*********************************/\n/*! exports provided: ConsoleWarnings */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_118873__) {\n\n\"use strict\";\n__nested_webpack_require_118873__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_118873__.d(__nested_webpack_exports__, \"ConsoleWarnings\", function() { return ConsoleWarnings; });\nvar ConsoleWarnings = /** @class */ (function () {\n    function ConsoleWarnings() {\n    }\n    ConsoleWarnings.disposedObjectChangedProperty = function (propName, objType) {\n        ConsoleWarnings.warn(\"An attempt to set a property \\\"\" + propName + \"\\\" of a disposed object \\\"\" + objType + \"\\\"\");\n    };\n    ConsoleWarnings.inCorrectQuestionValue = function (questionName, val) {\n        var valStr = JSON.stringify(val, null, 3);\n        ConsoleWarnings.warn(\"An attempt to assign an incorrect value\" + valStr + \" to the following question: \\\"\" + questionName + \"\\\"\");\n    };\n    ConsoleWarnings.warn = function (text) {\n        // eslint-disable-next-line no-console\n        console.warn(text);\n    };\n    ConsoleWarnings.error = function (text) {\n        // eslint-disable-next-line no-console\n        console.error(text);\n    };\n    return ConsoleWarnings;\n}());\n\n\n\n/***/ }),\n\n/***/ \"./src/element-helper.ts\":\n/*!*******************************!*\\\n  !*** ./src/element-helper.ts ***!\n  \\*******************************/\n/*! exports provided: ElementHelper */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_120197__) {\n\n\"use strict\";\n__nested_webpack_require_120197__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_120197__.d(__nested_webpack_exports__, \"ElementHelper\", function() { return ElementHelper; });\n/* harmony import */ var _global_variables_utils__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_120197__(/*! ./global_variables_utils */ \"./src/global_variables_utils.ts\");\n\nvar ElementHelper = /** @class */ (function () {\n    function ElementHelper() {\n    }\n    ElementHelper.focusElement = function (element) {\n        element && element.focus();\n    };\n    ElementHelper.visibility = function (node) {\n        var style = _global_variables_utils__WEBPACK_IMPORTED_MODULE_0__[\"DomDocumentHelper\"].getComputedStyle(node);\n        if (style.display === \"none\" || style.visibility === \"hidden\")\n            return false;\n        return node.parentElement ? this.visibility(node.parentElement) : true;\n    };\n    ElementHelper.getNextElementPreorder = function (element) {\n        var result = !!element.nextElementSibling ? element.nextElementSibling : element.parentElement.firstElementChild;\n        if (this.visibility(result)) {\n            return result;\n        }\n        else {\n            return this.getNextElementPreorder(result);\n        }\n    };\n    ElementHelper.getNextElementPostorder = function (element) {\n        var result = !!element.previousElementSibling ? element.previousElementSibling : element.parentElement.lastElementChild;\n        if (this.visibility(result)) {\n            return result;\n        }\n        else {\n            return this.getNextElementPostorder(result);\n        }\n    };\n    ElementHelper.hasHorizontalScroller = function (element) {\n        if (!!element) {\n            return element.scrollWidth > element.offsetWidth;\n        }\n        return false;\n    };\n    ElementHelper.hasVerticalScroller = function (element) {\n        if (!!element) {\n            return element.scrollHeight > element.offsetHeight;\n        }\n        return false;\n    };\n    return ElementHelper;\n}());\n\n\n\n/***/ }),\n\n/***/ \"./src/entries/core-export.ts\":\n/*!************************************!*\\\n  !*** ./src/entries/core-export.ts ***!\n  \\************************************/\n/*! exports provided: SurveyModel, SurveyWindowModel, settings, surveyLocalization, surveyStrings */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_122554__) {\n\n\"use strict\";\n__nested_webpack_require_122554__.r(__nested_webpack_exports__);\n/* harmony import */ var survey_core__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_122554__(/*! survey-core */ \"survey-core\");\n/* harmony import */ var survey_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_122554__.n(survey_core__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (safe) */ __nested_webpack_require_122554__.d(__nested_webpack_exports__, \"SurveyModel\", function() { return survey_core__WEBPACK_IMPORTED_MODULE_0__[\"SurveyModel\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_122554__.d(__nested_webpack_exports__, \"SurveyWindowModel\", function() { return survey_core__WEBPACK_IMPORTED_MODULE_0__[\"SurveyWindowModel\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_122554__.d(__nested_webpack_exports__, \"settings\", function() { return survey_core__WEBPACK_IMPORTED_MODULE_0__[\"settings\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_122554__.d(__nested_webpack_exports__, \"surveyLocalization\", function() { return survey_core__WEBPACK_IMPORTED_MODULE_0__[\"surveyLocalization\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_122554__.d(__nested_webpack_exports__, \"surveyStrings\", function() { return survey_core__WEBPACK_IMPORTED_MODULE_0__[\"surveyStrings\"]; });\n\n\n\n\n\n\n/***/ }),\n\n/***/ \"./src/entries/react-ui-model.ts\":\n/*!***************************************!*\\\n  !*** ./src/entries/react-ui-model.ts ***!\n  \\***************************************/\n/*! exports provided: Survey, attachKey2click, ReactSurveyElementsWrapper, SurveyNavigationBase, SurveyTimerPanel, SurveyPage, SurveyRow, SurveyPanel, SurveyFlowPanel, SurveyQuestion, SurveyElementErrors, SurveyQuestionAndErrorsCell, ReactSurveyElement, SurveyElementBase, SurveyQuestionElementBase, SurveyQuestionCommentItem, SurveyQuestionComment, SurveyQuestionCheckbox, SurveyQuestionCheckboxItem, SurveyQuestionRanking, SurveyQuestionRankingItem, RatingItem, RatingItemStar, RatingItemSmiley, RatingDropdownItem, TagboxFilterString, SurveyQuestionOptionItem, SurveyQuestionDropdownBase, SurveyQuestionDropdown, SurveyQuestionTagboxItem, SurveyQuestionTagbox, SurveyQuestionDropdownSelect, SurveyQuestionMatrix, SurveyQuestionMatrixRow, SurveyQuestionMatrixCell, SurveyQuestionHtml, SurveyQuestionFile, SurveyFileChooseButton, SurveyFilePreview, SurveyQuestionMultipleText, SurveyQuestionRadiogroup, SurveyQuestionRadioItem, SurveyQuestionText, SurveyQuestionBoolean, SurveyQuestionBooleanCheckbox, SurveyQuestionBooleanRadio, SurveyQuestionEmpty, SurveyQuestionMatrixDropdownCell, SurveyQuestionMatrixDropdownBase, SurveyQuestionMatrixDropdown, SurveyQuestionMatrixDynamic, SurveyQuestionMatrixDynamicAddButton, SurveyQuestionPanelDynamic, SurveyProgress, SurveyProgressButtons, SurveyProgressToc, SurveyQuestionRating, SurveyQuestionRatingDropdown, SurveyQuestionExpression, PopupSurvey, SurveyWindow, ReactQuestionFactory, ReactElementFactory, SurveyQuestionImagePicker, SurveyQuestionImage, SurveyQuestionSignaturePad, SurveyQuestionButtonGroup, SurveyQuestionCustom, SurveyQuestionComposite, Popup, List, TitleActions, TitleElement, SurveyActionBar, LogoImage, SurveyHeader, SvgIcon, SurveyQuestionMatrixDynamicRemoveButton, SurveyQuestionMatrixDetailButton, SurveyQuestionMatrixDynamicDragDropIcon, SurveyQuestionPanelDynamicAddButton, SurveyQuestionPanelDynamicRemoveButton, SurveyQuestionPanelDynamicPrevButton, SurveyQuestionPanelDynamicNextButton, SurveyQuestionPanelDynamicProgressText, SurveyNavigationButton, MatrixRow, Skeleton, NotifierComponent, ComponentsContainer, CharacterCounterComponent, HeaderMobile, HeaderCell, Header, SurveyLocStringViewer, SurveyLocStringEditor, LoadingIndicatorComponent, SvgBundleComponent */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_126266__) {\n\n\"use strict\";\n__nested_webpack_require_126266__.r(__nested_webpack_exports__);\n/* harmony import */ var _react_reactSurvey__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_126266__(/*! ../react/reactSurvey */ \"./src/react/reactSurvey.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"Survey\", function() { return _react_reactSurvey__WEBPACK_IMPORTED_MODULE_0__[\"Survey\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"attachKey2click\", function() { return _react_reactSurvey__WEBPACK_IMPORTED_MODULE_0__[\"attachKey2click\"]; });\n\n/* harmony import */ var _react_reactsurveymodel__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_126266__(/*! ../react/reactsurveymodel */ \"./src/react/reactsurveymodel.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"ReactSurveyElementsWrapper\", function() { return _react_reactsurveymodel__WEBPACK_IMPORTED_MODULE_1__[\"ReactSurveyElementsWrapper\"]; });\n\n/* harmony import */ var _react_reactSurveyNavigationBase__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_126266__(/*! ../react/reactSurveyNavigationBase */ \"./src/react/reactSurveyNavigationBase.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyNavigationBase\", function() { return _react_reactSurveyNavigationBase__WEBPACK_IMPORTED_MODULE_2__[\"SurveyNavigationBase\"]; });\n\n/* harmony import */ var _react_reacttimerpanel__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_126266__(/*! ../react/reacttimerpanel */ \"./src/react/reacttimerpanel.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyTimerPanel\", function() { return _react_reacttimerpanel__WEBPACK_IMPORTED_MODULE_3__[\"SurveyTimerPanel\"]; });\n\n/* harmony import */ var _react_page__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_126266__(/*! ../react/page */ \"./src/react/page.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyPage\", function() { return _react_page__WEBPACK_IMPORTED_MODULE_4__[\"SurveyPage\"]; });\n\n/* harmony import */ var _react_row__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_126266__(/*! ../react/row */ \"./src/react/row.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyRow\", function() { return _react_row__WEBPACK_IMPORTED_MODULE_5__[\"SurveyRow\"]; });\n\n/* harmony import */ var _react_panel__WEBPACK_IMPORTED_MODULE_6__ = __nested_webpack_require_126266__(/*! ../react/panel */ \"./src/react/panel.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyPanel\", function() { return _react_panel__WEBPACK_IMPORTED_MODULE_6__[\"SurveyPanel\"]; });\n\n/* harmony import */ var _react_flow_panel__WEBPACK_IMPORTED_MODULE_7__ = __nested_webpack_require_126266__(/*! ../react/flow-panel */ \"./src/react/flow-panel.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyFlowPanel\", function() { return _react_flow_panel__WEBPACK_IMPORTED_MODULE_7__[\"SurveyFlowPanel\"]; });\n\n/* harmony import */ var _react_reactquestion__WEBPACK_IMPORTED_MODULE_8__ = __nested_webpack_require_126266__(/*! ../react/reactquestion */ \"./src/react/reactquestion.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyQuestion\", function() { return _react_reactquestion__WEBPACK_IMPORTED_MODULE_8__[\"SurveyQuestion\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyElementErrors\", function() { return _react_reactquestion__WEBPACK_IMPORTED_MODULE_8__[\"SurveyElementErrors\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyQuestionAndErrorsCell\", function() { return _react_reactquestion__WEBPACK_IMPORTED_MODULE_8__[\"SurveyQuestionAndErrorsCell\"]; });\n\n/* harmony import */ var _react_reactquestion_element__WEBPACK_IMPORTED_MODULE_9__ = __nested_webpack_require_126266__(/*! ../react/reactquestion_element */ \"./src/react/reactquestion_element.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"ReactSurveyElement\", function() { return _react_reactquestion_element__WEBPACK_IMPORTED_MODULE_9__[\"ReactSurveyElement\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyElementBase\", function() { return _react_reactquestion_element__WEBPACK_IMPORTED_MODULE_9__[\"SurveyElementBase\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyQuestionElementBase\", function() { return _react_reactquestion_element__WEBPACK_IMPORTED_MODULE_9__[\"SurveyQuestionElementBase\"]; });\n\n/* harmony import */ var _react_reactquestion_comment__WEBPACK_IMPORTED_MODULE_10__ = __nested_webpack_require_126266__(/*! ../react/reactquestion_comment */ \"./src/react/reactquestion_comment.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyQuestionCommentItem\", function() { return _react_reactquestion_comment__WEBPACK_IMPORTED_MODULE_10__[\"SurveyQuestionCommentItem\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyQuestionComment\", function() { return _react_reactquestion_comment__WEBPACK_IMPORTED_MODULE_10__[\"SurveyQuestionComment\"]; });\n\n/* harmony import */ var _react_reactquestion_checkbox__WEBPACK_IMPORTED_MODULE_11__ = __nested_webpack_require_126266__(/*! ../react/reactquestion_checkbox */ \"./src/react/reactquestion_checkbox.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyQuestionCheckbox\", function() { return _react_reactquestion_checkbox__WEBPACK_IMPORTED_MODULE_11__[\"SurveyQuestionCheckbox\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyQuestionCheckboxItem\", function() { return _react_reactquestion_checkbox__WEBPACK_IMPORTED_MODULE_11__[\"SurveyQuestionCheckboxItem\"]; });\n\n/* harmony import */ var _react_reactquestion_ranking__WEBPACK_IMPORTED_MODULE_12__ = __nested_webpack_require_126266__(/*! ../react/reactquestion_ranking */ \"./src/react/reactquestion_ranking.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyQuestionRanking\", function() { return _react_reactquestion_ranking__WEBPACK_IMPORTED_MODULE_12__[\"SurveyQuestionRanking\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyQuestionRankingItem\", function() { return _react_reactquestion_ranking__WEBPACK_IMPORTED_MODULE_12__[\"SurveyQuestionRankingItem\"]; });\n\n/* harmony import */ var _react_components_rating_rating_item__WEBPACK_IMPORTED_MODULE_13__ = __nested_webpack_require_126266__(/*! ../react/components/rating/rating-item */ \"./src/react/components/rating/rating-item.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"RatingItem\", function() { return _react_components_rating_rating_item__WEBPACK_IMPORTED_MODULE_13__[\"RatingItem\"]; });\n\n/* harmony import */ var _react_components_rating_rating_item_star__WEBPACK_IMPORTED_MODULE_14__ = __nested_webpack_require_126266__(/*! ../react/components/rating/rating-item-star */ \"./src/react/components/rating/rating-item-star.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"RatingItemStar\", function() { return _react_components_rating_rating_item_star__WEBPACK_IMPORTED_MODULE_14__[\"RatingItemStar\"]; });\n\n/* harmony import */ var _react_components_rating_rating_item_smiley__WEBPACK_IMPORTED_MODULE_15__ = __nested_webpack_require_126266__(/*! ../react/components/rating/rating-item-smiley */ \"./src/react/components/rating/rating-item-smiley.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"RatingItemSmiley\", function() { return _react_components_rating_rating_item_smiley__WEBPACK_IMPORTED_MODULE_15__[\"RatingItemSmiley\"]; });\n\n/* harmony import */ var _react_components_rating_rating_dropdown_item__WEBPACK_IMPORTED_MODULE_16__ = __nested_webpack_require_126266__(/*! ../react/components/rating/rating-dropdown-item */ \"./src/react/components/rating/rating-dropdown-item.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"RatingDropdownItem\", function() { return _react_components_rating_rating_dropdown_item__WEBPACK_IMPORTED_MODULE_16__[\"RatingDropdownItem\"]; });\n\n/* harmony import */ var _react_tagbox_filter__WEBPACK_IMPORTED_MODULE_17__ = __nested_webpack_require_126266__(/*! ../react/tagbox-filter */ \"./src/react/tagbox-filter.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"TagboxFilterString\", function() { return _react_tagbox_filter__WEBPACK_IMPORTED_MODULE_17__[\"TagboxFilterString\"]; });\n\n/* harmony import */ var _react_dropdown_item__WEBPACK_IMPORTED_MODULE_18__ = __nested_webpack_require_126266__(/*! ../react/dropdown-item */ \"./src/react/dropdown-item.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyQuestionOptionItem\", function() { return _react_dropdown_item__WEBPACK_IMPORTED_MODULE_18__[\"SurveyQuestionOptionItem\"]; });\n\n/* harmony import */ var _react_dropdown_base__WEBPACK_IMPORTED_MODULE_19__ = __nested_webpack_require_126266__(/*! ../react/dropdown-base */ \"./src/react/dropdown-base.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyQuestionDropdownBase\", function() { return _react_dropdown_base__WEBPACK_IMPORTED_MODULE_19__[\"SurveyQuestionDropdownBase\"]; });\n\n/* harmony import */ var _react_reactquestion_dropdown__WEBPACK_IMPORTED_MODULE_20__ = __nested_webpack_require_126266__(/*! ../react/reactquestion_dropdown */ \"./src/react/reactquestion_dropdown.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyQuestionDropdown\", function() { return _react_reactquestion_dropdown__WEBPACK_IMPORTED_MODULE_20__[\"SurveyQuestionDropdown\"]; });\n\n/* harmony import */ var _react_tagbox_item__WEBPACK_IMPORTED_MODULE_21__ = __nested_webpack_require_126266__(/*! ../react/tagbox-item */ \"./src/react/tagbox-item.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyQuestionTagboxItem\", function() { return _react_tagbox_item__WEBPACK_IMPORTED_MODULE_21__[\"SurveyQuestionTagboxItem\"]; });\n\n/* harmony import */ var _react_reactquestion_tagbox__WEBPACK_IMPORTED_MODULE_22__ = __nested_webpack_require_126266__(/*! ../react/reactquestion_tagbox */ \"./src/react/reactquestion_tagbox.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyQuestionTagbox\", function() { return _react_reactquestion_tagbox__WEBPACK_IMPORTED_MODULE_22__[\"SurveyQuestionTagbox\"]; });\n\n/* harmony import */ var _react_dropdown_select__WEBPACK_IMPORTED_MODULE_23__ = __nested_webpack_require_126266__(/*! ../react/dropdown-select */ \"./src/react/dropdown-select.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyQuestionDropdownSelect\", function() { return _react_dropdown_select__WEBPACK_IMPORTED_MODULE_23__[\"SurveyQuestionDropdownSelect\"]; });\n\n/* harmony import */ var _react_reactquestion_matrix__WEBPACK_IMPORTED_MODULE_24__ = __nested_webpack_require_126266__(/*! ../react/reactquestion_matrix */ \"./src/react/reactquestion_matrix.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyQuestionMatrix\", function() { return _react_reactquestion_matrix__WEBPACK_IMPORTED_MODULE_24__[\"SurveyQuestionMatrix\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyQuestionMatrixRow\", function() { return _react_reactquestion_matrix__WEBPACK_IMPORTED_MODULE_24__[\"SurveyQuestionMatrixRow\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyQuestionMatrixCell\", function() { return _react_reactquestion_matrix__WEBPACK_IMPORTED_MODULE_24__[\"SurveyQuestionMatrixCell\"]; });\n\n/* harmony import */ var _react_reactquestion_html__WEBPACK_IMPORTED_MODULE_25__ = __nested_webpack_require_126266__(/*! ../react/reactquestion_html */ \"./src/react/reactquestion_html.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyQuestionHtml\", function() { return _react_reactquestion_html__WEBPACK_IMPORTED_MODULE_25__[\"SurveyQuestionHtml\"]; });\n\n/* harmony import */ var _react_reactquestion_file__WEBPACK_IMPORTED_MODULE_26__ = __nested_webpack_require_126266__(/*! ../react/reactquestion_file */ \"./src/react/reactquestion_file.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyQuestionFile\", function() { return _react_reactquestion_file__WEBPACK_IMPORTED_MODULE_26__[\"SurveyQuestionFile\"]; });\n\n/* harmony import */ var _react_components_file_file_choose_button__WEBPACK_IMPORTED_MODULE_27__ = __nested_webpack_require_126266__(/*! ../react/components/file/file-choose-button */ \"./src/react/components/file/file-choose-button.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyFileChooseButton\", function() { return _react_components_file_file_choose_button__WEBPACK_IMPORTED_MODULE_27__[\"SurveyFileChooseButton\"]; });\n\n/* harmony import */ var _react_components_file_file_preview__WEBPACK_IMPORTED_MODULE_28__ = __nested_webpack_require_126266__(/*! ../react/components/file/file-preview */ \"./src/react/components/file/file-preview.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyFilePreview\", function() { return _react_components_file_file_preview__WEBPACK_IMPORTED_MODULE_28__[\"SurveyFilePreview\"]; });\n\n/* harmony import */ var _react_reactquestion_multipletext__WEBPACK_IMPORTED_MODULE_29__ = __nested_webpack_require_126266__(/*! ../react/reactquestion_multipletext */ \"./src/react/reactquestion_multipletext.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyQuestionMultipleText\", function() { return _react_reactquestion_multipletext__WEBPACK_IMPORTED_MODULE_29__[\"SurveyQuestionMultipleText\"]; });\n\n/* harmony import */ var _react_reactquestion_radiogroup__WEBPACK_IMPORTED_MODULE_30__ = __nested_webpack_require_126266__(/*! ../react/reactquestion_radiogroup */ \"./src/react/reactquestion_radiogroup.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyQuestionRadiogroup\", function() { return _react_reactquestion_radiogroup__WEBPACK_IMPORTED_MODULE_30__[\"SurveyQuestionRadiogroup\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyQuestionRadioItem\", function() { return _react_reactquestion_radiogroup__WEBPACK_IMPORTED_MODULE_30__[\"SurveyQuestionRadioItem\"]; });\n\n/* harmony import */ var _react_reactquestion_text__WEBPACK_IMPORTED_MODULE_31__ = __nested_webpack_require_126266__(/*! ../react/reactquestion_text */ \"./src/react/reactquestion_text.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyQuestionText\", function() { return _react_reactquestion_text__WEBPACK_IMPORTED_MODULE_31__[\"SurveyQuestionText\"]; });\n\n/* harmony import */ var _react_boolean__WEBPACK_IMPORTED_MODULE_32__ = __nested_webpack_require_126266__(/*! ../react/boolean */ \"./src/react/boolean.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyQuestionBoolean\", function() { return _react_boolean__WEBPACK_IMPORTED_MODULE_32__[\"SurveyQuestionBoolean\"]; });\n\n/* harmony import */ var _react_boolean_checkbox__WEBPACK_IMPORTED_MODULE_33__ = __nested_webpack_require_126266__(/*! ../react/boolean-checkbox */ \"./src/react/boolean-checkbox.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyQuestionBooleanCheckbox\", function() { return _react_boolean_checkbox__WEBPACK_IMPORTED_MODULE_33__[\"SurveyQuestionBooleanCheckbox\"]; });\n\n/* harmony import */ var _react_boolean_radio__WEBPACK_IMPORTED_MODULE_34__ = __nested_webpack_require_126266__(/*! ../react/boolean-radio */ \"./src/react/boolean-radio.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyQuestionBooleanRadio\", function() { return _react_boolean_radio__WEBPACK_IMPORTED_MODULE_34__[\"SurveyQuestionBooleanRadio\"]; });\n\n/* harmony import */ var _react_reactquestion_empty__WEBPACK_IMPORTED_MODULE_35__ = __nested_webpack_require_126266__(/*! ../react/reactquestion_empty */ \"./src/react/reactquestion_empty.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyQuestionEmpty\", function() { return _react_reactquestion_empty__WEBPACK_IMPORTED_MODULE_35__[\"SurveyQuestionEmpty\"]; });\n\n/* harmony import */ var _react_reactquestion_matrixdropdownbase__WEBPACK_IMPORTED_MODULE_36__ = __nested_webpack_require_126266__(/*! ../react/reactquestion_matrixdropdownbase */ \"./src/react/reactquestion_matrixdropdownbase.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyQuestionMatrixDropdownCell\", function() { return _react_reactquestion_matrixdropdownbase__WEBPACK_IMPORTED_MODULE_36__[\"SurveyQuestionMatrixDropdownCell\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyQuestionMatrixDropdownBase\", function() { return _react_reactquestion_matrixdropdownbase__WEBPACK_IMPORTED_MODULE_36__[\"SurveyQuestionMatrixDropdownBase\"]; });\n\n/* harmony import */ var _react_reactquestion_matrixdropdown__WEBPACK_IMPORTED_MODULE_37__ = __nested_webpack_require_126266__(/*! ../react/reactquestion_matrixdropdown */ \"./src/react/reactquestion_matrixdropdown.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyQuestionMatrixDropdown\", function() { return _react_reactquestion_matrixdropdown__WEBPACK_IMPORTED_MODULE_37__[\"SurveyQuestionMatrixDropdown\"]; });\n\n/* harmony import */ var _react_reactquestion_matrixdynamic__WEBPACK_IMPORTED_MODULE_38__ = __nested_webpack_require_126266__(/*! ../react/reactquestion_matrixdynamic */ \"./src/react/reactquestion_matrixdynamic.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyQuestionMatrixDynamic\", function() { return _react_reactquestion_matrixdynamic__WEBPACK_IMPORTED_MODULE_38__[\"SurveyQuestionMatrixDynamic\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyQuestionMatrixDynamicAddButton\", function() { return _react_reactquestion_matrixdynamic__WEBPACK_IMPORTED_MODULE_38__[\"SurveyQuestionMatrixDynamicAddButton\"]; });\n\n/* harmony import */ var _react_reactquestion_paneldynamic__WEBPACK_IMPORTED_MODULE_39__ = __nested_webpack_require_126266__(/*! ../react/reactquestion_paneldynamic */ \"./src/react/reactquestion_paneldynamic.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyQuestionPanelDynamic\", function() { return _react_reactquestion_paneldynamic__WEBPACK_IMPORTED_MODULE_39__[\"SurveyQuestionPanelDynamic\"]; });\n\n/* harmony import */ var _react_progress__WEBPACK_IMPORTED_MODULE_40__ = __nested_webpack_require_126266__(/*! ../react/progress */ \"./src/react/progress.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyProgress\", function() { return _react_progress__WEBPACK_IMPORTED_MODULE_40__[\"SurveyProgress\"]; });\n\n/* harmony import */ var _react_progressButtons__WEBPACK_IMPORTED_MODULE_41__ = __nested_webpack_require_126266__(/*! ../react/progressButtons */ \"./src/react/progressButtons.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyProgressButtons\", function() { return _react_progressButtons__WEBPACK_IMPORTED_MODULE_41__[\"SurveyProgressButtons\"]; });\n\n/* harmony import */ var _react_progressToc__WEBPACK_IMPORTED_MODULE_42__ = __nested_webpack_require_126266__(/*! ../react/progressToc */ \"./src/react/progressToc.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyProgressToc\", function() { return _react_progressToc__WEBPACK_IMPORTED_MODULE_42__[\"SurveyProgressToc\"]; });\n\n/* harmony import */ var _react_reactquestion_rating__WEBPACK_IMPORTED_MODULE_43__ = __nested_webpack_require_126266__(/*! ../react/reactquestion_rating */ \"./src/react/reactquestion_rating.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyQuestionRating\", function() { return _react_reactquestion_rating__WEBPACK_IMPORTED_MODULE_43__[\"SurveyQuestionRating\"]; });\n\n/* harmony import */ var _react_rating_dropdown__WEBPACK_IMPORTED_MODULE_44__ = __nested_webpack_require_126266__(/*! ../react/rating-dropdown */ \"./src/react/rating-dropdown.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyQuestionRatingDropdown\", function() { return _react_rating_dropdown__WEBPACK_IMPORTED_MODULE_44__[\"SurveyQuestionRatingDropdown\"]; });\n\n/* harmony import */ var _react_reactquestion_expression__WEBPACK_IMPORTED_MODULE_45__ = __nested_webpack_require_126266__(/*! ../react/reactquestion_expression */ \"./src/react/reactquestion_expression.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyQuestionExpression\", function() { return _react_reactquestion_expression__WEBPACK_IMPORTED_MODULE_45__[\"SurveyQuestionExpression\"]; });\n\n/* harmony import */ var _react_react_popup_survey__WEBPACK_IMPORTED_MODULE_46__ = __nested_webpack_require_126266__(/*! ../react/react-popup-survey */ \"./src/react/react-popup-survey.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"PopupSurvey\", function() { return _react_react_popup_survey__WEBPACK_IMPORTED_MODULE_46__[\"PopupSurvey\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyWindow\", function() { return _react_react_popup_survey__WEBPACK_IMPORTED_MODULE_46__[\"SurveyWindow\"]; });\n\n/* harmony import */ var _react_reactquestion_factory__WEBPACK_IMPORTED_MODULE_47__ = __nested_webpack_require_126266__(/*! ../react/reactquestion_factory */ \"./src/react/reactquestion_factory.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"ReactQuestionFactory\", function() { return _react_reactquestion_factory__WEBPACK_IMPORTED_MODULE_47__[\"ReactQuestionFactory\"]; });\n\n/* harmony import */ var _react_element_factory__WEBPACK_IMPORTED_MODULE_48__ = __nested_webpack_require_126266__(/*! ../react/element-factory */ \"./src/react/element-factory.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"ReactElementFactory\", function() { return _react_element_factory__WEBPACK_IMPORTED_MODULE_48__[\"ReactElementFactory\"]; });\n\n/* harmony import */ var _react_imagepicker__WEBPACK_IMPORTED_MODULE_49__ = __nested_webpack_require_126266__(/*! ../react/imagepicker */ \"./src/react/imagepicker.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyQuestionImagePicker\", function() { return _react_imagepicker__WEBPACK_IMPORTED_MODULE_49__[\"SurveyQuestionImagePicker\"]; });\n\n/* harmony import */ var _react_image__WEBPACK_IMPORTED_MODULE_50__ = __nested_webpack_require_126266__(/*! ../react/image */ \"./src/react/image.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyQuestionImage\", function() { return _react_image__WEBPACK_IMPORTED_MODULE_50__[\"SurveyQuestionImage\"]; });\n\n/* harmony import */ var _react_signaturepad__WEBPACK_IMPORTED_MODULE_51__ = __nested_webpack_require_126266__(/*! ../react/signaturepad */ \"./src/react/signaturepad.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyQuestionSignaturePad\", function() { return _react_signaturepad__WEBPACK_IMPORTED_MODULE_51__[\"SurveyQuestionSignaturePad\"]; });\n\n/* harmony import */ var _react_reactquestion_buttongroup__WEBPACK_IMPORTED_MODULE_52__ = __nested_webpack_require_126266__(/*! ../react/reactquestion_buttongroup */ \"./src/react/reactquestion_buttongroup.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyQuestionButtonGroup\", function() { return _react_reactquestion_buttongroup__WEBPACK_IMPORTED_MODULE_52__[\"SurveyQuestionButtonGroup\"]; });\n\n/* harmony import */ var _react_reactquestion_custom__WEBPACK_IMPORTED_MODULE_53__ = __nested_webpack_require_126266__(/*! ../react/reactquestion_custom */ \"./src/react/reactquestion_custom.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyQuestionCustom\", function() { return _react_reactquestion_custom__WEBPACK_IMPORTED_MODULE_53__[\"SurveyQuestionCustom\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyQuestionComposite\", function() { return _react_reactquestion_custom__WEBPACK_IMPORTED_MODULE_53__[\"SurveyQuestionComposite\"]; });\n\n/* harmony import */ var _react_components_popup_popup__WEBPACK_IMPORTED_MODULE_54__ = __nested_webpack_require_126266__(/*! ../react/components/popup/popup */ \"./src/react/components/popup/popup.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"Popup\", function() { return _react_components_popup_popup__WEBPACK_IMPORTED_MODULE_54__[\"Popup\"]; });\n\n/* harmony import */ var _react_components_list_list__WEBPACK_IMPORTED_MODULE_55__ = __nested_webpack_require_126266__(/*! ../react/components/list/list */ \"./src/react/components/list/list.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"List\", function() { return _react_components_list_list__WEBPACK_IMPORTED_MODULE_55__[\"List\"]; });\n\n/* harmony import */ var _react_components_title_title_actions__WEBPACK_IMPORTED_MODULE_56__ = __nested_webpack_require_126266__(/*! ../react/components/title/title-actions */ \"./src/react/components/title/title-actions.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"TitleActions\", function() { return _react_components_title_title_actions__WEBPACK_IMPORTED_MODULE_56__[\"TitleActions\"]; });\n\n/* harmony import */ var _react_components_title_title_element__WEBPACK_IMPORTED_MODULE_57__ = __nested_webpack_require_126266__(/*! ../react/components/title/title-element */ \"./src/react/components/title/title-element.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"TitleElement\", function() { return _react_components_title_title_element__WEBPACK_IMPORTED_MODULE_57__[\"TitleElement\"]; });\n\n/* harmony import */ var _react_components_action_bar_action_bar__WEBPACK_IMPORTED_MODULE_58__ = __nested_webpack_require_126266__(/*! ../react/components/action-bar/action-bar */ \"./src/react/components/action-bar/action-bar.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyActionBar\", function() { return _react_components_action_bar_action_bar__WEBPACK_IMPORTED_MODULE_58__[\"SurveyActionBar\"]; });\n\n/* harmony import */ var _react_components_survey_header_logo_image__WEBPACK_IMPORTED_MODULE_59__ = __nested_webpack_require_126266__(/*! ../react/components/survey-header/logo-image */ \"./src/react/components/survey-header/logo-image.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"LogoImage\", function() { return _react_components_survey_header_logo_image__WEBPACK_IMPORTED_MODULE_59__[\"LogoImage\"]; });\n\n/* harmony import */ var _react_components_survey_header_survey_header__WEBPACK_IMPORTED_MODULE_60__ = __nested_webpack_require_126266__(/*! ../react/components/survey-header/survey-header */ \"./src/react/components/survey-header/survey-header.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyHeader\", function() { return _react_components_survey_header_survey_header__WEBPACK_IMPORTED_MODULE_60__[\"SurveyHeader\"]; });\n\n/* harmony import */ var _react_components_svg_icon_svg_icon__WEBPACK_IMPORTED_MODULE_61__ = __nested_webpack_require_126266__(/*! ../react/components/svg-icon/svg-icon */ \"./src/react/components/svg-icon/svg-icon.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SvgIcon\", function() { return _react_components_svg_icon_svg_icon__WEBPACK_IMPORTED_MODULE_61__[\"SvgIcon\"]; });\n\n/* harmony import */ var _react_components_matrix_actions_remove_button_remove_button__WEBPACK_IMPORTED_MODULE_62__ = __nested_webpack_require_126266__(/*! ../react/components/matrix-actions/remove-button/remove-button */ \"./src/react/components/matrix-actions/remove-button/remove-button.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyQuestionMatrixDynamicRemoveButton\", function() { return _react_components_matrix_actions_remove_button_remove_button__WEBPACK_IMPORTED_MODULE_62__[\"SurveyQuestionMatrixDynamicRemoveButton\"]; });\n\n/* harmony import */ var _react_components_matrix_actions_detail_button_detail_button__WEBPACK_IMPORTED_MODULE_63__ = __nested_webpack_require_126266__(/*! ../react/components/matrix-actions/detail-button/detail-button */ \"./src/react/components/matrix-actions/detail-button/detail-button.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyQuestionMatrixDetailButton\", function() { return _react_components_matrix_actions_detail_button_detail_button__WEBPACK_IMPORTED_MODULE_63__[\"SurveyQuestionMatrixDetailButton\"]; });\n\n/* harmony import */ var _react_components_matrix_actions_drag_drop_icon_drag_drop_icon__WEBPACK_IMPORTED_MODULE_64__ = __nested_webpack_require_126266__(/*! ../react/components/matrix-actions/drag-drop-icon/drag-drop-icon */ \"./src/react/components/matrix-actions/drag-drop-icon/drag-drop-icon.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyQuestionMatrixDynamicDragDropIcon\", function() { return _react_components_matrix_actions_drag_drop_icon_drag_drop_icon__WEBPACK_IMPORTED_MODULE_64__[\"SurveyQuestionMatrixDynamicDragDropIcon\"]; });\n\n/* harmony import */ var _react_components_paneldynamic_actions_paneldynamic_add_btn__WEBPACK_IMPORTED_MODULE_65__ = __nested_webpack_require_126266__(/*! ../react/components/paneldynamic-actions/paneldynamic-add-btn */ \"./src/react/components/paneldynamic-actions/paneldynamic-add-btn.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyQuestionPanelDynamicAddButton\", function() { return _react_components_paneldynamic_actions_paneldynamic_add_btn__WEBPACK_IMPORTED_MODULE_65__[\"SurveyQuestionPanelDynamicAddButton\"]; });\n\n/* harmony import */ var _react_components_paneldynamic_actions_paneldynamic_remove_btn__WEBPACK_IMPORTED_MODULE_66__ = __nested_webpack_require_126266__(/*! ../react/components/paneldynamic-actions/paneldynamic-remove-btn */ \"./src/react/components/paneldynamic-actions/paneldynamic-remove-btn.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyQuestionPanelDynamicRemoveButton\", function() { return _react_components_paneldynamic_actions_paneldynamic_remove_btn__WEBPACK_IMPORTED_MODULE_66__[\"SurveyQuestionPanelDynamicRemoveButton\"]; });\n\n/* harmony import */ var _react_components_paneldynamic_actions_paneldynamic_prev_btn__WEBPACK_IMPORTED_MODULE_67__ = __nested_webpack_require_126266__(/*! ../react/components/paneldynamic-actions/paneldynamic-prev-btn */ \"./src/react/components/paneldynamic-actions/paneldynamic-prev-btn.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyQuestionPanelDynamicPrevButton\", function() { return _react_components_paneldynamic_actions_paneldynamic_prev_btn__WEBPACK_IMPORTED_MODULE_67__[\"SurveyQuestionPanelDynamicPrevButton\"]; });\n\n/* harmony import */ var _react_components_paneldynamic_actions_paneldynamic_next_btn__WEBPACK_IMPORTED_MODULE_68__ = __nested_webpack_require_126266__(/*! ../react/components/paneldynamic-actions/paneldynamic-next-btn */ \"./src/react/components/paneldynamic-actions/paneldynamic-next-btn.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyQuestionPanelDynamicNextButton\", function() { return _react_components_paneldynamic_actions_paneldynamic_next_btn__WEBPACK_IMPORTED_MODULE_68__[\"SurveyQuestionPanelDynamicNextButton\"]; });\n\n/* harmony import */ var _react_components_paneldynamic_actions_paneldynamic_progress_text__WEBPACK_IMPORTED_MODULE_69__ = __nested_webpack_require_126266__(/*! ../react/components/paneldynamic-actions/paneldynamic-progress-text */ \"./src/react/components/paneldynamic-actions/paneldynamic-progress-text.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyQuestionPanelDynamicProgressText\", function() { return _react_components_paneldynamic_actions_paneldynamic_progress_text__WEBPACK_IMPORTED_MODULE_69__[\"SurveyQuestionPanelDynamicProgressText\"]; });\n\n/* harmony import */ var _react_components_survey_actions_survey_nav_button__WEBPACK_IMPORTED_MODULE_70__ = __nested_webpack_require_126266__(/*! ../react/components/survey-actions/survey-nav-button */ \"./src/react/components/survey-actions/survey-nav-button.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyNavigationButton\", function() { return _react_components_survey_actions_survey_nav_button__WEBPACK_IMPORTED_MODULE_70__[\"SurveyNavigationButton\"]; });\n\n/* harmony import */ var _react_components_matrix_row__WEBPACK_IMPORTED_MODULE_71__ = __nested_webpack_require_126266__(/*! ../react/components/matrix/row */ \"./src/react/components/matrix/row.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"MatrixRow\", function() { return _react_components_matrix_row__WEBPACK_IMPORTED_MODULE_71__[\"MatrixRow\"]; });\n\n/* harmony import */ var _react_components_skeleton__WEBPACK_IMPORTED_MODULE_72__ = __nested_webpack_require_126266__(/*! ../react/components/skeleton */ \"./src/react/components/skeleton.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"Skeleton\", function() { return _react_components_skeleton__WEBPACK_IMPORTED_MODULE_72__[\"Skeleton\"]; });\n\n/* harmony import */ var _react_components_notifier__WEBPACK_IMPORTED_MODULE_73__ = __nested_webpack_require_126266__(/*! ../react/components/notifier */ \"./src/react/components/notifier.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"NotifierComponent\", function() { return _react_components_notifier__WEBPACK_IMPORTED_MODULE_73__[\"NotifierComponent\"]; });\n\n/* harmony import */ var _react_components_components_container__WEBPACK_IMPORTED_MODULE_74__ = __nested_webpack_require_126266__(/*! ../react/components/components-container */ \"./src/react/components/components-container.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"ComponentsContainer\", function() { return _react_components_components_container__WEBPACK_IMPORTED_MODULE_74__[\"ComponentsContainer\"]; });\n\n/* harmony import */ var _react_components_character_counter__WEBPACK_IMPORTED_MODULE_75__ = __nested_webpack_require_126266__(/*! ../react/components/character-counter */ \"./src/react/components/character-counter.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"CharacterCounterComponent\", function() { return _react_components_character_counter__WEBPACK_IMPORTED_MODULE_75__[\"CharacterCounterComponent\"]; });\n\n/* harmony import */ var _react_components_header__WEBPACK_IMPORTED_MODULE_76__ = __nested_webpack_require_126266__(/*! ../react/components/header */ \"./src/react/components/header.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"HeaderMobile\", function() { return _react_components_header__WEBPACK_IMPORTED_MODULE_76__[\"HeaderMobile\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"HeaderCell\", function() { return _react_components_header__WEBPACK_IMPORTED_MODULE_76__[\"HeaderCell\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"Header\", function() { return _react_components_header__WEBPACK_IMPORTED_MODULE_76__[\"Header\"]; });\n\n/* harmony import */ var _react_string_viewer__WEBPACK_IMPORTED_MODULE_77__ = __nested_webpack_require_126266__(/*! ../react/string-viewer */ \"./src/react/string-viewer.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyLocStringViewer\", function() { return _react_string_viewer__WEBPACK_IMPORTED_MODULE_77__[\"SurveyLocStringViewer\"]; });\n\n/* harmony import */ var _react_string_editor__WEBPACK_IMPORTED_MODULE_78__ = __nested_webpack_require_126266__(/*! ../react/string-editor */ \"./src/react/string-editor.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SurveyLocStringEditor\", function() { return _react_string_editor__WEBPACK_IMPORTED_MODULE_78__[\"SurveyLocStringEditor\"]; });\n\n/* harmony import */ var _react_components_loading_indicator__WEBPACK_IMPORTED_MODULE_79__ = __nested_webpack_require_126266__(/*! ../react/components/loading-indicator */ \"./src/react/components/loading-indicator.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"LoadingIndicatorComponent\", function() { return _react_components_loading_indicator__WEBPACK_IMPORTED_MODULE_79__[\"LoadingIndicatorComponent\"]; });\n\n/* harmony import */ var _react_svgbundle__WEBPACK_IMPORTED_MODULE_80__ = __nested_webpack_require_126266__(/*! ../react/svgbundle */ \"./src/react/svgbundle.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_126266__.d(__nested_webpack_exports__, \"SvgBundleComponent\", function() { return _react_svgbundle__WEBPACK_IMPORTED_MODULE_80__[\"SvgBundleComponent\"]; });\n\n// react\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//Uncomment to include the \"date\" question type.\n//export {default as SurveyQuestionDate} from \"../plugins/react/reactquestiondate\";\n\n\n/***/ }),\n\n/***/ \"./src/entries/react-ui.ts\":\n/*!*********************************!*\\\n  !*** ./src/entries/react-ui.ts ***!\n  \\*********************************/\n/*! exports provided: Survey, attachKey2click, ReactSurveyElementsWrapper, SurveyNavigationBase, SurveyTimerPanel, SurveyPage, SurveyRow, SurveyPanel, SurveyFlowPanel, SurveyQuestion, SurveyElementErrors, SurveyQuestionAndErrorsCell, ReactSurveyElement, SurveyElementBase, SurveyQuestionElementBase, SurveyQuestionCommentItem, SurveyQuestionComment, SurveyQuestionCheckbox, SurveyQuestionCheckboxItem, SurveyQuestionRanking, SurveyQuestionRankingItem, RatingItem, RatingItemStar, RatingItemSmiley, RatingDropdownItem, TagboxFilterString, SurveyQuestionOptionItem, SurveyQuestionDropdownBase, SurveyQuestionDropdown, SurveyQuestionTagboxItem, SurveyQuestionTagbox, SurveyQuestionDropdownSelect, SurveyQuestionMatrix, SurveyQuestionMatrixRow, SurveyQuestionMatrixCell, SurveyQuestionHtml, SurveyQuestionFile, SurveyFileChooseButton, SurveyFilePreview, SurveyQuestionMultipleText, SurveyQuestionRadiogroup, SurveyQuestionRadioItem, SurveyQuestionText, SurveyQuestionBoolean, SurveyQuestionBooleanCheckbox, SurveyQuestionBooleanRadio, SurveyQuestionEmpty, SurveyQuestionMatrixDropdownCell, SurveyQuestionMatrixDropdownBase, SurveyQuestionMatrixDropdown, SurveyQuestionMatrixDynamic, SurveyQuestionMatrixDynamicAddButton, SurveyQuestionPanelDynamic, SurveyProgress, SurveyProgressButtons, SurveyProgressToc, SurveyQuestionRating, SurveyQuestionRatingDropdown, SurveyQuestionExpression, PopupSurvey, SurveyWindow, ReactQuestionFactory, ReactElementFactory, SurveyQuestionImagePicker, SurveyQuestionImage, SurveyQuestionSignaturePad, SurveyQuestionButtonGroup, SurveyQuestionCustom, SurveyQuestionComposite, Popup, List, TitleActions, TitleElement, SurveyActionBar, LogoImage, SurveyHeader, SvgIcon, SurveyQuestionMatrixDynamicRemoveButton, SurveyQuestionMatrixDetailButton, SurveyQuestionMatrixDynamicDragDropIcon, SurveyQuestionPanelDynamicAddButton, SurveyQuestionPanelDynamicRemoveButton, SurveyQuestionPanelDynamicPrevButton, SurveyQuestionPanelDynamicNextButton, SurveyQuestionPanelDynamicProgressText, SurveyNavigationButton, MatrixRow, Skeleton, NotifierComponent, ComponentsContainer, CharacterCounterComponent, HeaderMobile, HeaderCell, Header, SurveyLocStringViewer, SurveyLocStringEditor, LoadingIndicatorComponent, SvgBundleComponent, SurveyModel, SurveyWindowModel, settings, surveyLocalization, surveyStrings, Model, ResponsivityManager, VerticalResponsivityManager, unwrap */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_165349__) {\n\n\"use strict\";\n__nested_webpack_require_165349__.r(__nested_webpack_exports__);\n/* harmony import */ var _react_ui_model__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_165349__(/*! ./react-ui-model */ \"./src/entries/react-ui-model.ts\");\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"Survey\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"Survey\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"attachKey2click\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"attachKey2click\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"ReactSurveyElementsWrapper\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"ReactSurveyElementsWrapper\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyNavigationBase\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyNavigationBase\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyTimerPanel\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyTimerPanel\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyPage\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyPage\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyRow\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyRow\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyPanel\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyPanel\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyFlowPanel\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyFlowPanel\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyQuestion\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyQuestion\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyElementErrors\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyElementErrors\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyQuestionAndErrorsCell\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyQuestionAndErrorsCell\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"ReactSurveyElement\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"ReactSurveyElement\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyElementBase\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyElementBase\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyQuestionElementBase\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyQuestionElementBase\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyQuestionCommentItem\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyQuestionCommentItem\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyQuestionComment\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyQuestionComment\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyQuestionCheckbox\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyQuestionCheckbox\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyQuestionCheckboxItem\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyQuestionCheckboxItem\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyQuestionRanking\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyQuestionRanking\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyQuestionRankingItem\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyQuestionRankingItem\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"RatingItem\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"RatingItem\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"RatingItemStar\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"RatingItemStar\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"RatingItemSmiley\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"RatingItemSmiley\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"RatingDropdownItem\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"RatingDropdownItem\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"TagboxFilterString\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"TagboxFilterString\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyQuestionOptionItem\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyQuestionOptionItem\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyQuestionDropdownBase\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyQuestionDropdownBase\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyQuestionDropdown\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyQuestionDropdown\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyQuestionTagboxItem\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyQuestionTagboxItem\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyQuestionTagbox\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyQuestionTagbox\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyQuestionDropdownSelect\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyQuestionDropdownSelect\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyQuestionMatrix\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyQuestionMatrix\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyQuestionMatrixRow\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyQuestionMatrixRow\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyQuestionMatrixCell\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyQuestionMatrixCell\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyQuestionHtml\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyQuestionHtml\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyQuestionFile\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyQuestionFile\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyFileChooseButton\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyFileChooseButton\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyFilePreview\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyFilePreview\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyQuestionMultipleText\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyQuestionMultipleText\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyQuestionRadiogroup\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyQuestionRadiogroup\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyQuestionRadioItem\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyQuestionRadioItem\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyQuestionText\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyQuestionText\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyQuestionBoolean\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyQuestionBoolean\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyQuestionBooleanCheckbox\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyQuestionBooleanCheckbox\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyQuestionBooleanRadio\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyQuestionBooleanRadio\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyQuestionEmpty\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyQuestionEmpty\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyQuestionMatrixDropdownCell\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyQuestionMatrixDropdownCell\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyQuestionMatrixDropdownBase\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyQuestionMatrixDropdownBase\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyQuestionMatrixDropdown\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyQuestionMatrixDropdown\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyQuestionMatrixDynamic\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyQuestionMatrixDynamic\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyQuestionMatrixDynamicAddButton\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyQuestionMatrixDynamicAddButton\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyQuestionPanelDynamic\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyQuestionPanelDynamic\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyProgress\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyProgress\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyProgressButtons\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyProgressButtons\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyProgressToc\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyProgressToc\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyQuestionRating\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyQuestionRating\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyQuestionRatingDropdown\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyQuestionRatingDropdown\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyQuestionExpression\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyQuestionExpression\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"PopupSurvey\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"PopupSurvey\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyWindow\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyWindow\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"ReactQuestionFactory\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"ReactQuestionFactory\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"ReactElementFactory\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"ReactElementFactory\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyQuestionImagePicker\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyQuestionImagePicker\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyQuestionImage\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyQuestionImage\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyQuestionSignaturePad\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyQuestionSignaturePad\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyQuestionButtonGroup\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyQuestionButtonGroup\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyQuestionCustom\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyQuestionCustom\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyQuestionComposite\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyQuestionComposite\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"Popup\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"Popup\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"List\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"List\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"TitleActions\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"TitleActions\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"TitleElement\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"TitleElement\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyActionBar\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyActionBar\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"LogoImage\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"LogoImage\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyHeader\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyHeader\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SvgIcon\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SvgIcon\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyQuestionMatrixDynamicRemoveButton\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyQuestionMatrixDynamicRemoveButton\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyQuestionMatrixDetailButton\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyQuestionMatrixDetailButton\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyQuestionMatrixDynamicDragDropIcon\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyQuestionMatrixDynamicDragDropIcon\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyQuestionPanelDynamicAddButton\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyQuestionPanelDynamicAddButton\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyQuestionPanelDynamicRemoveButton\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyQuestionPanelDynamicRemoveButton\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyQuestionPanelDynamicPrevButton\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyQuestionPanelDynamicPrevButton\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyQuestionPanelDynamicNextButton\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyQuestionPanelDynamicNextButton\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyQuestionPanelDynamicProgressText\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyQuestionPanelDynamicProgressText\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyNavigationButton\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyNavigationButton\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"MatrixRow\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"MatrixRow\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"Skeleton\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"Skeleton\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"NotifierComponent\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"NotifierComponent\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"ComponentsContainer\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"ComponentsContainer\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"CharacterCounterComponent\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"CharacterCounterComponent\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"HeaderMobile\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"HeaderMobile\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"HeaderCell\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"HeaderCell\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"Header\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"Header\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyLocStringViewer\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyLocStringViewer\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyLocStringEditor\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SurveyLocStringEditor\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"LoadingIndicatorComponent\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"LoadingIndicatorComponent\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SvgBundleComponent\", function() { return _react_ui_model__WEBPACK_IMPORTED_MODULE_0__[\"SvgBundleComponent\"]; });\n\n/* harmony import */ var _core_export__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_165349__(/*! ./core-export */ \"./src/entries/core-export.ts\");\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyModel\", function() { return _core_export__WEBPACK_IMPORTED_MODULE_1__[\"SurveyModel\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"SurveyWindowModel\", function() { return _core_export__WEBPACK_IMPORTED_MODULE_1__[\"SurveyWindowModel\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"settings\", function() { return _core_export__WEBPACK_IMPORTED_MODULE_1__[\"settings\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"surveyLocalization\", function() { return _core_export__WEBPACK_IMPORTED_MODULE_1__[\"surveyLocalization\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"surveyStrings\", function() { return _core_export__WEBPACK_IMPORTED_MODULE_1__[\"surveyStrings\"]; });\n\n/* harmony import */ var survey_core__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_165349__(/*! survey-core */ \"survey-core\");\n/* harmony import */ var survey_core__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__nested_webpack_require_165349__.n(survey_core__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"Model\", function() { return survey_core__WEBPACK_IMPORTED_MODULE_2__[\"SurveyModel\"]; });\n\n/* harmony import */ var _utils_responsivity_manager__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_165349__(/*! ../utils/responsivity-manager */ \"./src/utils/responsivity-manager.ts\");\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"ResponsivityManager\", function() { return _utils_responsivity_manager__WEBPACK_IMPORTED_MODULE_3__[\"ResponsivityManager\"]; });\n\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"VerticalResponsivityManager\", function() { return _utils_responsivity_manager__WEBPACK_IMPORTED_MODULE_3__[\"VerticalResponsivityManager\"]; });\n\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_165349__(/*! ../utils/utils */ \"./src/utils/utils.ts\");\n/* harmony reexport (safe) */ __nested_webpack_require_165349__.d(__nested_webpack_exports__, \"unwrap\", function() { return _utils_utils__WEBPACK_IMPORTED_MODULE_4__[\"unwrap\"]; });\n\n\n\n\n\n\n\nObject(survey_core__WEBPACK_IMPORTED_MODULE_2__[\"checkLibraryVersion\"])(\"\" + \"1.9.138\", \"survey-react-ui\");\n\n\n/***/ }),\n\n/***/ \"./src/expressions/expressionParser.ts\":\n/*!*********************************************!*\\\n  !*** ./src/expressions/expressionParser.ts ***!\n  \\*********************************************/\n/*! exports provided: SyntaxError, parse */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_187301__) {\n\n\"use strict\";\n__nested_webpack_require_187301__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_187301__.d(__nested_webpack_exports__, \"SyntaxError\", function() { return SyntaxError; });\n/* harmony export (binding) */ __nested_webpack_require_187301__.d(__nested_webpack_exports__, \"parse\", function() { return parse; });\n/* harmony import */ var _expressions__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_187301__(/*! ./expressions */ \"./src/expressions/expressions.ts\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/* eslint-disable */\n\n// Generated by PEG.js v. 0.10.0 (ts-pegjs plugin v. 0.3.1 )\n//\n// https://pegjs.org/   https://github.com/metadevpro/ts-pegjs\n\"use strict\";\nvar SyntaxError = /** @class */ (function (_super) {\n    __extends(SyntaxError, _super);\n    function SyntaxError(message, expected, found, location) {\n        var _this = _super.call(this) || this;\n        _this.message = message;\n        _this.expected = expected;\n        _this.found = found;\n        _this.location = location;\n        _this.name = \"SyntaxError\";\n        if (typeof Error.captureStackTrace === \"function\") {\n            Error.captureStackTrace(_this, SyntaxError);\n        }\n        return _this;\n    }\n    SyntaxError.buildMessage = function (expected, found) {\n        function hex(ch) {\n            return ch.charCodeAt(0).toString(16).toUpperCase();\n        }\n        function literalEscape(s) {\n            return s\n                .replace(/\\\\/g, \"\\\\\\\\\")\n                .replace(/\"/g, \"\\\\\\\"\")\n                .replace(/\\0/g, \"\\\\0\")\n                .replace(/\\t/g, \"\\\\t\")\n                .replace(/\\n/g, \"\\\\n\")\n                .replace(/\\r/g, \"\\\\r\")\n                .replace(/[\\x00-\\x0F]/g, function (ch) { return \"\\\\x0\" + hex(ch); })\n                .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) { return \"\\\\x\" + hex(ch); });\n        }\n        function classEscape(s) {\n            return s\n                .replace(/\\\\/g, \"\\\\\\\\\")\n                .replace(/\\]/g, \"\\\\]\")\n                .replace(/\\^/g, \"\\\\^\")\n                .replace(/-/g, \"\\\\-\")\n                .replace(/\\0/g, \"\\\\0\")\n                .replace(/\\t/g, \"\\\\t\")\n                .replace(/\\n/g, \"\\\\n\")\n                .replace(/\\r/g, \"\\\\r\")\n                .replace(/[\\x00-\\x0F]/g, function (ch) { return \"\\\\x0\" + hex(ch); })\n                .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) { return \"\\\\x\" + hex(ch); });\n        }\n        function describeExpectation(expectation) {\n            switch (expectation.type) {\n                case \"literal\":\n                    return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n                case \"class\":\n                    var escapedParts = expectation.parts.map(function (part) {\n                        return Array.isArray(part)\n                            ? classEscape(part[0]) + \"-\" + classEscape(part[1])\n                            : classEscape(part);\n                    });\n                    return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n                case \"any\":\n                    return \"any character\";\n                case \"end\":\n                    return \"end of input\";\n                case \"other\":\n                    return expectation.description;\n            }\n        }\n        function describeExpected(expected1) {\n            var descriptions = expected1.map(describeExpectation);\n            var i;\n            var j;\n            descriptions.sort();\n            if (descriptions.length > 0) {\n                for (i = 1, j = 1; i < descriptions.length; i++) {\n                    if (descriptions[i - 1] !== descriptions[i]) {\n                        descriptions[j] = descriptions[i];\n                        j++;\n                    }\n                }\n                descriptions.length = j;\n            }\n            switch (descriptions.length) {\n                case 1:\n                    return descriptions[0];\n                case 2:\n                    return descriptions[0] + \" or \" + descriptions[1];\n                default:\n                    return descriptions.slice(0, -1).join(\", \")\n                        + \", or \"\n                        + descriptions[descriptions.length - 1];\n            }\n        }\n        function describeFound(found1) {\n            return found1 ? \"\\\"\" + literalEscape(found1) + \"\\\"\" : \"end of input\";\n        }\n        return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n    };\n    return SyntaxError;\n}(Error));\n\nfunction peg$parse(input, options) {\n    options = options !== undefined ? options : {};\n    var peg$FAILED = {};\n    var peg$startRuleFunctions = { Expression: peg$parseExpression };\n    var peg$startRuleFunction = peg$parseExpression;\n    var peg$c0 = function (head, tail) {\n        return buildBinaryOperand(head, tail, true);\n    };\n    var peg$c1 = \"||\";\n    var peg$c2 = peg$literalExpectation(\"||\", false);\n    var peg$c3 = \"or\";\n    var peg$c4 = peg$literalExpectation(\"or\", true);\n    var peg$c5 = function () { return \"or\"; };\n    var peg$c6 = \"&&\";\n    var peg$c7 = peg$literalExpectation(\"&&\", false);\n    var peg$c8 = \"and\";\n    var peg$c9 = peg$literalExpectation(\"and\", true);\n    var peg$c10 = function () { return \"and\"; };\n    var peg$c11 = function (head, tail) {\n        return buildBinaryOperand(head, tail);\n    };\n    var peg$c12 = \"<=\";\n    var peg$c13 = peg$literalExpectation(\"<=\", false);\n    var peg$c14 = \"lessorequal\";\n    var peg$c15 = peg$literalExpectation(\"lessorequal\", true);\n    var peg$c16 = function () { return \"lessorequal\"; };\n    var peg$c17 = \">=\";\n    var peg$c18 = peg$literalExpectation(\">=\", false);\n    var peg$c19 = \"greaterorequal\";\n    var peg$c20 = peg$literalExpectation(\"greaterorequal\", true);\n    var peg$c21 = function () { return \"greaterorequal\"; };\n    var peg$c22 = \"==\";\n    var peg$c23 = peg$literalExpectation(\"==\", false);\n    var peg$c24 = \"equal\";\n    var peg$c25 = peg$literalExpectation(\"equal\", true);\n    var peg$c26 = function () { return \"equal\"; };\n    var peg$c27 = \"=\";\n    var peg$c28 = peg$literalExpectation(\"=\", false);\n    var peg$c29 = \"!=\";\n    var peg$c30 = peg$literalExpectation(\"!=\", false);\n    var peg$c31 = \"notequal\";\n    var peg$c32 = peg$literalExpectation(\"notequal\", true);\n    var peg$c33 = function () { return \"notequal\"; };\n    var peg$c34 = \"<\";\n    var peg$c35 = peg$literalExpectation(\"<\", false);\n    var peg$c36 = \"less\";\n    var peg$c37 = peg$literalExpectation(\"less\", true);\n    var peg$c38 = function () { return \"less\"; };\n    var peg$c39 = \">\";\n    var peg$c40 = peg$literalExpectation(\">\", false);\n    var peg$c41 = \"greater\";\n    var peg$c42 = peg$literalExpectation(\"greater\", true);\n    var peg$c43 = function () { return \"greater\"; };\n    var peg$c44 = \"+\";\n    var peg$c45 = peg$literalExpectation(\"+\", false);\n    var peg$c46 = function () { return \"plus\"; };\n    var peg$c47 = \"-\";\n    var peg$c48 = peg$literalExpectation(\"-\", false);\n    var peg$c49 = function () { return \"minus\"; };\n    var peg$c50 = \"*\";\n    var peg$c51 = peg$literalExpectation(\"*\", false);\n    var peg$c52 = function () { return \"mul\"; };\n    var peg$c53 = \"/\";\n    var peg$c54 = peg$literalExpectation(\"/\", false);\n    var peg$c55 = function () { return \"div\"; };\n    var peg$c56 = \"%\";\n    var peg$c57 = peg$literalExpectation(\"%\", false);\n    var peg$c58 = function () { return \"mod\"; };\n    var peg$c59 = \"^\";\n    var peg$c60 = peg$literalExpectation(\"^\", false);\n    var peg$c61 = \"power\";\n    var peg$c62 = peg$literalExpectation(\"power\", true);\n    var peg$c63 = function () { return \"power\"; };\n    var peg$c64 = \"*=\";\n    var peg$c65 = peg$literalExpectation(\"*=\", false);\n    var peg$c66 = \"contains\";\n    var peg$c67 = peg$literalExpectation(\"contains\", true);\n    var peg$c68 = \"contain\";\n    var peg$c69 = peg$literalExpectation(\"contain\", true);\n    var peg$c70 = function () { return \"contains\"; };\n    var peg$c71 = \"notcontains\";\n    var peg$c72 = peg$literalExpectation(\"notcontains\", true);\n    var peg$c73 = \"notcontain\";\n    var peg$c74 = peg$literalExpectation(\"notcontain\", true);\n    var peg$c75 = function () { return \"notcontains\"; };\n    var peg$c76 = \"anyof\";\n    var peg$c77 = peg$literalExpectation(\"anyof\", true);\n    var peg$c78 = function () { return \"anyof\"; };\n    var peg$c79 = \"allof\";\n    var peg$c80 = peg$literalExpectation(\"allof\", true);\n    var peg$c81 = function () { return \"allof\"; };\n    var peg$c82 = \"(\";\n    var peg$c83 = peg$literalExpectation(\"(\", false);\n    var peg$c84 = \")\";\n    var peg$c85 = peg$literalExpectation(\")\", false);\n    var peg$c86 = function (expr) { return expr; };\n    var peg$c87 = function (name, params) { return new _expressions__WEBPACK_IMPORTED_MODULE_0__[\"FunctionOperand\"](name, params); };\n    var peg$c88 = \"!\";\n    var peg$c89 = peg$literalExpectation(\"!\", false);\n    var peg$c90 = \"negate\";\n    var peg$c91 = peg$literalExpectation(\"negate\", true);\n    var peg$c92 = function (expr) { return new _expressions__WEBPACK_IMPORTED_MODULE_0__[\"UnaryOperand\"](expr, \"negate\"); };\n    var peg$c93 = function (expr, op) { return new _expressions__WEBPACK_IMPORTED_MODULE_0__[\"UnaryOperand\"](expr, op); };\n    var peg$c94 = \"empty\";\n    var peg$c95 = peg$literalExpectation(\"empty\", true);\n    var peg$c96 = function () { return \"empty\"; };\n    var peg$c97 = \"notempty\";\n    var peg$c98 = peg$literalExpectation(\"notempty\", true);\n    var peg$c99 = function () { return \"notempty\"; };\n    var peg$c100 = \"undefined\";\n    var peg$c101 = peg$literalExpectation(\"undefined\", false);\n    var peg$c102 = \"null\";\n    var peg$c103 = peg$literalExpectation(\"null\", false);\n    var peg$c104 = function () { return null; };\n    var peg$c105 = function (value) { return new _expressions__WEBPACK_IMPORTED_MODULE_0__[\"Const\"](value); };\n    var peg$c106 = \"{\";\n    var peg$c107 = peg$literalExpectation(\"{\", false);\n    var peg$c108 = \"}\";\n    var peg$c109 = peg$literalExpectation(\"}\", false);\n    var peg$c110 = function (value) { return new _expressions__WEBPACK_IMPORTED_MODULE_0__[\"Variable\"](value); };\n    var peg$c111 = function (value) { return value; };\n    var peg$c112 = \"''\";\n    var peg$c113 = peg$literalExpectation(\"''\", false);\n    var peg$c114 = function () { return \"\"; };\n    var peg$c115 = \"\\\"\\\"\";\n    var peg$c116 = peg$literalExpectation(\"\\\"\\\"\", false);\n    var peg$c117 = \"'\";\n    var peg$c118 = peg$literalExpectation(\"'\", false);\n    var peg$c119 = function (value) { return \"'\" + value + \"'\"; };\n    var peg$c120 = \"\\\"\";\n    var peg$c121 = peg$literalExpectation(\"\\\"\", false);\n    var peg$c122 = \"[\";\n    var peg$c123 = peg$literalExpectation(\"[\", false);\n    var peg$c124 = \"]\";\n    var peg$c125 = peg$literalExpectation(\"]\", false);\n    var peg$c126 = function (sequence) { return sequence; };\n    var peg$c127 = \",\";\n    var peg$c128 = peg$literalExpectation(\",\", false);\n    var peg$c129 = function (expr, tail) {\n        if (expr == null)\n            return new _expressions__WEBPACK_IMPORTED_MODULE_0__[\"ArrayOperand\"]([]);\n        var array = [expr];\n        if (Array.isArray(tail)) {\n            var flatten = flattenArray(tail);\n            for (var i = 3; i < flatten.length; i += 4) {\n                array.push(flatten[i]);\n            }\n        }\n        return new _expressions__WEBPACK_IMPORTED_MODULE_0__[\"ArrayOperand\"](array);\n    };\n    var peg$c130 = \"true\";\n    var peg$c131 = peg$literalExpectation(\"true\", true);\n    var peg$c132 = function () { return true; };\n    var peg$c133 = \"false\";\n    var peg$c134 = peg$literalExpectation(\"false\", true);\n    var peg$c135 = function () { return false; };\n    var peg$c136 = \"0x\";\n    var peg$c137 = peg$literalExpectation(\"0x\", false);\n    var peg$c138 = function () { return parseInt(text(), 16); };\n    var peg$c139 = /^[\\-]/;\n    var peg$c140 = peg$classExpectation([\"-\"], false, false);\n    var peg$c141 = function (sign, num) { return sign == null ? num : -num; };\n    var peg$c142 = \".\";\n    var peg$c143 = peg$literalExpectation(\".\", false);\n    var peg$c144 = function () { return parseFloat(text()); };\n    var peg$c145 = function () { return parseInt(text(), 10); };\n    var peg$c146 = \"0\";\n    var peg$c147 = peg$literalExpectation(\"0\", false);\n    var peg$c148 = function () { return 0; };\n    var peg$c149 = function (chars) { return chars.join(\"\"); };\n    var peg$c150 = \"\\\\'\";\n    var peg$c151 = peg$literalExpectation(\"\\\\'\", false);\n    var peg$c152 = function () { return \"'\"; };\n    var peg$c153 = \"\\\\\\\"\";\n    var peg$c154 = peg$literalExpectation(\"\\\\\\\"\", false);\n    var peg$c155 = function () { return \"\\\"\"; };\n    var peg$c156 = /^[^\"']/;\n    var peg$c157 = peg$classExpectation([\"\\\"\", \"'\"], true, false);\n    var peg$c158 = function () { return text(); };\n    var peg$c159 = /^[^{}]/;\n    var peg$c160 = peg$classExpectation([\"{\", \"}\"], true, false);\n    var peg$c161 = /^[0-9]/;\n    var peg$c162 = peg$classExpectation([[\"0\", \"9\"]], false, false);\n    var peg$c163 = /^[1-9]/;\n    var peg$c164 = peg$classExpectation([[\"1\", \"9\"]], false, false);\n    var peg$c165 = /^[a-zA-Z_]/;\n    var peg$c166 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], \"_\"], false, false);\n    var peg$c167 = peg$otherExpectation(\"whitespace\");\n    var peg$c168 = /^[ \\t\\n\\r]/;\n    var peg$c169 = peg$classExpectation([\" \", \"\\t\", \"\\n\", \"\\r\"], false, false);\n    var peg$currPos = 0;\n    var peg$savedPos = 0;\n    var peg$posDetailsCache = [{ line: 1, column: 1 }];\n    var peg$maxFailPos = 0;\n    var peg$maxFailExpected = [];\n    var peg$silentFails = 0;\n    var peg$resultsCache = {};\n    var peg$result;\n    if (options.startRule !== undefined) {\n        if (!(options.startRule in peg$startRuleFunctions)) {\n            throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n        }\n        peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n    function text() {\n        return input.substring(peg$savedPos, peg$currPos);\n    }\n    function location() {\n        return peg$computeLocation(peg$savedPos, peg$currPos);\n    }\n    function expected(description, location1) {\n        location1 = location1 !== undefined\n            ? location1\n            : peg$computeLocation(peg$savedPos, peg$currPos);\n        throw peg$buildStructuredError([peg$otherExpectation(description)], input.substring(peg$savedPos, peg$currPos), location1);\n    }\n    function error(message, location1) {\n        location1 = location1 !== undefined\n            ? location1\n            : peg$computeLocation(peg$savedPos, peg$currPos);\n        throw peg$buildSimpleError(message, location1);\n    }\n    function peg$literalExpectation(text1, ignoreCase) {\n        return { type: \"literal\", text: text1, ignoreCase: ignoreCase };\n    }\n    function peg$classExpectation(parts, inverted, ignoreCase) {\n        return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n    }\n    function peg$anyExpectation() {\n        return { type: \"any\" };\n    }\n    function peg$endExpectation() {\n        return { type: \"end\" };\n    }\n    function peg$otherExpectation(description) {\n        return { type: \"other\", description: description };\n    }\n    function peg$computePosDetails(pos) {\n        var details = peg$posDetailsCache[pos];\n        var p;\n        if (details) {\n            return details;\n        }\n        else {\n            p = pos - 1;\n            while (!peg$posDetailsCache[p]) {\n                p--;\n            }\n            details = peg$posDetailsCache[p];\n            details = {\n                line: details.line,\n                column: details.column\n            };\n            while (p < pos) {\n                if (input.charCodeAt(p) === 10) {\n                    details.line++;\n                    details.column = 1;\n                }\n                else {\n                    details.column++;\n                }\n                p++;\n            }\n            peg$posDetailsCache[pos] = details;\n            return details;\n        }\n    }\n    function peg$computeLocation(startPos, endPos) {\n        var startPosDetails = peg$computePosDetails(startPos);\n        var endPosDetails = peg$computePosDetails(endPos);\n        return {\n            start: {\n                offset: startPos,\n                line: startPosDetails.line,\n                column: startPosDetails.column\n            },\n            end: {\n                offset: endPos,\n                line: endPosDetails.line,\n                column: endPosDetails.column\n            }\n        };\n    }\n    function peg$fail(expected1) {\n        if (peg$currPos < peg$maxFailPos) {\n            return;\n        }\n        if (peg$currPos > peg$maxFailPos) {\n            peg$maxFailPos = peg$currPos;\n            peg$maxFailExpected = [];\n        }\n        peg$maxFailExpected.push(expected1);\n    }\n    function peg$buildSimpleError(message, location1) {\n        return new SyntaxError(message, [], \"\", location1);\n    }\n    function peg$buildStructuredError(expected1, found, location1) {\n        return new SyntaxError(SyntaxError.buildMessage(expected1, found), expected1, found, location1);\n    }\n    function peg$parseExpression() {\n        var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n        var key = peg$currPos * 34 + 0;\n        var cached = peg$resultsCache[key];\n        if (cached) {\n            peg$currPos = cached.nextPos;\n            return cached.result;\n        }\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parseLogicOr();\n            if (s2 !== peg$FAILED) {\n                s3 = [];\n                s4 = peg$currPos;\n                s5 = peg$parse_();\n                if (s5 !== peg$FAILED) {\n                    s6 = peg$parseOrSign();\n                    if (s6 !== peg$FAILED) {\n                        s7 = peg$parse_();\n                        if (s7 !== peg$FAILED) {\n                            s8 = peg$parseLogicOr();\n                            if (s8 !== peg$FAILED) {\n                                s5 = [s5, s6, s7, s8];\n                                s4 = s5;\n                            }\n                            else {\n                                peg$currPos = s4;\n                                s4 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s4;\n                            s4 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s4;\n                        s4 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s4;\n                    s4 = peg$FAILED;\n                }\n                while (s4 !== peg$FAILED) {\n                    s3.push(s4);\n                    s4 = peg$currPos;\n                    s5 = peg$parse_();\n                    if (s5 !== peg$FAILED) {\n                        s6 = peg$parseOrSign();\n                        if (s6 !== peg$FAILED) {\n                            s7 = peg$parse_();\n                            if (s7 !== peg$FAILED) {\n                                s8 = peg$parseLogicOr();\n                                if (s8 !== peg$FAILED) {\n                                    s5 = [s5, s6, s7, s8];\n                                    s4 = s5;\n                                }\n                                else {\n                                    peg$currPos = s4;\n                                    s4 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s4;\n                                s4 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s4;\n                            s4 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s4;\n                        s4 = peg$FAILED;\n                    }\n                }\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        peg$savedPos = s0;\n                        s1 = peg$c0(s2, s3);\n                        s0 = s1;\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n        return s0;\n    }\n    function peg$parseOrSign() {\n        var s0, s1;\n        var key = peg$currPos * 34 + 1;\n        var cached = peg$resultsCache[key];\n        if (cached) {\n            peg$currPos = cached.nextPos;\n            return cached.result;\n        }\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c1) {\n            s1 = peg$c1;\n            peg$currPos += 2;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c2);\n            }\n        }\n        if (s1 === peg$FAILED) {\n            if (input.substr(peg$currPos, 2).toLowerCase() === peg$c3) {\n                s1 = input.substr(peg$currPos, 2);\n                peg$currPos += 2;\n            }\n            else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c4);\n                }\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c5();\n        }\n        s0 = s1;\n        peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n        return s0;\n    }\n    function peg$parseLogicOr() {\n        var s0, s1, s2, s3, s4, s5, s6, s7;\n        var key = peg$currPos * 34 + 2;\n        var cached = peg$resultsCache[key];\n        if (cached) {\n            peg$currPos = cached.nextPos;\n            return cached.result;\n        }\n        s0 = peg$currPos;\n        s1 = peg$parseLogicAnd();\n        if (s1 !== peg$FAILED) {\n            s2 = [];\n            s3 = peg$currPos;\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n                s5 = peg$parseAndSign();\n                if (s5 !== peg$FAILED) {\n                    s6 = peg$parse_();\n                    if (s6 !== peg$FAILED) {\n                        s7 = peg$parseLogicAnd();\n                        if (s7 !== peg$FAILED) {\n                            s4 = [s4, s5, s6, s7];\n                            s3 = s4;\n                        }\n                        else {\n                            peg$currPos = s3;\n                            s3 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s3;\n                        s3 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n            }\n            while (s3 !== peg$FAILED) {\n                s2.push(s3);\n                s3 = peg$currPos;\n                s4 = peg$parse_();\n                if (s4 !== peg$FAILED) {\n                    s5 = peg$parseAndSign();\n                    if (s5 !== peg$FAILED) {\n                        s6 = peg$parse_();\n                        if (s6 !== peg$FAILED) {\n                            s7 = peg$parseLogicAnd();\n                            if (s7 !== peg$FAILED) {\n                                s4 = [s4, s5, s6, s7];\n                                s3 = s4;\n                            }\n                            else {\n                                peg$currPos = s3;\n                                s3 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s3;\n                            s3 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s3;\n                        s3 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                }\n            }\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c0(s1, s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n        return s0;\n    }\n    function peg$parseAndSign() {\n        var s0, s1;\n        var key = peg$currPos * 34 + 3;\n        var cached = peg$resultsCache[key];\n        if (cached) {\n            peg$currPos = cached.nextPos;\n            return cached.result;\n        }\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c6) {\n            s1 = peg$c6;\n            peg$currPos += 2;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c7);\n            }\n        }\n        if (s1 === peg$FAILED) {\n            if (input.substr(peg$currPos, 3).toLowerCase() === peg$c8) {\n                s1 = input.substr(peg$currPos, 3);\n                peg$currPos += 3;\n            }\n            else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c9);\n                }\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c10();\n        }\n        s0 = s1;\n        peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n        return s0;\n    }\n    function peg$parseLogicAnd() {\n        var s0, s1, s2, s3, s4, s5, s6, s7;\n        var key = peg$currPos * 34 + 4;\n        var cached = peg$resultsCache[key];\n        if (cached) {\n            peg$currPos = cached.nextPos;\n            return cached.result;\n        }\n        s0 = peg$currPos;\n        s1 = peg$parseCompOps();\n        if (s1 !== peg$FAILED) {\n            s2 = [];\n            s3 = peg$currPos;\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n                s5 = peg$parseComparableOperators();\n                if (s5 !== peg$FAILED) {\n                    s6 = peg$parse_();\n                    if (s6 !== peg$FAILED) {\n                        s7 = peg$parseCompOps();\n                        if (s7 !== peg$FAILED) {\n                            s4 = [s4, s5, s6, s7];\n                            s3 = s4;\n                        }\n                        else {\n                            peg$currPos = s3;\n                            s3 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s3;\n                        s3 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n            }\n            while (s3 !== peg$FAILED) {\n                s2.push(s3);\n                s3 = peg$currPos;\n                s4 = peg$parse_();\n                if (s4 !== peg$FAILED) {\n                    s5 = peg$parseComparableOperators();\n                    if (s5 !== peg$FAILED) {\n                        s6 = peg$parse_();\n                        if (s6 !== peg$FAILED) {\n                            s7 = peg$parseCompOps();\n                            if (s7 !== peg$FAILED) {\n                                s4 = [s4, s5, s6, s7];\n                                s3 = s4;\n                            }\n                            else {\n                                peg$currPos = s3;\n                                s3 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s3;\n                            s3 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s3;\n                        s3 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                }\n            }\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c11(s1, s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n        return s0;\n    }\n    function peg$parseComparableOperators() {\n        var s0, s1;\n        var key = peg$currPos * 34 + 5;\n        var cached = peg$resultsCache[key];\n        if (cached) {\n            peg$currPos = cached.nextPos;\n            return cached.result;\n        }\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c12) {\n            s1 = peg$c12;\n            peg$currPos += 2;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c13);\n            }\n        }\n        if (s1 === peg$FAILED) {\n            if (input.substr(peg$currPos, 11).toLowerCase() === peg$c14) {\n                s1 = input.substr(peg$currPos, 11);\n                peg$currPos += 11;\n            }\n            else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c15);\n                }\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c16();\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.substr(peg$currPos, 2) === peg$c17) {\n                s1 = peg$c17;\n                peg$currPos += 2;\n            }\n            else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c18);\n                }\n            }\n            if (s1 === peg$FAILED) {\n                if (input.substr(peg$currPos, 14).toLowerCase() === peg$c19) {\n                    s1 = input.substr(peg$currPos, 14);\n                    peg$currPos += 14;\n                }\n                else {\n                    s1 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c20);\n                    }\n                }\n            }\n            if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c21();\n            }\n            s0 = s1;\n            if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                if (input.substr(peg$currPos, 2) === peg$c22) {\n                    s1 = peg$c22;\n                    peg$currPos += 2;\n                }\n                else {\n                    s1 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c23);\n                    }\n                }\n                if (s1 === peg$FAILED) {\n                    if (input.substr(peg$currPos, 5).toLowerCase() === peg$c24) {\n                        s1 = input.substr(peg$currPos, 5);\n                        peg$currPos += 5;\n                    }\n                    else {\n                        s1 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c25);\n                        }\n                    }\n                }\n                if (s1 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c26();\n                }\n                s0 = s1;\n                if (s0 === peg$FAILED) {\n                    s0 = peg$currPos;\n                    if (input.charCodeAt(peg$currPos) === 61) {\n                        s1 = peg$c27;\n                        peg$currPos++;\n                    }\n                    else {\n                        s1 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c28);\n                        }\n                    }\n                    if (s1 === peg$FAILED) {\n                        if (input.substr(peg$currPos, 5).toLowerCase() === peg$c24) {\n                            s1 = input.substr(peg$currPos, 5);\n                            peg$currPos += 5;\n                        }\n                        else {\n                            s1 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c25);\n                            }\n                        }\n                    }\n                    if (s1 !== peg$FAILED) {\n                        peg$savedPos = s0;\n                        s1 = peg$c26();\n                    }\n                    s0 = s1;\n                    if (s0 === peg$FAILED) {\n                        s0 = peg$currPos;\n                        if (input.substr(peg$currPos, 2) === peg$c29) {\n                            s1 = peg$c29;\n                            peg$currPos += 2;\n                        }\n                        else {\n                            s1 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c30);\n                            }\n                        }\n                        if (s1 === peg$FAILED) {\n                            if (input.substr(peg$currPos, 8).toLowerCase() === peg$c31) {\n                                s1 = input.substr(peg$currPos, 8);\n                                peg$currPos += 8;\n                            }\n                            else {\n                                s1 = peg$FAILED;\n                                if (peg$silentFails === 0) {\n                                    peg$fail(peg$c32);\n                                }\n                            }\n                        }\n                        if (s1 !== peg$FAILED) {\n                            peg$savedPos = s0;\n                            s1 = peg$c33();\n                        }\n                        s0 = s1;\n                        if (s0 === peg$FAILED) {\n                            s0 = peg$currPos;\n                            if (input.charCodeAt(peg$currPos) === 60) {\n                                s1 = peg$c34;\n                                peg$currPos++;\n                            }\n                            else {\n                                s1 = peg$FAILED;\n                                if (peg$silentFails === 0) {\n                                    peg$fail(peg$c35);\n                                }\n                            }\n                            if (s1 === peg$FAILED) {\n                                if (input.substr(peg$currPos, 4).toLowerCase() === peg$c36) {\n                                    s1 = input.substr(peg$currPos, 4);\n                                    peg$currPos += 4;\n                                }\n                                else {\n                                    s1 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c37);\n                                    }\n                                }\n                            }\n                            if (s1 !== peg$FAILED) {\n                                peg$savedPos = s0;\n                                s1 = peg$c38();\n                            }\n                            s0 = s1;\n                            if (s0 === peg$FAILED) {\n                                s0 = peg$currPos;\n                                if (input.charCodeAt(peg$currPos) === 62) {\n                                    s1 = peg$c39;\n                                    peg$currPos++;\n                                }\n                                else {\n                                    s1 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c40);\n                                    }\n                                }\n                                if (s1 === peg$FAILED) {\n                                    if (input.substr(peg$currPos, 7).toLowerCase() === peg$c41) {\n                                        s1 = input.substr(peg$currPos, 7);\n                                        peg$currPos += 7;\n                                    }\n                                    else {\n                                        s1 = peg$FAILED;\n                                        if (peg$silentFails === 0) {\n                                            peg$fail(peg$c42);\n                                        }\n                                    }\n                                }\n                                if (s1 !== peg$FAILED) {\n                                    peg$savedPos = s0;\n                                    s1 = peg$c43();\n                                }\n                                s0 = s1;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n        return s0;\n    }\n    function peg$parseCompOps() {\n        var s0, s1, s2, s3, s4, s5, s6, s7;\n        var key = peg$currPos * 34 + 6;\n        var cached = peg$resultsCache[key];\n        if (cached) {\n            peg$currPos = cached.nextPos;\n            return cached.result;\n        }\n        s0 = peg$currPos;\n        s1 = peg$parsePlusMinusOps();\n        if (s1 !== peg$FAILED) {\n            s2 = [];\n            s3 = peg$currPos;\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n                s5 = peg$parsePlusMinusSigns();\n                if (s5 !== peg$FAILED) {\n                    s6 = peg$parse_();\n                    if (s6 !== peg$FAILED) {\n                        s7 = peg$parsePlusMinusOps();\n                        if (s7 !== peg$FAILED) {\n                            s4 = [s4, s5, s6, s7];\n                            s3 = s4;\n                        }\n                        else {\n                            peg$currPos = s3;\n                            s3 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s3;\n                        s3 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n            }\n            while (s3 !== peg$FAILED) {\n                s2.push(s3);\n                s3 = peg$currPos;\n                s4 = peg$parse_();\n                if (s4 !== peg$FAILED) {\n                    s5 = peg$parsePlusMinusSigns();\n                    if (s5 !== peg$FAILED) {\n                        s6 = peg$parse_();\n                        if (s6 !== peg$FAILED) {\n                            s7 = peg$parsePlusMinusOps();\n                            if (s7 !== peg$FAILED) {\n                                s4 = [s4, s5, s6, s7];\n                                s3 = s4;\n                            }\n                            else {\n                                peg$currPos = s3;\n                                s3 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s3;\n                            s3 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s3;\n                        s3 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                }\n            }\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c0(s1, s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n        return s0;\n    }\n    function peg$parsePlusMinusSigns() {\n        var s0, s1;\n        var key = peg$currPos * 34 + 7;\n        var cached = peg$resultsCache[key];\n        if (cached) {\n            peg$currPos = cached.nextPos;\n            return cached.result;\n        }\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 43) {\n            s1 = peg$c44;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c45);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c46();\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 45) {\n                s1 = peg$c47;\n                peg$currPos++;\n            }\n            else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c48);\n                }\n            }\n            if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c49();\n            }\n            s0 = s1;\n        }\n        peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n        return s0;\n    }\n    function peg$parsePlusMinusOps() {\n        var s0, s1, s2, s3, s4, s5, s6, s7;\n        var key = peg$currPos * 34 + 8;\n        var cached = peg$resultsCache[key];\n        if (cached) {\n            peg$currPos = cached.nextPos;\n            return cached.result;\n        }\n        s0 = peg$currPos;\n        s1 = peg$parseMulDivOps();\n        if (s1 !== peg$FAILED) {\n            s2 = [];\n            s3 = peg$currPos;\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n                s5 = peg$parseMulDivSigns();\n                if (s5 !== peg$FAILED) {\n                    s6 = peg$parse_();\n                    if (s6 !== peg$FAILED) {\n                        s7 = peg$parseMulDivOps();\n                        if (s7 !== peg$FAILED) {\n                            s4 = [s4, s5, s6, s7];\n                            s3 = s4;\n                        }\n                        else {\n                            peg$currPos = s3;\n                            s3 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s3;\n                        s3 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n            }\n            while (s3 !== peg$FAILED) {\n                s2.push(s3);\n                s3 = peg$currPos;\n                s4 = peg$parse_();\n                if (s4 !== peg$FAILED) {\n                    s5 = peg$parseMulDivSigns();\n                    if (s5 !== peg$FAILED) {\n                        s6 = peg$parse_();\n                        if (s6 !== peg$FAILED) {\n                            s7 = peg$parseMulDivOps();\n                            if (s7 !== peg$FAILED) {\n                                s4 = [s4, s5, s6, s7];\n                                s3 = s4;\n                            }\n                            else {\n                                peg$currPos = s3;\n                                s3 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s3;\n                            s3 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s3;\n                        s3 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                }\n            }\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c0(s1, s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n        return s0;\n    }\n    function peg$parseMulDivSigns() {\n        var s0, s1;\n        var key = peg$currPos * 34 + 9;\n        var cached = peg$resultsCache[key];\n        if (cached) {\n            peg$currPos = cached.nextPos;\n            return cached.result;\n        }\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 42) {\n            s1 = peg$c50;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c51);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c52();\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 47) {\n                s1 = peg$c53;\n                peg$currPos++;\n            }\n            else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c54);\n                }\n            }\n            if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c55();\n            }\n            s0 = s1;\n            if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                if (input.charCodeAt(peg$currPos) === 37) {\n                    s1 = peg$c56;\n                    peg$currPos++;\n                }\n                else {\n                    s1 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c57);\n                    }\n                }\n                if (s1 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c58();\n                }\n                s0 = s1;\n            }\n        }\n        peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n        return s0;\n    }\n    function peg$parseMulDivOps() {\n        var s0, s1, s2, s3, s4, s5, s6, s7;\n        var key = peg$currPos * 34 + 10;\n        var cached = peg$resultsCache[key];\n        if (cached) {\n            peg$currPos = cached.nextPos;\n            return cached.result;\n        }\n        s0 = peg$currPos;\n        s1 = peg$parseBinaryFuncOp();\n        if (s1 !== peg$FAILED) {\n            s2 = [];\n            s3 = peg$currPos;\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n                s5 = peg$parsePowerSigns();\n                if (s5 !== peg$FAILED) {\n                    s6 = peg$parse_();\n                    if (s6 !== peg$FAILED) {\n                        s7 = peg$parseBinaryFuncOp();\n                        if (s7 !== peg$FAILED) {\n                            s4 = [s4, s5, s6, s7];\n                            s3 = s4;\n                        }\n                        else {\n                            peg$currPos = s3;\n                            s3 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s3;\n                        s3 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n            }\n            while (s3 !== peg$FAILED) {\n                s2.push(s3);\n                s3 = peg$currPos;\n                s4 = peg$parse_();\n                if (s4 !== peg$FAILED) {\n                    s5 = peg$parsePowerSigns();\n                    if (s5 !== peg$FAILED) {\n                        s6 = peg$parse_();\n                        if (s6 !== peg$FAILED) {\n                            s7 = peg$parseBinaryFuncOp();\n                            if (s7 !== peg$FAILED) {\n                                s4 = [s4, s5, s6, s7];\n                                s3 = s4;\n                            }\n                            else {\n                                peg$currPos = s3;\n                                s3 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s3;\n                            s3 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s3;\n                        s3 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                }\n            }\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c0(s1, s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n        return s0;\n    }\n    function peg$parsePowerSigns() {\n        var s0, s1;\n        var key = peg$currPos * 34 + 11;\n        var cached = peg$resultsCache[key];\n        if (cached) {\n            peg$currPos = cached.nextPos;\n            return cached.result;\n        }\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 94) {\n            s1 = peg$c59;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c60);\n            }\n        }\n        if (s1 === peg$FAILED) {\n            if (input.substr(peg$currPos, 5).toLowerCase() === peg$c61) {\n                s1 = input.substr(peg$currPos, 5);\n                peg$currPos += 5;\n            }\n            else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c62);\n                }\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c63();\n        }\n        s0 = s1;\n        peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n        return s0;\n    }\n    function peg$parseBinaryFuncOp() {\n        var s0, s1, s2, s3, s4, s5, s6, s7;\n        var key = peg$currPos * 34 + 12;\n        var cached = peg$resultsCache[key];\n        if (cached) {\n            peg$currPos = cached.nextPos;\n            return cached.result;\n        }\n        s0 = peg$currPos;\n        s1 = peg$parseFactor();\n        if (s1 !== peg$FAILED) {\n            s2 = [];\n            s3 = peg$currPos;\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n                s5 = peg$parseBinFunctions();\n                if (s5 !== peg$FAILED) {\n                    s6 = peg$parse_();\n                    if (s6 !== peg$FAILED) {\n                        s7 = peg$parseFactor();\n                        if (s7 === peg$FAILED) {\n                            s7 = null;\n                        }\n                        if (s7 !== peg$FAILED) {\n                            s4 = [s4, s5, s6, s7];\n                            s3 = s4;\n                        }\n                        else {\n                            peg$currPos = s3;\n                            s3 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s3;\n                        s3 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n            }\n            while (s3 !== peg$FAILED) {\n                s2.push(s3);\n                s3 = peg$currPos;\n                s4 = peg$parse_();\n                if (s4 !== peg$FAILED) {\n                    s5 = peg$parseBinFunctions();\n                    if (s5 !== peg$FAILED) {\n                        s6 = peg$parse_();\n                        if (s6 !== peg$FAILED) {\n                            s7 = peg$parseFactor();\n                            if (s7 === peg$FAILED) {\n                                s7 = null;\n                            }\n                            if (s7 !== peg$FAILED) {\n                                s4 = [s4, s5, s6, s7];\n                                s3 = s4;\n                            }\n                            else {\n                                peg$currPos = s3;\n                                s3 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s3;\n                            s3 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s3;\n                        s3 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                }\n            }\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c11(s1, s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n        return s0;\n    }\n    function peg$parseBinFunctions() {\n        var s0, s1;\n        var key = peg$currPos * 34 + 13;\n        var cached = peg$resultsCache[key];\n        if (cached) {\n            peg$currPos = cached.nextPos;\n            return cached.result;\n        }\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c64) {\n            s1 = peg$c64;\n            peg$currPos += 2;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c65);\n            }\n        }\n        if (s1 === peg$FAILED) {\n            if (input.substr(peg$currPos, 8).toLowerCase() === peg$c66) {\n                s1 = input.substr(peg$currPos, 8);\n                peg$currPos += 8;\n            }\n            else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c67);\n                }\n            }\n            if (s1 === peg$FAILED) {\n                if (input.substr(peg$currPos, 7).toLowerCase() === peg$c68) {\n                    s1 = input.substr(peg$currPos, 7);\n                    peg$currPos += 7;\n                }\n                else {\n                    s1 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c69);\n                    }\n                }\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c70();\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.substr(peg$currPos, 11).toLowerCase() === peg$c71) {\n                s1 = input.substr(peg$currPos, 11);\n                peg$currPos += 11;\n            }\n            else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c72);\n                }\n            }\n            if (s1 === peg$FAILED) {\n                if (input.substr(peg$currPos, 10).toLowerCase() === peg$c73) {\n                    s1 = input.substr(peg$currPos, 10);\n                    peg$currPos += 10;\n                }\n                else {\n                    s1 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c74);\n                    }\n                }\n            }\n            if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c75();\n            }\n            s0 = s1;\n            if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                if (input.substr(peg$currPos, 5).toLowerCase() === peg$c76) {\n                    s1 = input.substr(peg$currPos, 5);\n                    peg$currPos += 5;\n                }\n                else {\n                    s1 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c77);\n                    }\n                }\n                if (s1 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c78();\n                }\n                s0 = s1;\n                if (s0 === peg$FAILED) {\n                    s0 = peg$currPos;\n                    if (input.substr(peg$currPos, 5).toLowerCase() === peg$c79) {\n                        s1 = input.substr(peg$currPos, 5);\n                        peg$currPos += 5;\n                    }\n                    else {\n                        s1 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c80);\n                        }\n                    }\n                    if (s1 !== peg$FAILED) {\n                        peg$savedPos = s0;\n                        s1 = peg$c81();\n                    }\n                    s0 = s1;\n                }\n            }\n        }\n        peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n        return s0;\n    }\n    function peg$parseFactor() {\n        var s0, s1, s2, s3, s4, s5;\n        var key = peg$currPos * 34 + 14;\n        var cached = peg$resultsCache[key];\n        if (cached) {\n            peg$currPos = cached.nextPos;\n            return cached.result;\n        }\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 40) {\n            s1 = peg$c82;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c83);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseExpression();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 41) {\n                            s5 = peg$c84;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c85);\n                            }\n                        }\n                        if (s5 === peg$FAILED) {\n                            s5 = null;\n                        }\n                        if (s5 !== peg$FAILED) {\n                            peg$savedPos = s0;\n                            s1 = peg$c86(s3);\n                            s0 = s1;\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = peg$parseFunctionOp();\n            if (s0 === peg$FAILED) {\n                s0 = peg$parseUnaryFunctionOp();\n                if (s0 === peg$FAILED) {\n                    s0 = peg$parseAtom();\n                    if (s0 === peg$FAILED) {\n                        s0 = peg$parseArrayOp();\n                    }\n                }\n            }\n        }\n        peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n        return s0;\n    }\n    function peg$parseFunctionOp() {\n        var s0, s1, s2, s3, s4;\n        var key = peg$currPos * 34 + 15;\n        var cached = peg$resultsCache[key];\n        if (cached) {\n            peg$currPos = cached.nextPos;\n            return cached.result;\n        }\n        s0 = peg$currPos;\n        s1 = peg$parseLettersAndDigits();\n        if (s1 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 40) {\n                s2 = peg$c82;\n                peg$currPos++;\n            }\n            else {\n                s2 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c83);\n                }\n            }\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseSequence();\n                if (s3 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 41) {\n                        s4 = peg$c84;\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c85);\n                        }\n                    }\n                    if (s4 === peg$FAILED) {\n                        s4 = null;\n                    }\n                    if (s4 !== peg$FAILED) {\n                        peg$savedPos = s0;\n                        s1 = peg$c87(s1, s3);\n                        s0 = s1;\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n        return s0;\n    }\n    function peg$parseUnaryFunctionOp() {\n        var s0, s1, s2, s3;\n        var key = peg$currPos * 34 + 16;\n        var cached = peg$resultsCache[key];\n        if (cached) {\n            peg$currPos = cached.nextPos;\n            return cached.result;\n        }\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 33) {\n            s1 = peg$c88;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c89);\n            }\n        }\n        if (s1 === peg$FAILED) {\n            if (input.substr(peg$currPos, 6).toLowerCase() === peg$c90) {\n                s1 = input.substr(peg$currPos, 6);\n                peg$currPos += 6;\n            }\n            else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c91);\n                }\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseExpression();\n                if (s3 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c92(s3);\n                    s0 = s1;\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$parseAtom();\n            if (s1 !== peg$FAILED) {\n                s2 = peg$parse_();\n                if (s2 !== peg$FAILED) {\n                    s3 = peg$parseUnFunctions();\n                    if (s3 !== peg$FAILED) {\n                        peg$savedPos = s0;\n                        s1 = peg$c93(s1, s3);\n                        s0 = s1;\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n        return s0;\n    }\n    function peg$parseUnFunctions() {\n        var s0, s1;\n        var key = peg$currPos * 34 + 17;\n        var cached = peg$resultsCache[key];\n        if (cached) {\n            peg$currPos = cached.nextPos;\n            return cached.result;\n        }\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 5).toLowerCase() === peg$c94) {\n            s1 = input.substr(peg$currPos, 5);\n            peg$currPos += 5;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c95);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c96();\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.substr(peg$currPos, 8).toLowerCase() === peg$c97) {\n                s1 = input.substr(peg$currPos, 8);\n                peg$currPos += 8;\n            }\n            else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c98);\n                }\n            }\n            if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c99();\n            }\n            s0 = s1;\n        }\n        peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n        return s0;\n    }\n    function peg$parseAtom() {\n        var s0, s1, s2, s3, s4;\n        var key = peg$currPos * 34 + 18;\n        var cached = peg$resultsCache[key];\n        if (cached) {\n            peg$currPos = cached.nextPos;\n            return cached.result;\n        }\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n        if (s1 !== peg$FAILED) {\n            if (input.substr(peg$currPos, 9) === peg$c100) {\n                s2 = peg$c100;\n                peg$currPos += 9;\n            }\n            else {\n                s2 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c101);\n                }\n            }\n            if (s2 === peg$FAILED) {\n                if (input.substr(peg$currPos, 4) === peg$c102) {\n                    s2 = peg$c102;\n                    peg$currPos += 4;\n                }\n                else {\n                    s2 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c103);\n                    }\n                }\n            }\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c104();\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$parse_();\n            if (s1 !== peg$FAILED) {\n                s2 = peg$parseConstValue();\n                if (s2 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c105(s2);\n                    s0 = s1;\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n            if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                s1 = peg$parse_();\n                if (s1 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 123) {\n                        s2 = peg$c106;\n                        peg$currPos++;\n                    }\n                    else {\n                        s2 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c107);\n                        }\n                    }\n                    if (s2 !== peg$FAILED) {\n                        s3 = peg$parseValueInput();\n                        if (s3 !== peg$FAILED) {\n                            if (input.charCodeAt(peg$currPos) === 125) {\n                                s4 = peg$c108;\n                                peg$currPos++;\n                            }\n                            else {\n                                s4 = peg$FAILED;\n                                if (peg$silentFails === 0) {\n                                    peg$fail(peg$c109);\n                                }\n                            }\n                            if (s4 !== peg$FAILED) {\n                                peg$savedPos = s0;\n                                s1 = peg$c110(s3);\n                                s0 = s1;\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n        }\n        peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n        return s0;\n    }\n    function peg$parseConstValue() {\n        var s0, s1, s2, s3;\n        var key = peg$currPos * 34 + 19;\n        var cached = peg$resultsCache[key];\n        if (cached) {\n            peg$currPos = cached.nextPos;\n            return cached.result;\n        }\n        s0 = peg$currPos;\n        s1 = peg$parseLogicValue();\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c111(s1);\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$parseArithmeticValue();\n            if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c111(s1);\n            }\n            s0 = s1;\n            if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                s1 = peg$parseLettersAndDigits();\n                if (s1 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c111(s1);\n                }\n                s0 = s1;\n                if (s0 === peg$FAILED) {\n                    s0 = peg$currPos;\n                    if (input.substr(peg$currPos, 2) === peg$c112) {\n                        s1 = peg$c112;\n                        peg$currPos += 2;\n                    }\n                    else {\n                        s1 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c113);\n                        }\n                    }\n                    if (s1 !== peg$FAILED) {\n                        peg$savedPos = s0;\n                        s1 = peg$c114();\n                    }\n                    s0 = s1;\n                    if (s0 === peg$FAILED) {\n                        s0 = peg$currPos;\n                        if (input.substr(peg$currPos, 2) === peg$c115) {\n                            s1 = peg$c115;\n                            peg$currPos += 2;\n                        }\n                        else {\n                            s1 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c116);\n                            }\n                        }\n                        if (s1 !== peg$FAILED) {\n                            peg$savedPos = s0;\n                            s1 = peg$c114();\n                        }\n                        s0 = s1;\n                        if (s0 === peg$FAILED) {\n                            s0 = peg$currPos;\n                            if (input.charCodeAt(peg$currPos) === 39) {\n                                s1 = peg$c117;\n                                peg$currPos++;\n                            }\n                            else {\n                                s1 = peg$FAILED;\n                                if (peg$silentFails === 0) {\n                                    peg$fail(peg$c118);\n                                }\n                            }\n                            if (s1 !== peg$FAILED) {\n                                s2 = peg$parseAnyInput();\n                                if (s2 !== peg$FAILED) {\n                                    if (input.charCodeAt(peg$currPos) === 39) {\n                                        s3 = peg$c117;\n                                        peg$currPos++;\n                                    }\n                                    else {\n                                        s3 = peg$FAILED;\n                                        if (peg$silentFails === 0) {\n                                            peg$fail(peg$c118);\n                                        }\n                                    }\n                                    if (s3 !== peg$FAILED) {\n                                        peg$savedPos = s0;\n                                        s1 = peg$c119(s2);\n                                        s0 = s1;\n                                    }\n                                    else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                    }\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                            if (s0 === peg$FAILED) {\n                                s0 = peg$currPos;\n                                if (input.charCodeAt(peg$currPos) === 34) {\n                                    s1 = peg$c120;\n                                    peg$currPos++;\n                                }\n                                else {\n                                    s1 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c121);\n                                    }\n                                }\n                                if (s1 !== peg$FAILED) {\n                                    s2 = peg$parseAnyInput();\n                                    if (s2 !== peg$FAILED) {\n                                        if (input.charCodeAt(peg$currPos) === 34) {\n                                            s3 = peg$c120;\n                                            peg$currPos++;\n                                        }\n                                        else {\n                                            s3 = peg$FAILED;\n                                            if (peg$silentFails === 0) {\n                                                peg$fail(peg$c121);\n                                            }\n                                        }\n                                        if (s3 !== peg$FAILED) {\n                                            peg$savedPos = s0;\n                                            s1 = peg$c119(s2);\n                                            s0 = s1;\n                                        }\n                                        else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                        }\n                                    }\n                                    else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                    }\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n        return s0;\n    }\n    function peg$parseArrayOp() {\n        var s0, s1, s2, s3;\n        var key = peg$currPos * 34 + 20;\n        var cached = peg$resultsCache[key];\n        if (cached) {\n            peg$currPos = cached.nextPos;\n            return cached.result;\n        }\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 91) {\n            s1 = peg$c122;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c123);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parseSequence();\n            if (s2 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 93) {\n                    s3 = peg$c124;\n                    peg$currPos++;\n                }\n                else {\n                    s3 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c125);\n                    }\n                }\n                if (s3 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c126(s2);\n                    s0 = s1;\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n        return s0;\n    }\n    function peg$parseSequence() {\n        var s0, s1, s2, s3, s4, s5, s6, s7;\n        var key = peg$currPos * 34 + 21;\n        var cached = peg$resultsCache[key];\n        if (cached) {\n            peg$currPos = cached.nextPos;\n            return cached.result;\n        }\n        s0 = peg$currPos;\n        s1 = peg$parseExpression();\n        if (s1 === peg$FAILED) {\n            s1 = null;\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = [];\n            s3 = peg$currPos;\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 44) {\n                    s5 = peg$c127;\n                    peg$currPos++;\n                }\n                else {\n                    s5 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c128);\n                    }\n                }\n                if (s5 !== peg$FAILED) {\n                    s6 = peg$parse_();\n                    if (s6 !== peg$FAILED) {\n                        s7 = peg$parseExpression();\n                        if (s7 !== peg$FAILED) {\n                            s4 = [s4, s5, s6, s7];\n                            s3 = s4;\n                        }\n                        else {\n                            peg$currPos = s3;\n                            s3 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s3;\n                        s3 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n            }\n            while (s3 !== peg$FAILED) {\n                s2.push(s3);\n                s3 = peg$currPos;\n                s4 = peg$parse_();\n                if (s4 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 44) {\n                        s5 = peg$c127;\n                        peg$currPos++;\n                    }\n                    else {\n                        s5 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c128);\n                        }\n                    }\n                    if (s5 !== peg$FAILED) {\n                        s6 = peg$parse_();\n                        if (s6 !== peg$FAILED) {\n                            s7 = peg$parseExpression();\n                            if (s7 !== peg$FAILED) {\n                                s4 = [s4, s5, s6, s7];\n                                s3 = s4;\n                            }\n                            else {\n                                peg$currPos = s3;\n                                s3 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s3;\n                            s3 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s3;\n                        s3 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                }\n            }\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c129(s1, s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n        return s0;\n    }\n    function peg$parseLogicValue() {\n        var s0, s1;\n        var key = peg$currPos * 34 + 22;\n        var cached = peg$resultsCache[key];\n        if (cached) {\n            peg$currPos = cached.nextPos;\n            return cached.result;\n        }\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 4).toLowerCase() === peg$c130) {\n            s1 = input.substr(peg$currPos, 4);\n            peg$currPos += 4;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c131);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c132();\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.substr(peg$currPos, 5).toLowerCase() === peg$c133) {\n                s1 = input.substr(peg$currPos, 5);\n                peg$currPos += 5;\n            }\n            else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c134);\n                }\n            }\n            if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c135();\n            }\n            s0 = s1;\n        }\n        peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n        return s0;\n    }\n    function peg$parseArithmeticValue() {\n        var s0, s1, s2;\n        var key = peg$currPos * 34 + 23;\n        var cached = peg$resultsCache[key];\n        if (cached) {\n            peg$currPos = cached.nextPos;\n            return cached.result;\n        }\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c136) {\n            s1 = peg$c136;\n            peg$currPos += 2;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c137);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parseDigits();\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c138();\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (peg$c139.test(input.charAt(peg$currPos))) {\n                s1 = input.charAt(peg$currPos);\n                peg$currPos++;\n            }\n            else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c140);\n                }\n            }\n            if (s1 === peg$FAILED) {\n                s1 = null;\n            }\n            if (s1 !== peg$FAILED) {\n                s2 = peg$parseNumber();\n                if (s2 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c141(s1, s2);\n                    s0 = s1;\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n        return s0;\n    }\n    function peg$parseNumber() {\n        var s0, s1, s2, s3;\n        var key = peg$currPos * 34 + 24;\n        var cached = peg$resultsCache[key];\n        if (cached) {\n            peg$currPos = cached.nextPos;\n            return cached.result;\n        }\n        s0 = peg$currPos;\n        s1 = peg$parseDigits();\n        if (s1 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 46) {\n                s2 = peg$c142;\n                peg$currPos++;\n            }\n            else {\n                s2 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c143);\n                }\n            }\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseDigits();\n                if (s3 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c144();\n                    s0 = s1;\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$parseNonZeroDigits();\n            if (s1 !== peg$FAILED) {\n                s2 = peg$parseDigits();\n                if (s2 === peg$FAILED) {\n                    s2 = null;\n                }\n                if (s2 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c145();\n                    s0 = s1;\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n            if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                if (input.charCodeAt(peg$currPos) === 48) {\n                    s1 = peg$c146;\n                    peg$currPos++;\n                }\n                else {\n                    s1 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c147);\n                    }\n                }\n                if (s1 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c148();\n                }\n                s0 = s1;\n            }\n        }\n        peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n        return s0;\n    }\n    function peg$parseValueInput() {\n        var s0, s1, s2;\n        var key = peg$currPos * 34 + 25;\n        var cached = peg$resultsCache[key];\n        if (cached) {\n            peg$currPos = cached.nextPos;\n            return cached.result;\n        }\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$parseValueCharacters();\n        if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                s2 = peg$parseValueCharacters();\n            }\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c149(s1);\n        }\n        s0 = s1;\n        peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n        return s0;\n    }\n    function peg$parseAnyInput() {\n        var s0, s1, s2;\n        var key = peg$currPos * 34 + 26;\n        var cached = peg$resultsCache[key];\n        if (cached) {\n            peg$currPos = cached.nextPos;\n            return cached.result;\n        }\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$parseAnyCharacters();\n        if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                s2 = peg$parseAnyCharacters();\n            }\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c149(s1);\n        }\n        s0 = s1;\n        peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n        return s0;\n    }\n    function peg$parseAnyCharacters() {\n        var s0, s1;\n        var key = peg$currPos * 34 + 27;\n        var cached = peg$resultsCache[key];\n        if (cached) {\n            peg$currPos = cached.nextPos;\n            return cached.result;\n        }\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c150) {\n            s1 = peg$c150;\n            peg$currPos += 2;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c151);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c152();\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.substr(peg$currPos, 2) === peg$c153) {\n                s1 = peg$c153;\n                peg$currPos += 2;\n            }\n            else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c154);\n                }\n            }\n            if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c155();\n            }\n            s0 = s1;\n            if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                if (peg$c156.test(input.charAt(peg$currPos))) {\n                    s1 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                }\n                else {\n                    s1 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c157);\n                    }\n                }\n                if (s1 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c158();\n                }\n                s0 = s1;\n            }\n        }\n        peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n        return s0;\n    }\n    function peg$parseValueCharacters() {\n        var s0, s1;\n        var key = peg$currPos * 34 + 28;\n        var cached = peg$resultsCache[key];\n        if (cached) {\n            peg$currPos = cached.nextPos;\n            return cached.result;\n        }\n        s0 = peg$currPos;\n        if (peg$c159.test(input.charAt(peg$currPos))) {\n            s1 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c160);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c158();\n        }\n        s0 = s1;\n        peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n        return s0;\n    }\n    function peg$parseLettersAndDigits() {\n        var s0, s1, s2, s3, s4, s5, s6;\n        var key = peg$currPos * 34 + 29;\n        var cached = peg$resultsCache[key];\n        if (cached) {\n            peg$currPos = cached.nextPos;\n            return cached.result;\n        }\n        s0 = peg$currPos;\n        s1 = peg$parseLetters();\n        if (s1 !== peg$FAILED) {\n            s2 = [];\n            s3 = peg$currPos;\n            s4 = peg$parseDigits();\n            if (s4 !== peg$FAILED) {\n                s5 = [];\n                s6 = peg$parseLetters();\n                while (s6 !== peg$FAILED) {\n                    s5.push(s6);\n                    s6 = peg$parseLetters();\n                }\n                if (s5 !== peg$FAILED) {\n                    s4 = [s4, s5];\n                    s3 = s4;\n                }\n                else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n            }\n            while (s3 !== peg$FAILED) {\n                s2.push(s3);\n                s3 = peg$currPos;\n                s4 = peg$parseDigits();\n                if (s4 !== peg$FAILED) {\n                    s5 = [];\n                    s6 = peg$parseLetters();\n                    while (s6 !== peg$FAILED) {\n                        s5.push(s6);\n                        s6 = peg$parseLetters();\n                    }\n                    if (s5 !== peg$FAILED) {\n                        s4 = [s4, s5];\n                        s3 = s4;\n                    }\n                    else {\n                        peg$currPos = s3;\n                        s3 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                }\n            }\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c158();\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n        return s0;\n    }\n    function peg$parseDigits() {\n        var s0, s1;\n        var key = peg$currPos * 34 + 30;\n        var cached = peg$resultsCache[key];\n        if (cached) {\n            peg$currPos = cached.nextPos;\n            return cached.result;\n        }\n        s0 = [];\n        if (peg$c161.test(input.charAt(peg$currPos))) {\n            s1 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c162);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            while (s1 !== peg$FAILED) {\n                s0.push(s1);\n                if (peg$c161.test(input.charAt(peg$currPos))) {\n                    s1 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                }\n                else {\n                    s1 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c162);\n                    }\n                }\n            }\n        }\n        else {\n            s0 = peg$FAILED;\n        }\n        peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n        return s0;\n    }\n    function peg$parseNonZeroDigits() {\n        var s0, s1;\n        var key = peg$currPos * 34 + 31;\n        var cached = peg$resultsCache[key];\n        if (cached) {\n            peg$currPos = cached.nextPos;\n            return cached.result;\n        }\n        s0 = [];\n        if (peg$c163.test(input.charAt(peg$currPos))) {\n            s1 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c164);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            while (s1 !== peg$FAILED) {\n                s0.push(s1);\n                if (peg$c163.test(input.charAt(peg$currPos))) {\n                    s1 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                }\n                else {\n                    s1 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c164);\n                    }\n                }\n            }\n        }\n        else {\n            s0 = peg$FAILED;\n        }\n        peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n        return s0;\n    }\n    function peg$parseLetters() {\n        var s0, s1;\n        var key = peg$currPos * 34 + 32;\n        var cached = peg$resultsCache[key];\n        if (cached) {\n            peg$currPos = cached.nextPos;\n            return cached.result;\n        }\n        s0 = [];\n        if (peg$c165.test(input.charAt(peg$currPos))) {\n            s1 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c166);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            while (s1 !== peg$FAILED) {\n                s0.push(s1);\n                if (peg$c165.test(input.charAt(peg$currPos))) {\n                    s1 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                }\n                else {\n                    s1 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c166);\n                    }\n                }\n            }\n        }\n        else {\n            s0 = peg$FAILED;\n        }\n        peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n        return s0;\n    }\n    function peg$parse_() {\n        var s0, s1;\n        var key = peg$currPos * 34 + 33;\n        var cached = peg$resultsCache[key];\n        if (cached) {\n            peg$currPos = cached.nextPos;\n            return cached.result;\n        }\n        peg$silentFails++;\n        s0 = [];\n        if (peg$c168.test(input.charAt(peg$currPos))) {\n            s1 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c169);\n            }\n        }\n        while (s1 !== peg$FAILED) {\n            s0.push(s1);\n            if (peg$c168.test(input.charAt(peg$currPos))) {\n                s1 = input.charAt(peg$currPos);\n                peg$currPos++;\n            }\n            else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c169);\n                }\n            }\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c167);\n            }\n        }\n        peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n        return s0;\n    }\n    function buildBinaryOperand(head, tail, isArithmeticOp) {\n        if (isArithmeticOp === void 0) { isArithmeticOp = false; }\n        return tail.reduce(function (result, elements) {\n            return new _expressions__WEBPACK_IMPORTED_MODULE_0__[\"BinaryOperand\"](elements[1], result, elements[3], isArithmeticOp);\n        }, head);\n    }\n    function flattenArray(array) {\n        return [].concat.apply([], array);\n    }\n    peg$result = peg$startRuleFunction();\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n        return peg$result;\n    }\n    else {\n        if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n            peg$fail(peg$endExpectation());\n        }\n        throw peg$buildStructuredError(peg$maxFailExpected, peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null, peg$maxFailPos < input.length\n            ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n            : peg$computeLocation(peg$maxFailPos, peg$maxFailPos));\n    }\n}\nvar parse = peg$parse;\n\n\n/***/ }),\n\n/***/ \"./src/expressions/expressions.ts\":\n/*!****************************************!*\\\n  !*** ./src/expressions/expressions.ts ***!\n  \\****************************************/\n/*! exports provided: Operand, BinaryOperand, UnaryOperand, ArrayOperand, Const, Variable, FunctionOperand, OperandMaker */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_290431__) {\n\n\"use strict\";\n__nested_webpack_require_290431__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_290431__.d(__nested_webpack_exports__, \"Operand\", function() { return Operand; });\n/* harmony export (binding) */ __nested_webpack_require_290431__.d(__nested_webpack_exports__, \"BinaryOperand\", function() { return BinaryOperand; });\n/* harmony export (binding) */ __nested_webpack_require_290431__.d(__nested_webpack_exports__, \"UnaryOperand\", function() { return UnaryOperand; });\n/* harmony export (binding) */ __nested_webpack_require_290431__.d(__nested_webpack_exports__, \"ArrayOperand\", function() { return ArrayOperand; });\n/* harmony export (binding) */ __nested_webpack_require_290431__.d(__nested_webpack_exports__, \"Const\", function() { return Const; });\n/* harmony export (binding) */ __nested_webpack_require_290431__.d(__nested_webpack_exports__, \"Variable\", function() { return Variable; });\n/* harmony export (binding) */ __nested_webpack_require_290431__.d(__nested_webpack_exports__, \"FunctionOperand\", function() { return FunctionOperand; });\n/* harmony export (binding) */ __nested_webpack_require_290431__.d(__nested_webpack_exports__, \"OperandMaker\", function() { return OperandMaker; });\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_290431__(/*! ../helpers */ \"./src/helpers.ts\");\n/* harmony import */ var _functionsfactory__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_290431__(/*! ../functionsfactory */ \"./src/functionsfactory.ts\");\n/* harmony import */ var _conditionProcessValue__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_290431__(/*! ../conditionProcessValue */ \"./src/conditionProcessValue.ts\");\n/* harmony import */ var _settings__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_290431__(/*! ../settings */ \"./src/settings.ts\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\nvar Operand = /** @class */ (function () {\n    function Operand() {\n    }\n    Operand.prototype.toString = function (func) {\n        if (func === void 0) { func = undefined; }\n        return \"\";\n    };\n    Operand.prototype.hasFunction = function () {\n        return false;\n    };\n    Operand.prototype.hasAsyncFunction = function () { return false; };\n    Operand.prototype.addToAsyncList = function (list) { };\n    Operand.prototype.isEqual = function (op) {\n        return !!op && op.getType() === this.getType() && this.isContentEqual(op);\n    };\n    Operand.prototype.areOperatorsEquals = function (op1, op2) {\n        return !op1 && !op2 || !!op1 && op1.isEqual(op2);\n    };\n    return Operand;\n}());\n\nvar BinaryOperand = /** @class */ (function (_super) {\n    __extends(BinaryOperand, _super);\n    function BinaryOperand(operatorName, left, right, isArithmeticOp) {\n        if (left === void 0) { left = null; }\n        if (right === void 0) { right = null; }\n        if (isArithmeticOp === void 0) { isArithmeticOp = false; }\n        var _this = _super.call(this) || this;\n        _this.operatorName = operatorName;\n        _this.left = left;\n        _this.right = right;\n        _this.isArithmeticValue = isArithmeticOp;\n        if (isArithmeticOp) {\n            _this.consumer = OperandMaker.binaryFunctions[\"arithmeticOp\"](operatorName);\n        }\n        else {\n            _this.consumer = OperandMaker.binaryFunctions[operatorName];\n        }\n        if (_this.consumer == null) {\n            OperandMaker.throwInvalidOperatorError(operatorName);\n        }\n        return _this;\n    }\n    Object.defineProperty(BinaryOperand.prototype, \"requireStrictCompare\", {\n        get: function () {\n            return this.getIsOperandRequireStrict(this.left) ||\n                this.getIsOperandRequireStrict(this.right);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    BinaryOperand.prototype.getIsOperandRequireStrict = function (op) {\n        return !!op && op.requireStrictCompare;\n    };\n    BinaryOperand.prototype.getType = function () {\n        return \"binary\";\n    };\n    Object.defineProperty(BinaryOperand.prototype, \"isArithmetic\", {\n        get: function () {\n            return this.isArithmeticValue;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BinaryOperand.prototype, \"isConjunction\", {\n        get: function () {\n            return this.operatorName == \"or\" || this.operatorName == \"and\";\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BinaryOperand.prototype, \"conjunction\", {\n        get: function () {\n            return this.isConjunction ? this.operatorName : \"\";\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BinaryOperand.prototype, \"operator\", {\n        get: function () {\n            return this.operatorName;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BinaryOperand.prototype, \"leftOperand\", {\n        get: function () {\n            return this.left;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BinaryOperand.prototype, \"rightOperand\", {\n        get: function () {\n            return this.right;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    BinaryOperand.prototype.isContentEqual = function (op) {\n        var bOp = op;\n        return bOp.operator === this.operator &&\n            this.areOperatorsEquals(this.left, bOp.left) &&\n            this.areOperatorsEquals(this.right, bOp.right);\n    };\n    BinaryOperand.prototype.evaluateParam = function (x, processValue) {\n        return x == null ? null : x.evaluate(processValue);\n    };\n    BinaryOperand.prototype.evaluate = function (processValue) {\n        return this.consumer.call(this, this.evaluateParam(this.left, processValue), this.evaluateParam(this.right, processValue), this.requireStrictCompare);\n    };\n    BinaryOperand.prototype.toString = function (func) {\n        if (func === void 0) { func = undefined; }\n        if (!!func) {\n            var res = func(this);\n            if (!!res)\n                return res;\n        }\n        return (\"(\" +\n            OperandMaker.safeToString(this.left, func) +\n            \" \" +\n            OperandMaker.operatorToString(this.operatorName) +\n            \" \" +\n            OperandMaker.safeToString(this.right, func) +\n            \")\");\n    };\n    BinaryOperand.prototype.setVariables = function (variables) {\n        if (this.left != null)\n            this.left.setVariables(variables);\n        if (this.right != null)\n            this.right.setVariables(variables);\n    };\n    BinaryOperand.prototype.hasFunction = function () {\n        return ((!!this.left && this.left.hasFunction()) ||\n            (!!this.right && this.right.hasFunction()));\n    };\n    BinaryOperand.prototype.hasAsyncFunction = function () {\n        return ((!!this.left && this.left.hasAsyncFunction()) ||\n            (!!this.right && this.right.hasAsyncFunction()));\n    };\n    BinaryOperand.prototype.addToAsyncList = function (list) {\n        if (!!this.left)\n            this.left.addToAsyncList(list);\n        if (!!this.right)\n            this.right.addToAsyncList(list);\n    };\n    return BinaryOperand;\n}(Operand));\n\nvar UnaryOperand = /** @class */ (function (_super) {\n    __extends(UnaryOperand, _super);\n    function UnaryOperand(expressionValue, operatorName) {\n        var _this = _super.call(this) || this;\n        _this.expressionValue = expressionValue;\n        _this.operatorName = operatorName;\n        _this.consumer = OperandMaker.unaryFunctions[operatorName];\n        if (_this.consumer == null) {\n            OperandMaker.throwInvalidOperatorError(operatorName);\n        }\n        return _this;\n    }\n    Object.defineProperty(UnaryOperand.prototype, \"operator\", {\n        get: function () {\n            return this.operatorName;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(UnaryOperand.prototype, \"expression\", {\n        get: function () {\n            return this.expressionValue;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    UnaryOperand.prototype.getType = function () {\n        return \"unary\";\n    };\n    UnaryOperand.prototype.toString = function (func) {\n        if (func === void 0) { func = undefined; }\n        if (!!func) {\n            var res = func(this);\n            if (!!res)\n                return res;\n        }\n        return (OperandMaker.operatorToString(this.operatorName) +\n            \" \" +\n            this.expression.toString(func));\n    };\n    UnaryOperand.prototype.isContentEqual = function (op) {\n        var uOp = op;\n        return uOp.operator == this.operator && this.areOperatorsEquals(this.expression, uOp.expression);\n    };\n    UnaryOperand.prototype.hasFunction = function () {\n        return this.expression.hasFunction();\n    };\n    UnaryOperand.prototype.hasAsyncFunction = function () {\n        return this.expression.hasAsyncFunction();\n    };\n    UnaryOperand.prototype.addToAsyncList = function (list) {\n        this.expression.addToAsyncList(list);\n    };\n    UnaryOperand.prototype.evaluate = function (processValue) {\n        var value = this.expression.evaluate(processValue);\n        return this.consumer.call(this, value);\n    };\n    UnaryOperand.prototype.setVariables = function (variables) {\n        this.expression.setVariables(variables);\n    };\n    return UnaryOperand;\n}(Operand));\n\nvar ArrayOperand = /** @class */ (function (_super) {\n    __extends(ArrayOperand, _super);\n    function ArrayOperand(values) {\n        var _this = _super.call(this) || this;\n        _this.values = values;\n        return _this;\n    }\n    ArrayOperand.prototype.getType = function () {\n        return \"array\";\n    };\n    ArrayOperand.prototype.toString = function (func) {\n        if (func === void 0) { func = undefined; }\n        if (!!func) {\n            var res = func(this);\n            if (!!res)\n                return res;\n        }\n        return (\"[\" +\n            this.values\n                .map(function (el) {\n                return el.toString(func);\n            })\n                .join(\", \") +\n            \"]\");\n    };\n    ArrayOperand.prototype.evaluate = function (processValue) {\n        return this.values.map(function (el) {\n            return el.evaluate(processValue);\n        });\n    };\n    ArrayOperand.prototype.setVariables = function (variables) {\n        this.values.forEach(function (el) {\n            el.setVariables(variables);\n        });\n    };\n    ArrayOperand.prototype.hasFunction = function () {\n        return this.values.some(function (operand) { return operand.hasFunction(); });\n    };\n    ArrayOperand.prototype.hasAsyncFunction = function () {\n        return this.values.some(function (operand) { return operand.hasAsyncFunction(); });\n    };\n    ArrayOperand.prototype.addToAsyncList = function (list) {\n        this.values.forEach(function (operand) { return operand.addToAsyncList(list); });\n    };\n    ArrayOperand.prototype.isContentEqual = function (op) {\n        var aOp = op;\n        if (aOp.values.length !== this.values.length)\n            return false;\n        for (var i = 0; i < this.values.length; i++) {\n            if (!aOp.values[i].isEqual(this.values[i]))\n                return false;\n        }\n        return true;\n    };\n    return ArrayOperand;\n}(Operand));\n\nvar Const = /** @class */ (function (_super) {\n    __extends(Const, _super);\n    function Const(value) {\n        var _this = _super.call(this) || this;\n        _this.value = value;\n        return _this;\n    }\n    Const.prototype.getType = function () {\n        return \"const\";\n    };\n    Const.prototype.toString = function (func) {\n        if (func === void 0) { func = undefined; }\n        if (!!func) {\n            var res = func(this);\n            if (!!res)\n                return res;\n        }\n        return this.value.toString();\n    };\n    Object.defineProperty(Const.prototype, \"correctValue\", {\n        get: function () {\n            return this.getCorrectValue(this.value);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Const.prototype, \"requireStrictCompare\", {\n        get: function () { return false; },\n        enumerable: false,\n        configurable: true\n    });\n    Const.prototype.evaluate = function () {\n        return this.getCorrectValue(this.value);\n    };\n    Const.prototype.setVariables = function (variables) { };\n    Const.prototype.getCorrectValue = function (value) {\n        if (!value || typeof value != \"string\")\n            return value;\n        if (this.isBooleanValue(value))\n            return value.toLowerCase() === \"true\";\n        if (value.length > 1 &&\n            this.isQuote(value[0]) &&\n            this.isQuote(value[value.length - 1]))\n            return value.substring(1, value.length - 1);\n        if (OperandMaker.isNumeric(value)) {\n            if (value.indexOf(\"0x\") == 0)\n                return parseInt(value);\n            if (value.length > 1 && value[0] == \"0\" && (value.length < 2 || (value[1] !== \".\" && value[1] !== \",\")))\n                return value;\n            return parseFloat(value);\n        }\n        return value;\n    };\n    Const.prototype.isContentEqual = function (op) {\n        var cOp = op;\n        return cOp.value == this.value;\n    };\n    Const.prototype.isQuote = function (ch) {\n        return ch == \"'\" || ch == '\"';\n    };\n    Const.prototype.isBooleanValue = function (value) {\n        return (value &&\n            (value.toLowerCase() === \"true\" || value.toLowerCase() === \"false\"));\n    };\n    return Const;\n}(Operand));\n\nvar Variable = /** @class */ (function (_super) {\n    __extends(Variable, _super);\n    function Variable(variableName) {\n        var _this = _super.call(this, variableName) || this;\n        _this.variableName = variableName;\n        _this.valueInfo = {};\n        _this.useValueAsItIs = false;\n        if (!!_this.variableName &&\n            _this.variableName.length > 1 &&\n            _this.variableName[0] === Variable.DisableConversionChar) {\n            _this.variableName = _this.variableName.substring(1);\n            _this.useValueAsItIs = true;\n        }\n        return _this;\n    }\n    Object.defineProperty(Variable, \"DisableConversionChar\", {\n        get: function () { return _settings__WEBPACK_IMPORTED_MODULE_3__[\"settings\"].expressionDisableConversionChar; },\n        set: function (val) { _settings__WEBPACK_IMPORTED_MODULE_3__[\"settings\"].expressionDisableConversionChar = val; },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Variable.prototype, \"requireStrictCompare\", {\n        get: function () {\n            return this.valueInfo.sctrictCompare === true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Variable.prototype.getType = function () {\n        return \"variable\";\n    };\n    Variable.prototype.toString = function (func) {\n        if (func === void 0) { func = undefined; }\n        if (!!func) {\n            var res = func(this);\n            if (!!res)\n                return res;\n        }\n        var prefix = this.useValueAsItIs ? Variable.DisableConversionChar : \"\";\n        return \"{\" + prefix + this.variableName + \"}\";\n    };\n    Object.defineProperty(Variable.prototype, \"variable\", {\n        get: function () {\n            return this.variableName;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Variable.prototype.evaluate = function (processValue) {\n        this.valueInfo.name = this.variableName;\n        processValue.getValueInfo(this.valueInfo);\n        return this.valueInfo.hasValue\n            ? this.getCorrectValue(this.valueInfo.value)\n            : null;\n    };\n    Variable.prototype.setVariables = function (variables) {\n        variables.push(this.variableName);\n    };\n    Variable.prototype.getCorrectValue = function (value) {\n        if (this.useValueAsItIs)\n            return value;\n        return _super.prototype.getCorrectValue.call(this, value);\n    };\n    Variable.prototype.isContentEqual = function (op) {\n        var vOp = op;\n        return vOp.variable == this.variable;\n    };\n    return Variable;\n}(Const));\n\nvar FunctionOperand = /** @class */ (function (_super) {\n    __extends(FunctionOperand, _super);\n    function FunctionOperand(originalValue, parameters) {\n        var _this = _super.call(this) || this;\n        _this.originalValue = originalValue;\n        _this.parameters = parameters;\n        _this.isReadyValue = false;\n        if (Array.isArray(parameters) && parameters.length === 0) {\n            _this.parameters = new ArrayOperand([]);\n        }\n        return _this;\n    }\n    FunctionOperand.prototype.getType = function () {\n        return \"function\";\n    };\n    FunctionOperand.prototype.evaluateAsync = function (processValue) {\n        var _this = this;\n        this.isReadyValue = false;\n        var asyncProcessValue = new _conditionProcessValue__WEBPACK_IMPORTED_MODULE_2__[\"ProcessValue\"]();\n        asyncProcessValue.values = _helpers__WEBPACK_IMPORTED_MODULE_0__[\"Helpers\"].createCopy(processValue.values);\n        asyncProcessValue.properties = _helpers__WEBPACK_IMPORTED_MODULE_0__[\"Helpers\"].createCopy(processValue.properties);\n        asyncProcessValue.properties.returnResult = function (result) {\n            _this.asynResult = result;\n            _this.isReadyValue = true;\n            _this.onAsyncReady();\n        };\n        this.evaluateCore(asyncProcessValue);\n    };\n    FunctionOperand.prototype.evaluate = function (processValue) {\n        if (this.isReady)\n            return this.asynResult;\n        return this.evaluateCore(processValue);\n    };\n    FunctionOperand.prototype.evaluateCore = function (processValue) {\n        return _functionsfactory__WEBPACK_IMPORTED_MODULE_1__[\"FunctionFactory\"].Instance.run(this.originalValue, this.parameters.evaluate(processValue), processValue.properties);\n    };\n    FunctionOperand.prototype.toString = function (func) {\n        if (func === void 0) { func = undefined; }\n        if (!!func) {\n            var res = func(this);\n            if (!!res)\n                return res;\n        }\n        return this.originalValue + \"(\" + this.parameters.toString(func) + \")\";\n    };\n    FunctionOperand.prototype.setVariables = function (variables) {\n        this.parameters.setVariables(variables);\n    };\n    Object.defineProperty(FunctionOperand.prototype, \"isReady\", {\n        get: function () {\n            return this.isReadyValue;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    FunctionOperand.prototype.hasFunction = function () {\n        return true;\n    };\n    FunctionOperand.prototype.hasAsyncFunction = function () {\n        return _functionsfactory__WEBPACK_IMPORTED_MODULE_1__[\"FunctionFactory\"].Instance.isAsyncFunction(this.originalValue);\n    };\n    FunctionOperand.prototype.addToAsyncList = function (list) {\n        if (this.hasAsyncFunction()) {\n            list.push(this);\n        }\n    };\n    FunctionOperand.prototype.isContentEqual = function (op) {\n        var fOp = op;\n        return fOp.originalValue == this.originalValue && this.areOperatorsEquals(fOp.parameters, this.parameters);\n    };\n    return FunctionOperand;\n}(Operand));\n\nvar OperandMaker = /** @class */ (function () {\n    function OperandMaker() {\n    }\n    OperandMaker.throwInvalidOperatorError = function (op) {\n        throw new Error(\"Invalid operator: '\" + op + \"'\");\n    };\n    OperandMaker.safeToString = function (operand, func) {\n        return operand == null ? \"\" : operand.toString(func);\n    };\n    OperandMaker.toOperandString = function (value) {\n        if (!!value &&\n            !OperandMaker.isNumeric(value) &&\n            !OperandMaker.isBooleanValue(value))\n            value = \"'\" + value + \"'\";\n        return value;\n    };\n    OperandMaker.isSpaceString = function (str) {\n        return !!str && !str.replace(\" \", \"\");\n    };\n    OperandMaker.isNumeric = function (value) {\n        if (!!value &&\n            (value.indexOf(\"-\") > -1 ||\n                value.indexOf(\"+\") > 1 ||\n                value.indexOf(\"*\") > -1 ||\n                value.indexOf(\"^\") > -1 ||\n                value.indexOf(\"/\") > -1 ||\n                value.indexOf(\"%\") > -1))\n            return false;\n        if (OperandMaker.isSpaceString(value))\n            return false;\n        return _helpers__WEBPACK_IMPORTED_MODULE_0__[\"Helpers\"].isNumber(value);\n    };\n    OperandMaker.isBooleanValue = function (value) {\n        return (!!value &&\n            (value.toLowerCase() === \"true\" || value.toLowerCase() === \"false\"));\n    };\n    OperandMaker.countDecimals = function (value) {\n        if (_helpers__WEBPACK_IMPORTED_MODULE_0__[\"Helpers\"].isNumber(value) && Math.floor(value) !== value) {\n            var strs = value.toString().split(\".\");\n            return strs.length > 1 && strs[1].length || 0;\n        }\n        return 0;\n    };\n    OperandMaker.plusMinus = function (a, b, res) {\n        var digitsA = OperandMaker.countDecimals(a);\n        var digitsB = OperandMaker.countDecimals(b);\n        if (digitsA > 0 || digitsB > 0) {\n            var digits = Math.max(digitsA, digitsB);\n            res = parseFloat(res.toFixed(digits));\n        }\n        return res;\n    };\n    OperandMaker.isTwoValueEquals = function (x, y, ignoreOrder) {\n        if (ignoreOrder === void 0) { ignoreOrder = true; }\n        if (x === \"undefined\")\n            x = undefined;\n        if (y === \"undefined\")\n            y = undefined;\n        return _helpers__WEBPACK_IMPORTED_MODULE_0__[\"Helpers\"].isTwoValueEquals(x, y, ignoreOrder);\n    };\n    OperandMaker.operatorToString = function (operatorName) {\n        var opStr = OperandMaker.signs[operatorName];\n        return opStr == null ? operatorName : opStr;\n    };\n    OperandMaker.convertValForDateCompare = function (val, second) {\n        if (second instanceof Date && typeof val === \"string\") {\n            var res = new Date(val);\n            res.setHours(0, 0, 0);\n            return res;\n        }\n        return val;\n    };\n    OperandMaker.unaryFunctions = {\n        empty: function (value) {\n            return _helpers__WEBPACK_IMPORTED_MODULE_0__[\"Helpers\"].isValueEmpty(value);\n        },\n        notempty: function (value) {\n            return !OperandMaker.unaryFunctions.empty(value);\n        },\n        negate: function (value) {\n            return !value;\n        },\n    };\n    OperandMaker.binaryFunctions = {\n        arithmeticOp: function (operatorName) {\n            var convertForArithmeticOp = function (val, second) {\n                if (!_helpers__WEBPACK_IMPORTED_MODULE_0__[\"Helpers\"].isValueEmpty(val))\n                    return val;\n                if (typeof second === \"number\")\n                    return 0;\n                if (typeof val === \"string\")\n                    return val;\n                if (typeof second === \"string\")\n                    return \"\";\n                if (Array.isArray(second))\n                    return [];\n                return 0;\n            };\n            return function (a, b) {\n                a = convertForArithmeticOp(a, b);\n                b = convertForArithmeticOp(b, a);\n                var consumer = OperandMaker.binaryFunctions[operatorName];\n                return consumer == null ? null : consumer.call(this, a, b);\n            };\n        },\n        and: function (a, b) {\n            return a && b;\n        },\n        or: function (a, b) {\n            return a || b;\n        },\n        plus: function (a, b) {\n            return _helpers__WEBPACK_IMPORTED_MODULE_0__[\"Helpers\"].sumAnyValues(a, b);\n        },\n        minus: function (a, b) {\n            return _helpers__WEBPACK_IMPORTED_MODULE_0__[\"Helpers\"].correctAfterPlusMinis(a, b, a - b);\n        },\n        mul: function (a, b) {\n            return _helpers__WEBPACK_IMPORTED_MODULE_0__[\"Helpers\"].correctAfterMultiple(a, b, a * b);\n        },\n        div: function (a, b) {\n            if (!b)\n                return null;\n            return a / b;\n        },\n        mod: function (a, b) {\n            if (!b)\n                return null;\n            return a % b;\n        },\n        power: function (a, b) {\n            return Math.pow(a, b);\n        },\n        greater: function (left, right) {\n            if (left == null || right == null)\n                return false;\n            left = OperandMaker.convertValForDateCompare(left, right);\n            right = OperandMaker.convertValForDateCompare(right, left);\n            return left > right;\n        },\n        less: function (left, right) {\n            if (left == null || right == null)\n                return false;\n            left = OperandMaker.convertValForDateCompare(left, right);\n            right = OperandMaker.convertValForDateCompare(right, left);\n            return left < right;\n        },\n        greaterorequal: function (left, right) {\n            if (OperandMaker.binaryFunctions.equal(left, right))\n                return true;\n            return OperandMaker.binaryFunctions.greater(left, right);\n        },\n        lessorequal: function (left, right) {\n            if (OperandMaker.binaryFunctions.equal(left, right))\n                return true;\n            return OperandMaker.binaryFunctions.less(left, right);\n        },\n        equal: function (left, right, strictCompare) {\n            left = OperandMaker.convertValForDateCompare(left, right);\n            right = OperandMaker.convertValForDateCompare(right, left);\n            return OperandMaker.isTwoValueEquals(left, right, strictCompare !== true);\n        },\n        notequal: function (left, right, strictCompare) {\n            return !OperandMaker.binaryFunctions.equal(left, right, strictCompare);\n        },\n        contains: function (left, right) {\n            return OperandMaker.binaryFunctions.containsCore(left, right, true);\n        },\n        notcontains: function (left, right) {\n            if (!left && !_helpers__WEBPACK_IMPORTED_MODULE_0__[\"Helpers\"].isValueEmpty(right))\n                return true;\n            return OperandMaker.binaryFunctions.containsCore(left, right, false);\n        },\n        anyof: function (left, right) {\n            if (_helpers__WEBPACK_IMPORTED_MODULE_0__[\"Helpers\"].isValueEmpty(left) && _helpers__WEBPACK_IMPORTED_MODULE_0__[\"Helpers\"].isValueEmpty(right))\n                return true;\n            if (_helpers__WEBPACK_IMPORTED_MODULE_0__[\"Helpers\"].isValueEmpty(left) ||\n                (!Array.isArray(left) && left.length === 0))\n                return false;\n            if (_helpers__WEBPACK_IMPORTED_MODULE_0__[\"Helpers\"].isValueEmpty(right))\n                return true;\n            if (!Array.isArray(left))\n                return OperandMaker.binaryFunctions.contains(right, left);\n            if (!Array.isArray(right))\n                return OperandMaker.binaryFunctions.contains(left, right);\n            for (var i = 0; i < right.length; i++) {\n                if (OperandMaker.binaryFunctions.contains(left, right[i]))\n                    return true;\n            }\n            return false;\n        },\n        allof: function (left, right) {\n            if (!left && !_helpers__WEBPACK_IMPORTED_MODULE_0__[\"Helpers\"].isValueEmpty(right))\n                return false;\n            if (!Array.isArray(right))\n                return OperandMaker.binaryFunctions.contains(left, right);\n            for (var i = 0; i < right.length; i++) {\n                if (!OperandMaker.binaryFunctions.contains(left, right[i]))\n                    return false;\n            }\n            return true;\n        },\n        containsCore: function (left, right, isContains) {\n            if (!left && left !== 0 && left !== false)\n                return false;\n            if (!left.length) {\n                left = left.toString();\n                if (typeof right === \"string\" || right instanceof String) {\n                    left = left.toUpperCase();\n                    right = right.toUpperCase();\n                }\n            }\n            if (typeof left === \"string\" || left instanceof String) {\n                if (!right)\n                    return false;\n                right = right.toString();\n                var found = left.indexOf(right) > -1;\n                return isContains ? found : !found;\n            }\n            var rightArray = Array.isArray(right) ? right : [right];\n            for (var rIndex = 0; rIndex < rightArray.length; rIndex++) {\n                var i = 0;\n                right = rightArray[rIndex];\n                for (; i < left.length; i++) {\n                    if (OperandMaker.isTwoValueEquals(left[i], right))\n                        break;\n                }\n                if (i == left.length)\n                    return !isContains;\n            }\n            return isContains;\n        },\n    };\n    OperandMaker.signs = {\n        less: \"<\",\n        lessorequal: \"<=\",\n        greater: \">\",\n        greaterorequal: \">=\",\n        equal: \"==\",\n        notequal: \"!=\",\n        plus: \"+\",\n        minus: \"-\",\n        mul: \"*\",\n        div: \"/\",\n        and: \"and\",\n        or: \"or\",\n        power: \"^\",\n        mod: \"%\",\n        negate: \"!\",\n    };\n    return OperandMaker;\n}());\n\n\n\n/***/ }),\n\n/***/ \"./src/functionsfactory.ts\":\n/*!*********************************!*\\\n  !*** ./src/functionsfactory.ts ***!\n  \\*********************************/\n/*! exports provided: FunctionFactory, registerFunction */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_320506__) {\n\n\"use strict\";\n__nested_webpack_require_320506__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_320506__.d(__nested_webpack_exports__, \"FunctionFactory\", function() { return FunctionFactory; });\n/* harmony export (binding) */ __nested_webpack_require_320506__.d(__nested_webpack_exports__, \"registerFunction\", function() { return registerFunction; });\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_320506__(/*! ./helpers */ \"./src/helpers.ts\");\n/* harmony import */ var _settings__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_320506__(/*! ./settings */ \"./src/settings.ts\");\n/* harmony import */ var _console_warnings__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_320506__(/*! ./console-warnings */ \"./src/console-warnings.ts\");\n\n\n\nvar FunctionFactory = /** @class */ (function () {\n    function FunctionFactory() {\n        this.functionHash = {};\n        this.isAsyncHash = {};\n    }\n    FunctionFactory.prototype.register = function (name, func, isAsync) {\n        if (isAsync === void 0) { isAsync = false; }\n        this.functionHash[name] = func;\n        if (isAsync)\n            this.isAsyncHash[name] = true;\n    };\n    FunctionFactory.prototype.unregister = function (name) {\n        delete this.functionHash[name];\n        delete this.isAsyncHash[name];\n    };\n    FunctionFactory.prototype.hasFunction = function (name) {\n        return !!this.functionHash[name];\n    };\n    FunctionFactory.prototype.isAsyncFunction = function (name) {\n        return !!this.isAsyncHash[name];\n    };\n    FunctionFactory.prototype.clear = function () {\n        this.functionHash = {};\n    };\n    FunctionFactory.prototype.getAll = function () {\n        var result = [];\n        for (var key in this.functionHash) {\n            result.push(key);\n        }\n        return result.sort();\n    };\n    FunctionFactory.prototype.run = function (name, params, properties) {\n        if (properties === void 0) { properties = null; }\n        var func = this.functionHash[name];\n        if (!func) {\n            _console_warnings__WEBPACK_IMPORTED_MODULE_2__[\"ConsoleWarnings\"].warn(\"Unknown function name: \" + name);\n            return null;\n        }\n        var classRunner = {\n            func: func,\n        };\n        if (properties) {\n            for (var key in properties) {\n                classRunner[key] = properties[key];\n            }\n        }\n        return classRunner.func(params);\n    };\n    FunctionFactory.Instance = new FunctionFactory();\n    return FunctionFactory;\n}());\n\nvar registerFunction = FunctionFactory.Instance.register;\nfunction getParamsAsArray(value, arr) {\n    if (value === undefined || value === null)\n        return;\n    if (Array.isArray(value)) {\n        for (var i = 0; i < value.length; i++) {\n            getParamsAsArray(value[i], arr);\n        }\n    }\n    else {\n        if (_helpers__WEBPACK_IMPORTED_MODULE_0__[\"Helpers\"].isNumber(value)) {\n            value = _helpers__WEBPACK_IMPORTED_MODULE_0__[\"Helpers\"].getNumber(value);\n        }\n        arr.push(value);\n    }\n}\nfunction sum(params) {\n    var arr = [];\n    getParamsAsArray(params, arr);\n    var res = 0;\n    for (var i = 0; i < arr.length; i++) {\n        res = _helpers__WEBPACK_IMPORTED_MODULE_0__[\"Helpers\"].correctAfterPlusMinis(res, arr[i], res + arr[i]);\n    }\n    return res;\n}\nFunctionFactory.Instance.register(\"sum\", sum);\nfunction min_max(params, isMin) {\n    var arr = [];\n    getParamsAsArray(params, arr);\n    var res = undefined;\n    for (var i = 0; i < arr.length; i++) {\n        if (res === undefined) {\n            res = arr[i];\n        }\n        if (isMin) {\n            if (res > arr[i])\n                res = arr[i];\n        }\n        else {\n            if (res < arr[i])\n                res = arr[i];\n        }\n    }\n    return res;\n}\nfunction min(params) {\n    return min_max(params, true);\n}\nFunctionFactory.Instance.register(\"min\", min);\nfunction max(params) {\n    return min_max(params, false);\n}\nFunctionFactory.Instance.register(\"max\", max);\nfunction count(params) {\n    var arr = [];\n    getParamsAsArray(params, arr);\n    return arr.length;\n}\nFunctionFactory.Instance.register(\"count\", count);\nfunction avg(params) {\n    var arr = [];\n    getParamsAsArray(params, arr);\n    var res = sum(params);\n    return arr.length > 0 ? res / arr.length : 0;\n}\nFunctionFactory.Instance.register(\"avg\", avg);\nfunction getInArrayParams(params) {\n    if (params.length != 2)\n        return null;\n    var arr = params[0];\n    if (!arr)\n        return null;\n    if (!Array.isArray(arr) && !Array.isArray(Object.keys(arr)))\n        return null;\n    var name = params[1];\n    if (typeof name !== \"string\" && !(name instanceof String))\n        return null;\n    return { data: arr, name: name };\n}\nfunction convertToNumber(val) {\n    if (typeof val === \"string\")\n        return _helpers__WEBPACK_IMPORTED_MODULE_0__[\"Helpers\"].isNumber(val) ? _helpers__WEBPACK_IMPORTED_MODULE_0__[\"Helpers\"].getNumber(val) : undefined;\n    return val;\n}\nfunction processItemInArray(item, name, res, func, needToConvert) {\n    if (!item || _helpers__WEBPACK_IMPORTED_MODULE_0__[\"Helpers\"].isValueEmpty(item[name]))\n        return res;\n    var val = needToConvert ? convertToNumber(item[name]) : 1;\n    return func(res, val);\n}\nfunction calcInArray(params, func, needToConvert) {\n    if (needToConvert === void 0) { needToConvert = true; }\n    var v = getInArrayParams(params);\n    if (!v)\n        return undefined;\n    var res = undefined;\n    if (Array.isArray(v.data)) {\n        for (var i = 0; i < v.data.length; i++) {\n            res = processItemInArray(v.data[i], v.name, res, func, needToConvert);\n        }\n    }\n    else {\n        for (var key in v.data) {\n            res = processItemInArray(v.data[key], v.name, res, func, needToConvert);\n        }\n    }\n    return res;\n}\nfunction sumInArray(params) {\n    var res = calcInArray(params, function (res, val) {\n        if (res == undefined)\n            res = 0;\n        if (val == undefined || val == null)\n            return res;\n        return _helpers__WEBPACK_IMPORTED_MODULE_0__[\"Helpers\"].correctAfterPlusMinis(res, val, res + val);\n    });\n    return res !== undefined ? res : 0;\n}\nFunctionFactory.Instance.register(\"sumInArray\", sumInArray);\nfunction minInArray(params) {\n    return calcInArray(params, function (res, val) {\n        if (res == undefined)\n            return val;\n        if (val == undefined || val == null)\n            return res;\n        return res < val ? res : val;\n    });\n}\nFunctionFactory.Instance.register(\"minInArray\", minInArray);\nfunction maxInArray(params) {\n    return calcInArray(params, function (res, val) {\n        if (res == undefined)\n            return val;\n        if (val == undefined || val == null)\n            return res;\n        return res > val ? res : val;\n    });\n}\nFunctionFactory.Instance.register(\"maxInArray\", maxInArray);\nfunction countInArray(params) {\n    var res = calcInArray(params, function (res, val) {\n        if (res == undefined)\n            res = 0;\n        if (val == undefined || val == null)\n            return res;\n        return res + 1;\n    }, false);\n    return res !== undefined ? res : 0;\n}\nFunctionFactory.Instance.register(\"countInArray\", countInArray);\nfunction avgInArray(params) {\n    var count = countInArray(params);\n    if (count == 0)\n        return 0;\n    return sumInArray(params) / count;\n}\nFunctionFactory.Instance.register(\"avgInArray\", avgInArray);\nfunction iif(params) {\n    if (!params && params.length !== 3)\n        return \"\";\n    return params[0] ? params[1] : params[2];\n}\nFunctionFactory.Instance.register(\"iif\", iif);\nfunction getDate(params) {\n    if (!params && params.length < 1)\n        return null;\n    if (!params[0])\n        return null;\n    return new Date(params[0]);\n}\nFunctionFactory.Instance.register(\"getDate\", getDate);\nfunction age(params) {\n    if (!params && params.length < 1)\n        return null;\n    if (!params[0])\n        return null;\n    var birthDate = new Date(params[0]);\n    var today = new Date();\n    var age = today.getFullYear() - birthDate.getFullYear();\n    if (age > 0) {\n        var m = today.getMonth() - birthDate.getMonth();\n        if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n            age -= 1;\n        }\n    }\n    return age;\n}\nFunctionFactory.Instance.register(\"age\", age);\nfunction isContainerReadyCore(container) {\n    if (!container)\n        return false;\n    var questions = container.questions;\n    for (var i = 0; i < questions.length; i++) {\n        if (!questions[i].validate(false))\n            return false;\n    }\n    return true;\n}\nfunction isContainerReady(params) {\n    if (!params && params.length < 1)\n        return false;\n    if (!params[0] || !this.survey)\n        return false;\n    var name = params[0];\n    var container = this.survey.getPageByName(name);\n    if (!container)\n        container = this.survey.getPanelByName(name);\n    if (!container) {\n        var question = this.survey.getQuestionByName(name);\n        if (!question || !Array.isArray(question.panels))\n            return false;\n        if (params.length > 1) {\n            if (params[1] < question.panels.length) {\n                container = question.panels[params[1]];\n            }\n        }\n        else {\n            for (var i = 0; i < question.panels.length; i++) {\n                if (!isContainerReadyCore(question.panels[i]))\n                    return false;\n            }\n            return true;\n        }\n    }\n    return isContainerReadyCore(container);\n}\nFunctionFactory.Instance.register(\"isContainerReady\", isContainerReady);\nfunction isDisplayMode() {\n    return this.survey && this.survey.isDisplayMode;\n}\nFunctionFactory.Instance.register(\"isDisplayMode\", isDisplayMode);\nfunction currentDate() {\n    return new Date();\n}\nFunctionFactory.Instance.register(\"currentDate\", currentDate);\nfunction today(params) {\n    var res = new Date();\n    if (_settings__WEBPACK_IMPORTED_MODULE_1__[\"settings\"].localization.useLocalTimeZone) {\n        res.setHours(0, 0, 0, 0);\n    }\n    else {\n        res.setUTCHours(0, 0, 0, 0);\n    }\n    if (Array.isArray(params) && params.length == 1) {\n        res.setDate(res.getDate() + params[0]);\n    }\n    return res;\n}\nFunctionFactory.Instance.register(\"today\", today);\nfunction getYear(params) {\n    if (params.length !== 1 || !params[0])\n        return undefined;\n    return new Date(params[0]).getFullYear();\n}\nFunctionFactory.Instance.register(\"getYear\", getYear);\nfunction currentYear() {\n    return new Date().getFullYear();\n}\nFunctionFactory.Instance.register(\"currentYear\", currentYear);\nfunction diffDays(params) {\n    if (!Array.isArray(params) || params.length !== 2)\n        return 0;\n    if (!params[0] || !params[1])\n        return 0;\n    var date1 = new Date(params[0]);\n    var date2 = new Date(params[1]);\n    var diffTime = Math.abs(date2 - date1);\n    return Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n}\nFunctionFactory.Instance.register(\"diffDays\", diffDays);\nfunction dateFromFirstParameterOrToday(params) {\n    var date = today(undefined);\n    if (params && params[0]) {\n        date = new Date(params[0]);\n    }\n    return date;\n}\nfunction year(params) {\n    var date = dateFromFirstParameterOrToday(params);\n    return date.getFullYear();\n}\nFunctionFactory.Instance.register(\"year\", year);\nfunction month(params) {\n    var date = dateFromFirstParameterOrToday(params);\n    return date.getMonth() + 1;\n}\nFunctionFactory.Instance.register(\"month\", month);\nfunction day(params) {\n    var date = dateFromFirstParameterOrToday(params);\n    return date.getDate();\n}\nFunctionFactory.Instance.register(\"day\", day);\nfunction weekday(params) {\n    var date = dateFromFirstParameterOrToday(params);\n    return date.getDay();\n}\nFunctionFactory.Instance.register(\"weekday\", weekday);\nfunction getQuestionValueByContext(context, name) {\n    if (!context || !name)\n        return undefined;\n    var keys = [\"row\", \"panel\", \"survey\"];\n    for (var i = 0; i < keys.length; i++) {\n        var ctx = context[keys[i]];\n        if (ctx && ctx.getQuestionByName) {\n            var res = ctx.getQuestionByName(name);\n            if (res)\n                return res;\n        }\n    }\n    return null;\n}\nfunction displayValue(params) {\n    var q = getQuestionValueByContext(this, params[0]);\n    return q ? q.displayValue : \"\";\n}\nFunctionFactory.Instance.register(\"displayValue\", displayValue);\nfunction propertyValue(params) {\n    if (params.length !== 2 || !params[0] || !params[1])\n        return undefined;\n    var q = getQuestionValueByContext(this, params[0]);\n    return q ? q[params[1]] : undefined;\n}\nFunctionFactory.Instance.register(\"propertyValue\", propertyValue);\nfunction substring_(params) {\n    if (params.length < 2)\n        return \"\";\n    var s = params[0];\n    if (!s || typeof s !== \"string\")\n        return \"\";\n    var start = params[1];\n    if (!_helpers__WEBPACK_IMPORTED_MODULE_0__[\"Helpers\"].isNumber(start))\n        return \"\";\n    var end = params.length > 2 ? params[2] : undefined;\n    if (!_helpers__WEBPACK_IMPORTED_MODULE_0__[\"Helpers\"].isNumber(end))\n        return s.substring(start);\n    return s.substring(start, end);\n}\nFunctionFactory.Instance.register(\"substring\", substring_);\n\n\n/***/ }),\n\n/***/ \"./src/global_variables_utils.ts\":\n/*!***************************************!*\\\n  !*** ./src/global_variables_utils.ts ***!\n  \\***************************************/\n/*! exports provided: DomWindowHelper, DomDocumentHelper */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_333988__) {\n\n\"use strict\";\n__nested_webpack_require_333988__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_333988__.d(__nested_webpack_exports__, \"DomWindowHelper\", function() { return DomWindowHelper; });\n/* harmony export (binding) */ __nested_webpack_require_333988__.d(__nested_webpack_exports__, \"DomDocumentHelper\", function() { return DomDocumentHelper; });\n/* eslint-disable no-restricted-globals */\nvar DomWindowHelper = /** @class */ (function () {\n    function DomWindowHelper() {\n    }\n    DomWindowHelper.isAvailable = function () {\n        return \"undefined\" !== typeof window;\n    };\n    DomWindowHelper.isFileReaderAvailable = function () {\n        if (!DomWindowHelper.isAvailable())\n            return false;\n        return !!window[\"FileReader\"];\n    };\n    DomWindowHelper.getLocation = function () {\n        if (!DomWindowHelper.isAvailable())\n            return;\n        return window.location;\n    };\n    DomWindowHelper.getVisualViewport = function () {\n        if (!DomWindowHelper.isAvailable())\n            return null;\n        return window.visualViewport;\n    };\n    DomWindowHelper.getInnerWidth = function () {\n        if (!DomWindowHelper.isAvailable())\n            return;\n        return window.innerWidth;\n    };\n    DomWindowHelper.getInnerHeight = function () {\n        if (!DomWindowHelper.isAvailable())\n            return null;\n        return window.innerHeight;\n    };\n    DomWindowHelper.getWindow = function () {\n        if (!DomWindowHelper.isAvailable())\n            return;\n        return window;\n    };\n    DomWindowHelper.hasOwn = function (propertyName) {\n        if (!DomWindowHelper.isAvailable())\n            return;\n        return propertyName in window;\n    };\n    DomWindowHelper.getSelection = function () {\n        if (DomWindowHelper.isAvailable() && window.getSelection) {\n            return window.getSelection();\n        }\n    };\n    DomWindowHelper.requestAnimationFrame = function (callback) {\n        if (DomWindowHelper.isAvailable()) {\n            return window.requestAnimationFrame(callback);\n        }\n    };\n    DomWindowHelper.addEventListener = function (type, listener) {\n        if (!DomWindowHelper.isAvailable())\n            return;\n        window.addEventListener(type, listener);\n    };\n    DomWindowHelper.removeEventListener = function (type, listener) {\n        if (!DomWindowHelper.isAvailable())\n            return;\n        window.removeEventListener(type, listener);\n    };\n    return DomWindowHelper;\n}());\n\nvar DomDocumentHelper = /** @class */ (function () {\n    function DomDocumentHelper() {\n    }\n    DomDocumentHelper.isAvailable = function () {\n        return \"undefined\" !== typeof document;\n    };\n    DomDocumentHelper.getBody = function () {\n        if (!DomDocumentHelper.isAvailable())\n            return;\n        return document.body;\n    };\n    DomDocumentHelper.getDocumentElement = function () {\n        if (!DomDocumentHelper.isAvailable())\n            return;\n        return document.documentElement;\n    };\n    DomDocumentHelper.getDocument = function () {\n        if (!DomDocumentHelper.isAvailable())\n            return;\n        return document;\n    };\n    DomDocumentHelper.getCookie = function () {\n        if (!DomDocumentHelper.isAvailable())\n            return;\n        return document.cookie;\n    };\n    DomDocumentHelper.setCookie = function (newCookie) {\n        if (!DomDocumentHelper.isAvailable())\n            return;\n        document.cookie = newCookie;\n    };\n    DomDocumentHelper.activeElementBlur = function () {\n        if (!DomDocumentHelper.isAvailable())\n            return;\n        var activeElement = document.activeElement;\n        if (!!activeElement && !!activeElement.blur) {\n            activeElement.blur();\n        }\n    };\n    DomDocumentHelper.createElement = function (tagName) {\n        if (!DomDocumentHelper.isAvailable())\n            return;\n        return document.createElement(tagName);\n    };\n    DomDocumentHelper.getComputedStyle = function (elt) {\n        if (!DomDocumentHelper.isAvailable())\n            return new CSSStyleDeclaration();\n        return document.defaultView.getComputedStyle(elt);\n    };\n    DomDocumentHelper.addEventListener = function (type, listener) {\n        if (!DomDocumentHelper.isAvailable())\n            return;\n        document.addEventListener(type, listener);\n    };\n    DomDocumentHelper.removeEventListener = function (type, listener) {\n        if (!DomDocumentHelper.isAvailable())\n            return;\n        document.removeEventListener(type, listener);\n    };\n    return DomDocumentHelper;\n}());\n\n\n\n/***/ }),\n\n/***/ \"./src/helpers.ts\":\n/*!************************!*\\\n  !*** ./src/helpers.ts ***!\n  \\************************/\n/*! exports provided: Helpers */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_338767__) {\n\n\"use strict\";\n__nested_webpack_require_338767__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_338767__.d(__nested_webpack_exports__, \"Helpers\", function() { return Helpers; });\n/* harmony import */ var _settings__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_338767__(/*! ./settings */ \"./src/settings.ts\");\n\nvar Helpers = /** @class */ (function () {\n    function Helpers() {\n    }\n    /**\n     * A static methods that returns true if a value undefined, null, empty string or empty array.\n     * @param value\n     */\n    Helpers.isValueEmpty = function (value) {\n        if (Array.isArray(value) && value.length === 0)\n            return true;\n        if (!!value && Helpers.isValueObject(value) && value.constructor === Object) {\n            for (var key in value) {\n                if (!Helpers.isValueEmpty(value[key]))\n                    return false;\n            }\n            return true;\n        }\n        return !value && value !== 0 && value !== false;\n    };\n    Helpers.isArrayContainsEqual = function (x, y) {\n        if (!Array.isArray(x) || !Array.isArray(y))\n            return false;\n        if (x.length !== y.length)\n            return false;\n        for (var i = 0; i < x.length; i++) {\n            var j = 0;\n            for (; j < y.length; j++) {\n                if (Helpers.isTwoValueEquals(x[i], y[j]))\n                    break;\n            }\n            if (j === y.length)\n                return false;\n        }\n        return true;\n    };\n    Helpers.isArraysEqual = function (x, y, ignoreOrder, caseSensitive, trimStrings) {\n        if (ignoreOrder === void 0) { ignoreOrder = false; }\n        if (!Array.isArray(x) || !Array.isArray(y))\n            return false;\n        if (x.length !== y.length)\n            return false;\n        if (ignoreOrder) {\n            var xSorted = [];\n            var ySorted = [];\n            for (var i = 0; i < x.length; i++) {\n                xSorted.push(x[i]);\n                ySorted.push(y[i]);\n            }\n            xSorted.sort();\n            ySorted.sort();\n            x = xSorted;\n            y = ySorted;\n        }\n        for (var i = 0; i < x.length; i++) {\n            if (!Helpers.isTwoValueEquals(x[i], y[i], ignoreOrder, caseSensitive, trimStrings))\n                return false;\n        }\n        return true;\n    };\n    Helpers.compareStrings = function (x, y) {\n        var normalize = _settings__WEBPACK_IMPORTED_MODULE_0__[\"settings\"].comparator.normalizeTextCallback;\n        if (!!x)\n            x = normalize(x, \"compare\").trim();\n        if (!!y)\n            y = normalize(y, \"compare\").trim();\n        if (!x && !y)\n            return 0;\n        if (!x)\n            return -1;\n        if (!y)\n            return 1;\n        if (x === y)\n            return 0;\n        var digitIndex = -1;\n        for (var i = 0; i < x.length && i < y.length; i++) {\n            if (this.isCharDigit(x[i]) && this.isCharDigit(y[i])) {\n                digitIndex = i;\n                break;\n            }\n            if (x[i] !== y[i])\n                break;\n        }\n        if (digitIndex > -1) {\n            var nX = this.getNumberFromStr(x, digitIndex);\n            var nY = this.getNumberFromStr(y, digitIndex);\n            if (!Number.isNaN(nX) && !Number.isNaN(nY) && nX !== nY) {\n                return nX > nY ? 1 : -1;\n            }\n        }\n        return x > y ? 1 : -1;\n    };\n    Helpers.isTwoValueEquals = function (x, y, ignoreOrder, caseSensitive, trimStrings) {\n        if (ignoreOrder === void 0) { ignoreOrder = false; }\n        if (x === y)\n            return true;\n        if (Array.isArray(x) && x.length === 0 && typeof y === \"undefined\")\n            return true;\n        if (Array.isArray(y) && y.length === 0 && typeof x === \"undefined\")\n            return true;\n        if ((x === undefined || x === null) && y === \"\")\n            return true;\n        if ((y === undefined || y === null) && x === \"\")\n            return true;\n        if (trimStrings === undefined)\n            trimStrings = _settings__WEBPACK_IMPORTED_MODULE_0__[\"settings\"].comparator.trimStrings;\n        if (caseSensitive === undefined)\n            caseSensitive = _settings__WEBPACK_IMPORTED_MODULE_0__[\"settings\"].comparator.caseSensitive;\n        if (typeof x === \"string\" && typeof y === \"string\") {\n            var normalize = _settings__WEBPACK_IMPORTED_MODULE_0__[\"settings\"].comparator.normalizeTextCallback;\n            x = normalize(x, \"compare\");\n            y = normalize(y, \"compare\");\n            if (trimStrings) {\n                x = x.trim();\n                y = y.trim();\n            }\n            if (!caseSensitive) {\n                x = x.toLowerCase();\n                y = y.toLowerCase();\n            }\n            return x === y;\n        }\n        if (x instanceof Date && y instanceof Date)\n            return x.getTime() == y.getTime();\n        if (Helpers.isConvertibleToNumber(x) && Helpers.isConvertibleToNumber(y)) {\n            if (parseInt(x) === parseInt(y) && parseFloat(x) === parseFloat(y)) {\n                return true;\n            }\n        }\n        if ((!Helpers.isValueEmpty(x) && Helpers.isValueEmpty(y)) ||\n            (Helpers.isValueEmpty(x) && !Helpers.isValueEmpty(y)))\n            return false;\n        if ((x === true || x === false) && typeof y == \"string\") {\n            return x.toString() === y.toLocaleLowerCase();\n        }\n        if ((y === true || y === false) && typeof x == \"string\") {\n            return y.toString() === x.toLocaleLowerCase();\n        }\n        if (!Helpers.isValueObject(x) && !Helpers.isValueObject(y))\n            return x == y;\n        if (!Helpers.isValueObject(x) || !Helpers.isValueObject(y))\n            return false;\n        if (x[\"equals\"] && y[\"equals\"])\n            return x.equals(y);\n        if (Array.isArray(x) && Array.isArray(y)) {\n            return Helpers.isArraysEqual(x, y, ignoreOrder, caseSensitive, trimStrings);\n        }\n        for (var p in x) {\n            if (!x.hasOwnProperty(p))\n                continue;\n            if (!y.hasOwnProperty(p))\n                return false;\n            if (!this.isTwoValueEquals(x[p], y[p], ignoreOrder, caseSensitive, trimStrings))\n                return false;\n        }\n        for (p in y) {\n            if (y.hasOwnProperty(p) && !x.hasOwnProperty(p))\n                return false;\n        }\n        return true;\n    };\n    Helpers.randomizeArray = function (array) {\n        for (var i = array.length - 1; i > 0; i--) {\n            var j = Math.floor(Math.random() * (i + 1));\n            var temp = array[i];\n            array[i] = array[j];\n            array[j] = temp;\n        }\n        return array;\n    };\n    Helpers.getUnbindValue = function (value) {\n        if (Array.isArray(value)) {\n            var res = [];\n            for (var i = 0; i < value.length; i++) {\n                res.push(Helpers.getUnbindValue(value[i]));\n            }\n            return res;\n        }\n        if (!!value && Helpers.isValueObject(value) && !(value instanceof Date)) {\n            return JSON.parse(JSON.stringify(value));\n        }\n        return value;\n    };\n    Helpers.createCopy = function (obj) {\n        var res = {};\n        if (!obj)\n            return res;\n        for (var key in obj) {\n            res[key] = obj[key];\n        }\n        return res;\n    };\n    Helpers.isConvertibleToNumber = function (value) {\n        return (value !== undefined &&\n            value !== null &&\n            !Array.isArray(value) &&\n            !isNaN(value));\n    };\n    Helpers.isValueObject = function (val, excludeArray) {\n        return val instanceof Object && (!excludeArray || !Array.isArray(val));\n    };\n    Helpers.isNumber = function (value) {\n        return !isNaN(this.getNumber(value));\n    };\n    Helpers.getNumber = function (value) {\n        if (typeof value == \"string\" &&\n            !!value &&\n            value.indexOf(\"0x\") == 0 &&\n            value.length > 32)\n            return NaN;\n        value = this.prepareStringToNumber(value);\n        var res = parseFloat(value);\n        if (isNaN(res) || !isFinite(value))\n            return NaN;\n        return res;\n    };\n    Helpers.prepareStringToNumber = function (val) {\n        if (typeof val !== \"string\" || !val)\n            return val;\n        var i = val.indexOf(\",\");\n        if (i > -1 && val.indexOf(\",\", i + 1) < 0) {\n            return val.replace(\",\", \".\");\n        }\n        return val;\n    };\n    Helpers.getMaxLength = function (maxLength, surveyLength) {\n        if (maxLength < 0) {\n            maxLength = surveyLength;\n        }\n        return maxLength > 0 ? maxLength : null;\n    };\n    Helpers.getRemainingCharacterCounterText = function (newValue, maxLength) {\n        if (!maxLength || maxLength <= 0 || !_settings__WEBPACK_IMPORTED_MODULE_0__[\"settings\"].showMaxLengthIndicator) {\n            return \"\";\n        }\n        var value = newValue ? newValue.length : \"0\";\n        return [value, maxLength].join(\"/\");\n    };\n    Helpers.getNumberByIndex = function (index, startIndexStr) {\n        if (index < 0)\n            return \"\";\n        var startIndex = 1;\n        var prefix = \"\";\n        var postfix = \".\";\n        var isNumeric = true;\n        var strIndex = \"A\";\n        var str = \"\";\n        if (!!startIndexStr) {\n            str = startIndexStr;\n            var ind = str.length - 1;\n            var hasDigit = false;\n            for (var i = 0; i < str.length; i++) {\n                if (Helpers.isCharDigit(str[i])) {\n                    hasDigit = true;\n                    break;\n                }\n            }\n            var checkLetter = function () {\n                return ((hasDigit && !Helpers.isCharDigit(str[ind])) ||\n                    Helpers.isCharNotLetterAndDigit(str[ind]));\n            };\n            while (ind >= 0 && checkLetter())\n                ind--;\n            var newPostfix = \"\";\n            if (ind < str.length - 1) {\n                newPostfix = str.substring(ind + 1);\n                str = str.substring(0, ind + 1);\n            }\n            ind = str.length - 1;\n            while (ind >= 0) {\n                if (checkLetter())\n                    break;\n                ind--;\n                if (!hasDigit)\n                    break;\n            }\n            strIndex = str.substring(ind + 1);\n            prefix = str.substring(0, ind + 1);\n            if (parseInt(strIndex))\n                startIndex = parseInt(strIndex);\n            else if (strIndex.length == 1)\n                isNumeric = false;\n            if (!!newPostfix || !!prefix) {\n                postfix = newPostfix;\n            }\n        }\n        if (isNumeric) {\n            var val = (index + startIndex).toString();\n            while (val.length < strIndex.length)\n                val = \"0\" + val;\n            return prefix + val + postfix;\n        }\n        return (prefix + String.fromCharCode(strIndex.charCodeAt(0) + index) + postfix);\n    };\n    Helpers.isCharNotLetterAndDigit = function (ch) {\n        return ch.toUpperCase() == ch.toLowerCase() && !Helpers.isCharDigit(ch);\n    };\n    Helpers.isCharDigit = function (ch) {\n        return ch >= \"0\" && ch <= \"9\";\n    };\n    Helpers.getNumberFromStr = function (str, index) {\n        if (!this.isCharDigit(str[index]))\n            return NaN;\n        var nStr = \"\";\n        while (index < str.length && this.isCharDigit(str[index])) {\n            nStr += str[index];\n            index++;\n        }\n        if (!nStr)\n            return NaN;\n        return this.getNumber(nStr);\n    };\n    Helpers.countDecimals = function (value) {\n        if (Helpers.isNumber(value) && Math.floor(value) !== value) {\n            var strs = value.toString().split(\".\");\n            return strs.length > 1 && strs[1].length || 0;\n        }\n        return 0;\n    };\n    Helpers.correctAfterPlusMinis = function (a, b, res) {\n        var digitsA = Helpers.countDecimals(a);\n        var digitsB = Helpers.countDecimals(b);\n        if (digitsA > 0 || digitsB > 0) {\n            var digits = Math.max(digitsA, digitsB);\n            res = parseFloat(res.toFixed(digits));\n        }\n        return res;\n    };\n    Helpers.sumAnyValues = function (a, b) {\n        if (!Helpers.isNumber(a) || !Helpers.isNumber(b)) {\n            if (Array.isArray(a) && Array.isArray(b))\n                return [].concat(a).concat(b);\n            if (Array.isArray(a) || Array.isArray(b)) {\n                var arr = Array.isArray(a) ? a : b;\n                var val = arr === a ? b : a;\n                if (typeof val === \"string\") {\n                    var str = arr.join(\", \");\n                    return arr === a ? str + val : val + str;\n                }\n                if (typeof val === \"number\") {\n                    var res = 0;\n                    for (var i = 0; i < arr.length; i++) {\n                        if (typeof arr[i] === \"number\") {\n                            res = Helpers.correctAfterPlusMinis(res, arr[i], res + arr[i]);\n                        }\n                    }\n                    return Helpers.correctAfterPlusMinis(res, val, res + val);\n                }\n            }\n            return a + b;\n        }\n        if (typeof a === \"string\" || typeof b === \"string\")\n            return a + b;\n        return Helpers.correctAfterPlusMinis(a, b, a + b);\n    };\n    Helpers.correctAfterMultiple = function (a, b, res) {\n        var digits = Helpers.countDecimals(a) + Helpers.countDecimals(b);\n        if (digits > 0) {\n            res = parseFloat(res.toFixed(digits));\n        }\n        return res;\n    };\n    Helpers.convertArrayValueToObject = function (src, propName, dest) {\n        if (dest === void 0) { dest = undefined; }\n        var res = new Array();\n        if (!src || !Array.isArray(src))\n            return res;\n        for (var i = 0; i < src.length; i++) {\n            var item = void 0;\n            if (Array.isArray(dest)) {\n                item = Helpers.findObjByPropValue(dest, propName, src[i]);\n            }\n            if (!item) {\n                item = {};\n                item[propName] = src[i];\n            }\n            res.push(item);\n        }\n        return res;\n    };\n    Helpers.findObjByPropValue = function (arr, propName, val) {\n        for (var i = 0; i < arr.length; i++) {\n            if (Helpers.isTwoValueEquals(arr[i][propName], val))\n                return arr[i];\n        }\n        return undefined;\n    };\n    Helpers.convertArrayObjectToValue = function (src, propName) {\n        var res = new Array();\n        if (!src || !Array.isArray(src))\n            return res;\n        for (var i = 0; i < src.length; i++) {\n            var itemVal = !!src[i] ? src[i][propName] : undefined;\n            if (!Helpers.isValueEmpty(itemVal))\n                res.push(itemVal);\n        }\n        return res;\n    };\n    Helpers.convertDateToString = function (date) {\n        var toStr = function (val) {\n            if (val < 10)\n                return \"0\" + val.toString();\n            return val.toString();\n        };\n        return date.getFullYear() + \"-\" + toStr(date.getMonth() + 1) + \"-\" + toStr(date.getDate());\n    };\n    Helpers.convertDateTimeToString = function (date) {\n        var toStr = function (val) {\n            if (val < 10)\n                return \"0\" + val.toString();\n            return val.toString();\n        };\n        return this.convertDateToString(date) + \" \" + toStr(date.getHours()) + \":\" + toStr(date.getMinutes());\n    };\n    Helpers.convertValToQuestionVal = function (val, inputType) {\n        if (val instanceof Date) {\n            if (inputType === \"datetime-local\")\n                return Helpers.convertDateTimeToString(val);\n            return Helpers.convertDateToString(val);\n        }\n        return val;\n    };\n    Helpers.compareVerions = function (ver1, ver2) {\n        if (!ver1 && !ver2)\n            return 0;\n        var ver1Ar = ver1.split(\".\");\n        var ver2Ar = ver2.split(\".\");\n        var len1 = ver1Ar.length;\n        var len2 = ver2Ar.length;\n        for (var i = 0; i < len1 && i < len2; i++) {\n            var str1 = ver1Ar[i];\n            var str2 = ver2Ar[i];\n            if (str1.length === str2.length) {\n                if (str1 !== str2) {\n                    return str1 < str2 ? -1 : 1;\n                }\n            }\n            else {\n                return str1.length < str2.length ? -1 : 1;\n            }\n        }\n        return len1 === len2 ? 0 : (len1 < len2 ? -1 : 1);\n    };\n    return Helpers;\n}());\n\nif (!String.prototype[\"format\"]) {\n    String.prototype[\"format\"] = function () {\n        var args = arguments;\n        return this.replace(/{(\\d+)}/g, function (match, number) {\n            return typeof args[number] != \"undefined\" ? args[number] : match;\n        });\n    };\n}\n\n\n/***/ }),\n\n/***/ \"./src/jsonobject.ts\":\n/*!***************************!*\\\n  !*** ./src/jsonobject.ts ***!\n  \\***************************/\n/*! exports provided: property, propertyArray, JsonObjectProperty, CustomPropertiesCollection, JsonMetadataClass, JsonMetadata, JsonError, JsonUnknownPropertyError, JsonMissingTypeErrorBase, JsonMissingTypeError, JsonIncorrectTypeError, JsonRequiredPropertyError, JsonRequiredArrayPropertyError, JsonIncorrectPropertyValueError, JsonObject, Serializer */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_356022__) {\n\n\"use strict\";\n__nested_webpack_require_356022__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_356022__.d(__nested_webpack_exports__, \"property\", function() { return property; });\n/* harmony export (binding) */ __nested_webpack_require_356022__.d(__nested_webpack_exports__, \"propertyArray\", function() { return propertyArray; });\n/* harmony export (binding) */ __nested_webpack_require_356022__.d(__nested_webpack_exports__, \"JsonObjectProperty\", function() { return JsonObjectProperty; });\n/* harmony export (binding) */ __nested_webpack_require_356022__.d(__nested_webpack_exports__, \"CustomPropertiesCollection\", function() { return CustomPropertiesCollection; });\n/* harmony export (binding) */ __nested_webpack_require_356022__.d(__nested_webpack_exports__, \"JsonMetadataClass\", function() { return JsonMetadataClass; });\n/* harmony export (binding) */ __nested_webpack_require_356022__.d(__nested_webpack_exports__, \"JsonMetadata\", function() { return JsonMetadata; });\n/* harmony export (binding) */ __nested_webpack_require_356022__.d(__nested_webpack_exports__, \"JsonError\", function() { return JsonError; });\n/* harmony export (binding) */ __nested_webpack_require_356022__.d(__nested_webpack_exports__, \"JsonUnknownPropertyError\", function() { return JsonUnknownPropertyError; });\n/* harmony export (binding) */ __nested_webpack_require_356022__.d(__nested_webpack_exports__, \"JsonMissingTypeErrorBase\", function() { return JsonMissingTypeErrorBase; });\n/* harmony export (binding) */ __nested_webpack_require_356022__.d(__nested_webpack_exports__, \"JsonMissingTypeError\", function() { return JsonMissingTypeError; });\n/* harmony export (binding) */ __nested_webpack_require_356022__.d(__nested_webpack_exports__, \"JsonIncorrectTypeError\", function() { return JsonIncorrectTypeError; });\n/* harmony export (binding) */ __nested_webpack_require_356022__.d(__nested_webpack_exports__, \"JsonRequiredPropertyError\", function() { return JsonRequiredPropertyError; });\n/* harmony export (binding) */ __nested_webpack_require_356022__.d(__nested_webpack_exports__, \"JsonRequiredArrayPropertyError\", function() { return JsonRequiredArrayPropertyError; });\n/* harmony export (binding) */ __nested_webpack_require_356022__.d(__nested_webpack_exports__, \"JsonIncorrectPropertyValueError\", function() { return JsonIncorrectPropertyValueError; });\n/* harmony export (binding) */ __nested_webpack_require_356022__.d(__nested_webpack_exports__, \"JsonObject\", function() { return JsonObject; });\n/* harmony export (binding) */ __nested_webpack_require_356022__.d(__nested_webpack_exports__, \"Serializer\", function() { return Serializer; });\n/* harmony import */ var _surveyStrings__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_356022__(/*! ./surveyStrings */ \"./src/surveyStrings.ts\");\n/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_356022__(/*! ./base */ \"./src/base.ts\");\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_356022__(/*! ./helpers */ \"./src/helpers.ts\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __spreadArray = ( false) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\n\n\n\nfunction ensureLocString(target, options, key) {\n    var locString = target.getLocalizableString(key);\n    if (!locString) {\n        var defaultStr = void 0;\n        if (typeof options.localizable === \"object\" && options.localizable.defaultStr) {\n            defaultStr = options.localizable.defaultStr;\n        }\n        locString = target.createLocalizableString(key, target, true, defaultStr);\n        if (typeof options.localizable === \"object\" &&\n            typeof options.localizable.onGetTextCallback === \"function\") {\n            locString.onGetTextCallback = options.localizable.onGetTextCallback;\n        }\n    }\n}\nfunction getLocStringValue(target, options, key) {\n    ensureLocString(target, options, key);\n    var res = target.getLocalizableStringText(key);\n    if (!!res)\n        return res;\n    if (typeof options.localizable === \"object\" && options.localizable.defaultStr) {\n        var loc = !!target.getLocale ? target.getLocale() : \"\";\n        return _surveyStrings__WEBPACK_IMPORTED_MODULE_0__[\"surveyLocalization\"].getString(options.localizable.defaultStr, loc);\n    }\n    return \"\";\n}\nfunction property(options) {\n    if (options === void 0) { options = {}; }\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    return function (target, key) {\n        var processComputedUpdater = function (obj, val) {\n            if (!!val && typeof val === \"object\" && val.type === _base__WEBPACK_IMPORTED_MODULE_1__[\"ComputedUpdater\"].ComputedUpdaterType) {\n                _base__WEBPACK_IMPORTED_MODULE_1__[\"Base\"].startCollectDependencies(function () { return obj[key] = val.updater(); }, obj, key);\n                var result = val.updater();\n                var dependencies = _base__WEBPACK_IMPORTED_MODULE_1__[\"Base\"].finishCollectDependencies();\n                val.setDependencies(dependencies);\n                if (obj.dependencies[key]) {\n                    obj.dependencies[key].dispose();\n                }\n                obj.dependencies[key] = val;\n                return result;\n            }\n            return val;\n        };\n        if (!options || !options.localizable) {\n            Object.defineProperty(target, key, {\n                get: function () {\n                    // const serializationProperty = Serializer.getProperty(target.getType(), key);\n                    // if(!!serializationProperty && options.defaultValue !== undefined) {\n                    //   ConsoleWarnings.error(\"remove defaultValue from @property for class \" + target.getType() + \" property name is \" + key);\n                    // }\n                    var defaultVal = null;\n                    if (!!options) {\n                        if (typeof options.getDefaultValue === \"function\") {\n                            defaultVal = options.getDefaultValue(this);\n                        }\n                        if (options.defaultValue !== undefined) {\n                            defaultVal = options.defaultValue;\n                        }\n                    }\n                    return this.getPropertyValue(key, defaultVal);\n                },\n                set: function (val) {\n                    var newValue = processComputedUpdater(this, val);\n                    this.setPropertyValue(key, newValue);\n                    if (!!options && options.onSet) {\n                        options.onSet(newValue, this);\n                    }\n                },\n            });\n        }\n        else {\n            Object.defineProperty(target, key, {\n                get: function () {\n                    return getLocStringValue(this, options, key);\n                },\n                set: function (val) {\n                    ensureLocString(this, options, key);\n                    var newValue = processComputedUpdater(this, val);\n                    this.setLocalizableStringText(key, newValue);\n                    if (!!options && options.onSet) {\n                        options.onSet(newValue, this);\n                    }\n                },\n            });\n            Object.defineProperty(target, typeof options.localizable === \"object\" && !!options.localizable.name ?\n                options.localizable.name : \"loc\" + key.charAt(0).toUpperCase() + key.slice(1), {\n                get: function () {\n                    ensureLocString(this, options, key);\n                    return this.getLocalizableString(key);\n                },\n            });\n        }\n    };\n}\nfunction ensureArray(target, options, key) {\n    target.ensureArray(key, function (item, index) {\n        var handler = !!options ? options.onPush : null;\n        handler && handler(item, index, target);\n    }, function (item, index) {\n        var handler = !!options ? options.onRemove : null;\n        handler && handler(item, index, target);\n    });\n}\nfunction propertyArray(options) {\n    return function (target, key) {\n        Object.defineProperty(target, key, {\n            get: function () {\n                ensureArray(this, options, key);\n                return this.getPropertyValue(key);\n            },\n            set: function (val) {\n                ensureArray(this, options, key);\n                var arr = this.getPropertyValue(key);\n                if (val === arr) {\n                    return;\n                }\n                if (arr) {\n                    arr.splice.apply(arr, __spreadArray([0, arr.length], (val || [])));\n                }\n                else {\n                    this.setPropertyValue(key, val);\n                }\n                if (!!options && options.onSet) {\n                    options.onSet(val, this);\n                }\n            },\n        });\n    };\n}\n/**\n * Contains information about a property of a survey element (page, panel, questions, and etc).\n * @see addProperty\n * @see removeProperty\n * @see [Add Properties](https://surveyjs.io/Documentation/Survey-Creator#addproperties)\n * @see [Remove Properties](https://surveyjs.io/Documentation/Survey-Creator#removeproperties)\n */\nvar JsonObjectProperty = /** @class */ (function () {\n    function JsonObjectProperty(classInfo, name, isRequired) {\n        if (isRequired === void 0) { isRequired = false; }\n        this.name = name;\n        this.isRequiredValue = false;\n        this.isUniqueValue = false;\n        this.isSerializable = true;\n        this.isLightSerializable = true;\n        this.isCustom = false;\n        this.isDynamicChoices = false; //TODO obsolete, use dependsOn attribute\n        this.isBindable = false;\n        this.category = \"\";\n        this.categoryIndex = -1;\n        this.visibleIndex = -1;\n        this.maxLength = -1;\n        this.isArray = false;\n        this.classInfoValue = classInfo;\n        this.isRequiredValue = isRequired;\n        this.idValue = JsonObjectProperty.Index++;\n    }\n    Object.defineProperty(JsonObjectProperty.prototype, \"id\", {\n        get: function () {\n            return this.idValue;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(JsonObjectProperty.prototype, \"classInfo\", {\n        get: function () {\n            return this.classInfoValue;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(JsonObjectProperty.prototype, \"type\", {\n        get: function () {\n            return this.typeValue ? this.typeValue : \"string\";\n        },\n        set: function (value) {\n            if (value === \"itemvalues\")\n                value = \"itemvalue[]\";\n            if (value === \"textitems\")\n                value = \"textitem[]\";\n            this.typeValue = value;\n            if (this.typeValue.indexOf(\"[]\") === this.typeValue.length - 2) {\n                this.isArray = true;\n                this.className = this.typeValue.substring(0, this.typeValue.length - 2);\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(JsonObjectProperty.prototype, \"isRequired\", {\n        get: function () {\n            return this.isRequiredValue;\n        },\n        set: function (val) {\n            if (val !== this.isRequired) {\n                this.isRequiredValue = val;\n                if (!!this.classInfo) {\n                    this.classInfo.resetAllProperties();\n                }\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(JsonObjectProperty.prototype, \"isUnique\", {\n        get: function () {\n            return this.isUniqueValue;\n        },\n        set: function (val) {\n            this.isUniqueValue = val;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(JsonObjectProperty.prototype, \"uniquePropertyName\", {\n        get: function () {\n            return this.uniquePropertyValue;\n        },\n        set: function (val) {\n            this.uniquePropertyValue = val;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(JsonObjectProperty.prototype, \"hasToUseGetValue\", {\n        get: function () {\n            return this.onGetValue || this.serializationProperty;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    JsonObjectProperty.prototype.getDefaultValue = function (obj) {\n        var result = !!this.defaultValueFunc ? this.defaultValueFunc(obj) : this.defaultValueValue;\n        if (!!JsonObjectProperty.getItemValuesDefaultValue &&\n            Serializer.isDescendantOf(this.className, \"itemvalue\")) {\n            result = JsonObjectProperty.getItemValuesDefaultValue(this.defaultValueValue || [], this.className);\n        }\n        return result;\n    };\n    Object.defineProperty(JsonObjectProperty.prototype, \"defaultValue\", {\n        get: function () {\n            return this.getDefaultValue(undefined);\n        },\n        set: function (newValue) {\n            this.defaultValueValue = newValue;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    JsonObjectProperty.prototype.isDefaultValue = function (value) {\n        return this.isDefaultValueByObj(undefined, value);\n    };\n    JsonObjectProperty.prototype.isDefaultValueByObj = function (obj, value) {\n        var dValue = this.getDefaultValue(obj);\n        if (!_helpers__WEBPACK_IMPORTED_MODULE_2__[\"Helpers\"].isValueEmpty(dValue)) {\n            return _helpers__WEBPACK_IMPORTED_MODULE_2__[\"Helpers\"].isTwoValueEquals(value, dValue, false, true, false);\n        }\n        if (this.isLocalizable)\n            return value === null || value === undefined;\n        return ((value === false && (this.type == \"boolean\" || this.type == \"switch\")) ||\n            value === \"\" || _helpers__WEBPACK_IMPORTED_MODULE_2__[\"Helpers\"].isValueEmpty(value));\n    };\n    JsonObjectProperty.prototype.getSerializableValue = function (obj) {\n        if (!!this.onSerializeValue)\n            return this.onSerializeValue(obj);\n        return this.getValue(obj);\n    };\n    JsonObjectProperty.prototype.getValue = function (obj) {\n        if (this.onGetValue)\n            return this.onGetValue(obj);\n        if (this.serializationProperty && !!obj[this.serializationProperty])\n            return obj[this.serializationProperty].getJson();\n        return obj[this.name];\n    };\n    JsonObjectProperty.prototype.getPropertyValue = function (obj) {\n        if (this.isLocalizable) {\n            return !!obj[this.serializationProperty]\n                ? obj[this.serializationProperty].text\n                : null;\n        }\n        return this.getValue(obj);\n    };\n    Object.defineProperty(JsonObjectProperty.prototype, \"hasToUseSetValue\", {\n        get: function () {\n            return this.onSetValue || this.serializationProperty;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    JsonObjectProperty.prototype.settingValue = function (obj, value) {\n        if (!this.onSettingValue || obj.isLoadingFromJson)\n            return value;\n        return this.onSettingValue(obj, value);\n    };\n    JsonObjectProperty.prototype.setValue = function (obj, value, jsonConv) {\n        if (this.onSetValue) {\n            this.onSetValue(obj, value, jsonConv);\n        }\n        else {\n            if (this.serializationProperty && !!obj[this.serializationProperty])\n                obj[this.serializationProperty].setJson(value);\n            else {\n                if (value && typeof value === \"string\") {\n                    if (this.type == \"number\") {\n                        value = parseInt(value);\n                    }\n                    if (this.type == \"boolean\" || this.type == \"switch\") {\n                        value = value.toLowerCase() === \"true\";\n                    }\n                }\n                obj[this.name] = value;\n            }\n        }\n    };\n    JsonObjectProperty.prototype.validateValue = function (value) {\n        var choices = this.choices;\n        if (!Array.isArray(choices) || choices.length === 0)\n            return true;\n        return choices.indexOf(value) > -1;\n    };\n    JsonObjectProperty.prototype.getObjType = function (objType) {\n        if (!this.classNamePart)\n            return objType;\n        return objType.replace(this.classNamePart, \"\");\n    };\n    Object.defineProperty(JsonObjectProperty.prototype, \"choices\", {\n        /**\n         * Depricated, please use getChoices\n         */\n        get: function () {\n            return this.getChoices(null);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(JsonObjectProperty.prototype, \"hasChoices\", {\n        get: function () {\n            return !!this.choicesValue || !!this.choicesfunc;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    JsonObjectProperty.prototype.getChoices = function (obj, choicesCallback) {\n        if (choicesCallback === void 0) { choicesCallback = null; }\n        if (this.choicesValue != null)\n            return this.choicesValue;\n        if (this.choicesfunc != null)\n            return this.choicesfunc(obj, choicesCallback);\n        return null;\n    };\n    JsonObjectProperty.prototype.setChoices = function (value, valueFunc) {\n        if (valueFunc === void 0) { valueFunc = null; }\n        this.choicesValue = value;\n        this.choicesfunc = valueFunc;\n    };\n    JsonObjectProperty.prototype.getBaseValue = function () {\n        if (!this.baseValue)\n            return \"\";\n        if (typeof this.baseValue == \"function\")\n            return this.baseValue();\n        return this.baseValue;\n    };\n    JsonObjectProperty.prototype.setBaseValue = function (val) {\n        this.baseValue = val;\n    };\n    Object.defineProperty(JsonObjectProperty.prototype, \"readOnly\", {\n        get: function () {\n            return this.readOnlyValue != null ? this.readOnlyValue : false;\n        },\n        set: function (val) {\n            this.readOnlyValue = val;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    JsonObjectProperty.prototype.isEnable = function (obj) {\n        if (this.readOnly)\n            return false;\n        if (!obj || !this.enableIf)\n            return true;\n        return this.enableIf(this.getOriginalObj(obj));\n    };\n    JsonObjectProperty.prototype.isVisible = function (layout, obj) {\n        if (obj === void 0) { obj = null; }\n        var isLayout = !this.layout || this.layout == layout;\n        if (!this.visible || !isLayout)\n            return false;\n        if (!!this.visibleIf && !!obj) {\n            return this.visibleIf(this.getOriginalObj(obj));\n        }\n        return true;\n    };\n    JsonObjectProperty.prototype.getOriginalObj = function (obj) {\n        if (obj && obj.getOriginalObj) {\n            var orjObj = obj.getOriginalObj();\n            if (orjObj && Serializer.findProperty(orjObj.getType(), this.name)) {\n                return orjObj;\n            }\n        }\n        return obj;\n    };\n    Object.defineProperty(JsonObjectProperty.prototype, \"visible\", {\n        get: function () {\n            return this.visibleValue != null ? this.visibleValue : true;\n        },\n        set: function (val) {\n            this.visibleValue = val;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    JsonObjectProperty.prototype.isAvailableInVersion = function (ver) {\n        if (!!this.alternativeName || this.oldName)\n            return true;\n        return this.isAvailableInVersionCore(ver);\n    };\n    JsonObjectProperty.prototype.getSerializedName = function (ver) {\n        if (!this.alternativeName)\n            return this.name;\n        return this.isAvailableInVersionCore(ver) ? this.name : this.alternativeName || this.oldName;\n    };\n    JsonObjectProperty.prototype.getSerializedProperty = function (obj, ver) {\n        if (!this.oldName || this.isAvailableInVersionCore(ver))\n            return this;\n        if (!obj || !obj.getType)\n            return null;\n        return Serializer.findProperty(obj.getType(), this.oldName);\n    };\n    JsonObjectProperty.prototype.isAvailableInVersionCore = function (ver) {\n        if (!ver || !this.version)\n            return true;\n        return _helpers__WEBPACK_IMPORTED_MODULE_2__[\"Helpers\"].compareVerions(this.version, ver) <= 0;\n    };\n    Object.defineProperty(JsonObjectProperty.prototype, \"isLocalizable\", {\n        get: function () {\n            return this.isLocalizableValue != null ? this.isLocalizableValue : false;\n        },\n        set: function (val) {\n            this.isLocalizableValue = val;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(JsonObjectProperty.prototype, \"dataList\", {\n        get: function () {\n            return Array.isArray(this.dataListValue) ? this.dataListValue : [];\n        },\n        set: function (val) {\n            this.dataListValue = val;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    JsonObjectProperty.prototype.mergeWith = function (prop) {\n        var valuesNames = JsonObjectProperty.mergableValues;\n        for (var i = 0; i < valuesNames.length; i++) {\n            this.mergeValue(prop, valuesNames[i]);\n        }\n    };\n    JsonObjectProperty.prototype.addDependedProperty = function (name) {\n        if (!this.dependedProperties) {\n            this.dependedProperties = [];\n        }\n        if (this.dependedProperties.indexOf(name) < 0) {\n            this.dependedProperties.push(name);\n        }\n    };\n    JsonObjectProperty.prototype.getDependedProperties = function () {\n        return !!this.dependedProperties ? this.dependedProperties : [];\n    };\n    JsonObjectProperty.prototype.schemaType = function () {\n        if (this.className === \"choicesByUrl\")\n            return undefined;\n        if (this.className === \"string\")\n            return this.className;\n        if (!!this.className)\n            return \"array\";\n        if (!!this.baseClassName)\n            return \"array\";\n        if (this.type == \"switch\")\n            return \"boolean\";\n        if (this.type == \"boolean\" || this.type == \"number\")\n            return this.type;\n        return \"string\";\n    };\n    JsonObjectProperty.prototype.schemaRef = function () {\n        if (!!this.className)\n            return this.className;\n        return undefined;\n    };\n    JsonObjectProperty.prototype.mergeValue = function (prop, valueName) {\n        if (this[valueName] == null && prop[valueName] != null) {\n            this[valueName] = prop[valueName];\n        }\n    };\n    JsonObjectProperty.Index = 1;\n    JsonObjectProperty.mergableValues = [\n        \"typeValue\",\n        \"choicesValue\",\n        \"baseValue\",\n        \"readOnlyValue\",\n        \"visibleValue\",\n        \"isSerializable\",\n        \"isLightSerializable\",\n        \"isCustom\",\n        \"isBindable\",\n        \"isUnique\",\n        \"uniquePropertyName\",\n        \"isDynamicChoices\",\n        \"isLocalizableValue\",\n        \"className\",\n        \"alternativeName\",\n        \"oldName\",\n        \"layout\",\n        \"version\",\n        \"classNamePart\",\n        \"baseClassName\",\n        \"defaultValue\",\n        \"defaultValueFunc\",\n        \"serializationProperty\",\n        \"onGetValue\",\n        \"onSetValue\",\n        \"onSettingValue\",\n        \"displayName\",\n        \"category\",\n        \"categoryIndex\",\n        \"visibleIndex\",\n        \"nextToProperty\",\n        \"overridingProperty\",\n        \"showMode\",\n        \"dependedProperties\",\n        \"visibleIf\",\n        \"enableIf\",\n        \"onExecuteExpression\",\n        \"onPropertyEditorUpdate\",\n        \"maxLength\",\n        \"maxValue\",\n        \"minValue\",\n        \"dataListValue\",\n    ];\n    return JsonObjectProperty;\n}());\n\nvar CustomPropertiesCollection = /** @class */ (function () {\n    function CustomPropertiesCollection() {\n    }\n    CustomPropertiesCollection.addProperty = function (className, property) {\n        className = className.toLowerCase();\n        var props = CustomPropertiesCollection.properties;\n        if (!props[className]) {\n            props[className] = [];\n        }\n        props[className].push(property);\n    };\n    CustomPropertiesCollection.removeProperty = function (className, propertyName) {\n        className = className.toLowerCase();\n        var props = CustomPropertiesCollection.properties;\n        if (!props[className])\n            return;\n        var properties = props[className];\n        for (var i = 0; i < properties.length; i++) {\n            if (properties[i].name == propertyName) {\n                props[className].splice(i, 1);\n                break;\n            }\n        }\n    };\n    CustomPropertiesCollection.removeAllProperties = function (className) {\n        className = className.toLowerCase();\n        delete CustomPropertiesCollection.properties[className];\n    };\n    CustomPropertiesCollection.addClass = function (className, parentClassName) {\n        className = className.toLowerCase();\n        if (parentClassName) {\n            parentClassName = parentClassName.toLowerCase();\n        }\n        CustomPropertiesCollection.parentClasses[className] = parentClassName;\n    };\n    CustomPropertiesCollection.getProperties = function (className) {\n        className = className.toLowerCase();\n        var res = [];\n        var props = CustomPropertiesCollection.properties;\n        while (className) {\n            var properties = props[className];\n            if (properties) {\n                for (var i = 0; i < properties.length; i++) {\n                    res.push(properties[i]);\n                }\n            }\n            className = CustomPropertiesCollection.parentClasses[className];\n        }\n        return res;\n    };\n    CustomPropertiesCollection.createProperties = function (obj) {\n        if (!obj || !obj.getType)\n            return;\n        CustomPropertiesCollection.createPropertiesCore(obj, obj.getType());\n    };\n    CustomPropertiesCollection.createPropertiesCore = function (obj, className) {\n        var props = CustomPropertiesCollection.properties;\n        if (props[className]) {\n            CustomPropertiesCollection.createPropertiesInObj(obj, props[className]);\n        }\n        var parentClass = CustomPropertiesCollection.parentClasses[className];\n        if (parentClass) {\n            CustomPropertiesCollection.createPropertiesCore(obj, parentClass);\n        }\n    };\n    CustomPropertiesCollection.createPropertiesInObj = function (obj, properties) {\n        for (var i = 0; i < properties.length; i++) {\n            CustomPropertiesCollection.createPropertyInObj(obj, properties[i]);\n        }\n    };\n    CustomPropertiesCollection.createPropertyInObj = function (obj, prop) {\n        if (CustomPropertiesCollection.checkIsPropertyExists(obj, prop.name))\n            return;\n        if (!!prop.serializationProperty && CustomPropertiesCollection.checkIsPropertyExists(obj, prop.serializationProperty))\n            return;\n        if (prop.isLocalizable &&\n            prop.serializationProperty &&\n            obj.createCustomLocalizableObj) {\n            var locStr = obj.createCustomLocalizableObj(prop.name);\n            locStr.defaultValue = prop.defaultValue;\n            var locDesc = {\n                get: function () {\n                    return obj.getLocalizableString(prop.name);\n                },\n            };\n            Object.defineProperty(obj, prop.serializationProperty, locDesc);\n            var desc = {\n                get: function () {\n                    return obj.getLocalizableStringText(prop.name);\n                },\n                set: function (v) {\n                    obj.setLocalizableStringText(prop.name, v);\n                },\n            };\n            Object.defineProperty(obj, prop.name, desc);\n        }\n        else {\n            var defaultValue = prop.defaultValue;\n            var isArrayProp = prop.isArray || prop.type === \"multiplevalues\";\n            if (typeof obj.createNewArray === \"function\") {\n                if (Serializer.isDescendantOf(prop.className, \"itemvalue\")) {\n                    obj.createNewArray(prop.name, function (item) {\n                        item.locOwner = obj;\n                        item.ownerPropertyName = prop.name;\n                    });\n                    isArrayProp = true;\n                }\n                else {\n                    //It is a simple array property\n                    if (isArrayProp) {\n                        obj.createNewArray(prop.name);\n                    }\n                }\n                if (isArrayProp) {\n                    if (Array.isArray(defaultValue)) {\n                        obj.setPropertyValue(prop.name, defaultValue);\n                    }\n                    defaultValue = null;\n                }\n            }\n            if (!!obj.getPropertyValue && !!obj.setPropertyValue) {\n                var desc = {\n                    get: function () {\n                        if (!!prop.onGetValue) {\n                            return prop.onGetValue(obj);\n                        }\n                        return obj.getPropertyValue(prop.name, defaultValue);\n                    },\n                    set: function (v) {\n                        if (!!prop.onSetValue) {\n                            prop.onSetValue(obj, v, null);\n                        }\n                        else {\n                            obj.setPropertyValue(prop.name, v);\n                        }\n                    },\n                };\n                Object.defineProperty(obj, prop.name, desc);\n            }\n        }\n        if (prop.type === \"condition\" || prop.type === \"expression\") {\n            if (!!prop.onExecuteExpression) {\n                obj.addExpressionProperty(prop.name, prop.onExecuteExpression);\n            }\n        }\n    };\n    CustomPropertiesCollection.checkIsPropertyExists = function (obj, name) {\n        return obj.hasOwnProperty(name) || obj[name];\n    };\n    CustomPropertiesCollection.properties = {};\n    CustomPropertiesCollection.parentClasses = {};\n    return CustomPropertiesCollection;\n}());\n\nvar JsonMetadataClass = /** @class */ (function () {\n    function JsonMetadataClass(name, properties, creator, parentName) {\n        if (creator === void 0) { creator = null; }\n        if (parentName === void 0) { parentName = null; }\n        this.name = name;\n        this.creator = creator;\n        this.parentName = parentName;\n        name = name.toLowerCase();\n        this.isCustomValue = !creator && name !== \"survey\";\n        if (this.parentName) {\n            this.parentName = this.parentName.toLowerCase();\n            CustomPropertiesCollection.addClass(name, this.parentName);\n            if (!!creator) {\n                this.makeParentRegularClass();\n            }\n        }\n        this.properties = new Array();\n        for (var i = 0; i < properties.length; i++) {\n            this.createProperty(properties[i], this.isCustom);\n        }\n    }\n    //Obsolete\n    JsonMetadataClass.prototype.find = function (name) {\n        for (var i = 0; i < this.properties.length; i++) {\n            if (this.properties[i].name == name)\n                return this.properties[i];\n        }\n        return null;\n    };\n    JsonMetadataClass.prototype.findProperty = function (name) {\n        this.fillAllProperties();\n        return this.hashProperties[name];\n    };\n    JsonMetadataClass.prototype.getAllProperties = function () {\n        this.fillAllProperties();\n        return this.allProperties;\n    };\n    JsonMetadataClass.prototype.getRequiredProperties = function () {\n        if (!!this.requiredProperties)\n            return this.requiredProperties;\n        this.requiredProperties = [];\n        var props = this.getAllProperties();\n        for (var i = 0; i < props.length; i++) {\n            if (props[i].isRequired)\n                this.requiredProperties.push(props[i]);\n        }\n        return this.requiredProperties;\n    };\n    JsonMetadataClass.prototype.resetAllProperties = function () {\n        this.allProperties = undefined;\n        this.requiredProperties = undefined;\n        this.hashProperties = undefined;\n        var childClasses = Serializer.getChildrenClasses(this.name);\n        for (var i = 0; i < childClasses.length; i++) {\n            childClasses[i].resetAllProperties();\n        }\n    };\n    Object.defineProperty(JsonMetadataClass.prototype, \"isCustom\", {\n        get: function () { return this.isCustomValue; },\n        enumerable: false,\n        configurable: true\n    });\n    JsonMetadataClass.prototype.fillAllProperties = function () {\n        var _this = this;\n        if (!!this.allProperties)\n            return;\n        this.allProperties = [];\n        this.hashProperties = {};\n        var localProperties = {};\n        this.properties.forEach(function (prop) { return localProperties[prop.name] = prop; });\n        var parentClass = !!this.parentName ? Serializer.findClass(this.parentName) : null;\n        if (!!parentClass) {\n            var parentProperties = parentClass.getAllProperties();\n            parentProperties.forEach(function (prop) {\n                var overridedProp = localProperties[prop.name];\n                if (!!overridedProp) {\n                    overridedProp.mergeWith(prop);\n                    _this.addPropCore(overridedProp);\n                }\n                else {\n                    _this.addPropCore(prop);\n                }\n            });\n        }\n        this.properties.forEach(function (prop) {\n            if (!_this.hashProperties[prop.name]) {\n                _this.addPropCore(prop);\n            }\n        });\n    };\n    JsonMetadataClass.prototype.addPropCore = function (prop) {\n        this.allProperties.push(prop);\n        this.hashProperties[prop.name] = prop;\n        if (!!prop.alternativeName) {\n            this.hashProperties[prop.alternativeName] = prop;\n        }\n    };\n    JsonMetadataClass.prototype.isOverridedProp = function (propName) {\n        return !!this.parentName && !!Serializer.findProperty(this.parentName, propName);\n    };\n    JsonMetadataClass.prototype.hasRegularChildClass = function () {\n        if (!this.isCustom)\n            return;\n        this.isCustomValue = false;\n        for (var i = 0; i < this.properties.length; i++) {\n            this.properties[i].isCustom = false;\n        }\n        CustomPropertiesCollection.removeAllProperties(this.name);\n        this.makeParentRegularClass();\n    };\n    JsonMetadataClass.prototype.makeParentRegularClass = function () {\n        if (!this.parentName)\n            return;\n        var parent = Serializer.findClass(this.parentName);\n        if (!!parent) {\n            parent.hasRegularChildClass();\n        }\n    };\n    JsonMetadataClass.prototype.createProperty = function (propInfo, isCustom) {\n        if (isCustom === void 0) { isCustom = false; }\n        var propertyName = typeof propInfo === \"string\" ? propInfo : propInfo.name;\n        if (!propertyName)\n            return;\n        var propertyType = null;\n        var typeIndex = propertyName.indexOf(JsonMetadataClass.typeSymbol);\n        if (typeIndex > -1) {\n            propertyType = propertyName.substring(typeIndex + 1);\n            propertyName = propertyName.substring(0, typeIndex);\n        }\n        var isRequired = this.getIsPropertyNameRequired(propertyName) || !!propInfo.isRequired;\n        propertyName = this.getPropertyName(propertyName);\n        var prop = new JsonObjectProperty(this, propertyName, isRequired);\n        if (propertyType) {\n            prop.type = propertyType;\n        }\n        if (typeof propInfo === \"object\") {\n            if (propInfo.type) {\n                prop.type = propInfo.type;\n            }\n            if (propInfo.default !== undefined) {\n                prop.defaultValue = propInfo.default;\n            }\n            if (propInfo.defaultFunc !== undefined) {\n                prop.defaultValueFunc = propInfo.defaultFunc;\n            }\n            if (!_helpers__WEBPACK_IMPORTED_MODULE_2__[\"Helpers\"].isValueEmpty(propInfo.isSerializable)) {\n                prop.isSerializable = propInfo.isSerializable;\n            }\n            if (!_helpers__WEBPACK_IMPORTED_MODULE_2__[\"Helpers\"].isValueEmpty(propInfo.isLightSerializable)) {\n                prop.isLightSerializable = propInfo.isLightSerializable;\n            }\n            if (!_helpers__WEBPACK_IMPORTED_MODULE_2__[\"Helpers\"].isValueEmpty(propInfo.maxLength)) {\n                prop.maxLength = propInfo.maxLength;\n            }\n            if (propInfo.displayName !== undefined) {\n                prop.displayName = propInfo.displayName;\n            }\n            if (!_helpers__WEBPACK_IMPORTED_MODULE_2__[\"Helpers\"].isValueEmpty(propInfo.category)) {\n                prop.category = propInfo.category;\n            }\n            if (!_helpers__WEBPACK_IMPORTED_MODULE_2__[\"Helpers\"].isValueEmpty(propInfo.categoryIndex)) {\n                prop.categoryIndex = propInfo.categoryIndex;\n            }\n            if (!_helpers__WEBPACK_IMPORTED_MODULE_2__[\"Helpers\"].isValueEmpty(propInfo.nextToProperty)) {\n                prop.nextToProperty = propInfo.nextToProperty;\n            }\n            if (!_helpers__WEBPACK_IMPORTED_MODULE_2__[\"Helpers\"].isValueEmpty(propInfo.overridingProperty)) {\n                prop.overridingProperty = propInfo.overridingProperty;\n            }\n            if (!_helpers__WEBPACK_IMPORTED_MODULE_2__[\"Helpers\"].isValueEmpty(propInfo.visibleIndex)) {\n                prop.visibleIndex = propInfo.visibleIndex;\n            }\n            if (!_helpers__WEBPACK_IMPORTED_MODULE_2__[\"Helpers\"].isValueEmpty(propInfo.showMode)) {\n                prop.showMode = propInfo.showMode;\n            }\n            if (!_helpers__WEBPACK_IMPORTED_MODULE_2__[\"Helpers\"].isValueEmpty(propInfo.maxValue)) {\n                prop.maxValue = propInfo.maxValue;\n            }\n            if (!_helpers__WEBPACK_IMPORTED_MODULE_2__[\"Helpers\"].isValueEmpty(propInfo.minValue)) {\n                prop.minValue = propInfo.minValue;\n            }\n            if (!_helpers__WEBPACK_IMPORTED_MODULE_2__[\"Helpers\"].isValueEmpty(propInfo.dataList)) {\n                prop.dataList = propInfo.dataList;\n            }\n            if (!_helpers__WEBPACK_IMPORTED_MODULE_2__[\"Helpers\"].isValueEmpty(propInfo.isDynamicChoices)) {\n                prop.isDynamicChoices = propInfo.isDynamicChoices;\n            }\n            if (!_helpers__WEBPACK_IMPORTED_MODULE_2__[\"Helpers\"].isValueEmpty(propInfo.isBindable)) {\n                prop.isBindable = propInfo.isBindable;\n            }\n            if (!_helpers__WEBPACK_IMPORTED_MODULE_2__[\"Helpers\"].isValueEmpty(propInfo.isUnique)) {\n                prop.isUnique = propInfo.isUnique;\n            }\n            if (!_helpers__WEBPACK_IMPORTED_MODULE_2__[\"Helpers\"].isValueEmpty(propInfo.uniqueProperty)) {\n                prop.uniquePropertyName = propInfo.uniqueProperty;\n            }\n            if (!_helpers__WEBPACK_IMPORTED_MODULE_2__[\"Helpers\"].isValueEmpty(propInfo.isArray)) {\n                prop.isArray = propInfo.isArray;\n            }\n            if (propInfo.visible === true || propInfo.visible === false) {\n                prop.visible = propInfo.visible;\n            }\n            if (!!propInfo.visibleIf) {\n                prop.visibleIf = propInfo.visibleIf;\n            }\n            if (!!propInfo.enableIf) {\n                prop.enableIf = propInfo.enableIf;\n            }\n            if (!!propInfo.onExecuteExpression) {\n                prop.onExecuteExpression = propInfo.onExecuteExpression;\n            }\n            if (!!propInfo.onPropertyEditorUpdate) {\n                prop.onPropertyEditorUpdate = propInfo.onPropertyEditorUpdate;\n            }\n            if (propInfo.readOnly === true) {\n                prop.readOnly = true;\n            }\n            if (propInfo.choices) {\n                var choicesFunc = typeof propInfo.choices === \"function\" ? propInfo.choices : null;\n                var choicesValue = typeof propInfo.choices !== \"function\" ? propInfo.choices : null;\n                prop.setChoices(choicesValue, choicesFunc);\n            }\n            if (!!propInfo.baseValue) {\n                prop.setBaseValue(propInfo.baseValue);\n            }\n            if (propInfo.onSerializeValue) {\n                prop.onSerializeValue = propInfo.onSerializeValue;\n            }\n            if (propInfo.onGetValue) {\n                prop.onGetValue = propInfo.onGetValue;\n            }\n            if (propInfo.onSetValue) {\n                prop.onSetValue = propInfo.onSetValue;\n            }\n            if (propInfo.onSettingValue) {\n                prop.onSettingValue = propInfo.onSettingValue;\n            }\n            if (propInfo.isLocalizable) {\n                propInfo.serializationProperty = \"loc\" + prop.name;\n            }\n            if (propInfo.serializationProperty) {\n                prop.serializationProperty = propInfo.serializationProperty;\n                var s;\n                if (prop.serializationProperty &&\n                    prop.serializationProperty.indexOf(\"loc\") == 0) {\n                    prop.isLocalizable = true;\n                }\n            }\n            if (propInfo.isLocalizable) {\n                prop.isLocalizable = propInfo.isLocalizable;\n            }\n            if (propInfo.className) {\n                prop.className = propInfo.className;\n            }\n            if (propInfo.baseClassName) {\n                prop.baseClassName = propInfo.baseClassName;\n                prop.isArray = true;\n            }\n            if (prop.isArray === true) {\n                prop.isArray = true;\n            }\n            if (propInfo.classNamePart) {\n                prop.classNamePart = propInfo.classNamePart;\n            }\n            if (propInfo.alternativeName) {\n                prop.alternativeName = propInfo.alternativeName;\n            }\n            if (propInfo.oldName) {\n                prop.oldName = propInfo.oldName;\n            }\n            if (propInfo.layout) {\n                prop.layout = propInfo.layout;\n            }\n            if (propInfo.version) {\n                prop.version = propInfo.version;\n            }\n            if (propInfo.dependsOn) {\n                this.addDependsOnProperties(prop, propInfo.dependsOn);\n            }\n        }\n        this.properties.push(prop);\n        if (isCustom && !this.isOverridedProp(prop.name)) {\n            prop.isCustom = true;\n            CustomPropertiesCollection.addProperty(this.name, prop);\n        }\n        return prop;\n    };\n    JsonMetadataClass.prototype.addDependsOnProperties = function (prop, dependsOn) {\n        if (Array.isArray(dependsOn)) {\n            for (var i = 0; i < dependsOn.length; i++) {\n                this.addDependsOnProperty(prop, dependsOn[i]);\n            }\n        }\n        else {\n            this.addDependsOnProperty(prop, dependsOn);\n        }\n    };\n    JsonMetadataClass.prototype.addDependsOnProperty = function (prop, dependsOn) {\n        var property = this.find(dependsOn);\n        if (!property) {\n            property = Serializer.findProperty(this.parentName, dependsOn);\n        }\n        if (!property)\n            return;\n        property.addDependedProperty(prop.name);\n    };\n    JsonMetadataClass.prototype.getIsPropertyNameRequired = function (propertyName) {\n        return (propertyName.length > 0 &&\n            propertyName[0] == JsonMetadataClass.requiredSymbol);\n    };\n    JsonMetadataClass.prototype.getPropertyName = function (propertyName) {\n        if (!this.getIsPropertyNameRequired(propertyName))\n            return propertyName;\n        propertyName = propertyName.slice(1);\n        return propertyName;\n    };\n    JsonMetadataClass.requiredSymbol = \"!\";\n    JsonMetadataClass.typeSymbol = \":\";\n    return JsonMetadataClass;\n}());\n\n/**\n * The metadata object. It contains object properties' runtime information and allows you to modify it.\n */\nvar JsonMetadata = /** @class */ (function () {\n    function JsonMetadata() {\n        this.classes = {};\n        this.alternativeNames = {};\n        this.childrenClasses = {};\n        this.dynamicPropsCache = {};\n    }\n    JsonMetadata.prototype.getObjPropertyValue = function (obj, name) {\n        if (this.isObjWrapper(obj) && this.isNeedUseObjWrapper(obj, name)) {\n            var orignalObj = obj.getOriginalObj();\n            var prop_1 = Serializer.findProperty(orignalObj.getType(), name);\n            if (!!prop_1)\n                return this.getObjPropertyValueCore(orignalObj, prop_1);\n        }\n        var prop = Serializer.findProperty(obj.getType(), name);\n        if (!prop)\n            return obj[name];\n        return this.getObjPropertyValueCore(obj, prop);\n    };\n    JsonMetadata.prototype.setObjPropertyValue = function (obj, name, val) {\n        if (obj[name] === val)\n            return;\n        if (!!obj[name] && !!obj[name].setJson) {\n            obj[name].setJson(val);\n        }\n        else {\n            if (Array.isArray(val)) {\n                var newVal = [];\n                for (var i = 0; i < val.length; i++)\n                    newVal.push(val[i]);\n                val = newVal;\n            }\n            obj[name] = val;\n        }\n    };\n    JsonMetadata.prototype.getObjPropertyValueCore = function (obj, prop) {\n        if (!prop.isSerializable)\n            return obj[prop.name];\n        if (prop.isLocalizable) {\n            if (prop.isArray)\n                return obj[prop.name];\n            if (!!prop.serializationProperty)\n                return obj[prop.serializationProperty].text;\n        }\n        return obj.getPropertyValue(prop.name);\n    };\n    JsonMetadata.prototype.isObjWrapper = function (obj) {\n        return !!obj.getOriginalObj && !!obj.getOriginalObj();\n    };\n    JsonMetadata.prototype.isNeedUseObjWrapper = function (obj, name) {\n        if (!obj.getDynamicProperties)\n            return true;\n        var props = obj.getDynamicProperties();\n        if (!Array.isArray(props))\n            return false;\n        for (var i = 0; i < props.length; i++) {\n            if (props[i].name === name)\n                return true;\n        }\n        return false;\n    };\n    JsonMetadata.prototype.addClass = function (name, properties, creator, parentName) {\n        if (creator === void 0) { creator = null; }\n        if (parentName === void 0) { parentName = null; }\n        name = name.toLowerCase();\n        var metaDataClass = new JsonMetadataClass(name, properties, creator, parentName);\n        this.classes[name] = metaDataClass;\n        if (parentName) {\n            parentName = parentName.toLowerCase();\n            var children = this.childrenClasses[parentName];\n            if (!children) {\n                this.childrenClasses[parentName] = [];\n            }\n            this.childrenClasses[parentName].push(metaDataClass);\n        }\n        return metaDataClass;\n    };\n    JsonMetadata.prototype.removeClass = function (name) {\n        var metaClass = this.findClass(name);\n        if (!metaClass)\n            return;\n        delete this.classes[metaClass.name];\n        if (!!metaClass.parentName) {\n            var index = this.childrenClasses[metaClass.parentName].indexOf(metaClass);\n            if (index > -1) {\n                this.childrenClasses[metaClass.parentName].splice(index, 1);\n            }\n        }\n    };\n    JsonMetadata.prototype.overrideClassCreatore = function (name, creator) {\n        this.overrideClassCreator(name, creator);\n    };\n    JsonMetadata.prototype.overrideClassCreator = function (name, creator) {\n        name = name.toLowerCase();\n        var metaDataClass = this.findClass(name);\n        if (metaDataClass) {\n            metaDataClass.creator = creator;\n        }\n    };\n    JsonMetadata.prototype.getProperties = function (className) {\n        var metaClass = this.findClass(className);\n        if (!metaClass)\n            return [];\n        return metaClass.getAllProperties();\n    };\n    JsonMetadata.prototype.getPropertiesByObj = function (obj) {\n        if (!obj || !obj.getType)\n            return [];\n        var props = this.getProperties(obj.getType());\n        var dynamicProps = this.getDynamicPropertiesByObj(obj);\n        return [].concat(props).concat(dynamicProps);\n    };\n    JsonMetadata.prototype.addDynamicPropertiesIntoObj = function (dest, src, props) {\n        var _this = this;\n        props.forEach(function (prop) {\n            _this.addDynamicPropertyIntoObj(dest, src, prop.name, false);\n            if (prop.serializationProperty) {\n                _this.addDynamicPropertyIntoObj(dest, src, prop.serializationProperty, true);\n            }\n            if (prop.alternativeName) {\n                _this.addDynamicPropertyIntoObj(dest, src, prop.alternativeName, false);\n            }\n        });\n    };\n    JsonMetadata.prototype.addDynamicPropertyIntoObj = function (dest, src, propName, isReadOnly) {\n        var desc = {\n            configurable: true,\n            get: function () {\n                return src[propName];\n            },\n        };\n        if (!isReadOnly) {\n            desc[\"set\"] = function (v) {\n                src[propName] = v;\n            };\n        }\n        Object.defineProperty(dest, propName, desc);\n    };\n    JsonMetadata.prototype.getDynamicPropertiesByObj = function (obj, dynamicType) {\n        if (dynamicType === void 0) { dynamicType = null; }\n        if (!obj || !obj.getType)\n            return [];\n        if (!!obj.getDynamicProperties)\n            return obj.getDynamicProperties();\n        if (!obj.getDynamicType && !dynamicType)\n            return [];\n        var dType = !!dynamicType ? dynamicType : obj.getDynamicType();\n        return this.getDynamicPropertiesByTypes(obj.getType(), dType);\n    };\n    JsonMetadata.prototype.getDynamicPropertiesByTypes = function (objType, dynamicType, invalidNames) {\n        if (!dynamicType)\n            return [];\n        var cacheType = dynamicType + \"-\" + objType;\n        if (this.dynamicPropsCache[cacheType])\n            return this.dynamicPropsCache[cacheType];\n        var dynamicProps = this.getProperties(dynamicType);\n        if (!dynamicProps || dynamicProps.length == 0)\n            return [];\n        var hash = {};\n        var props = this.getProperties(objType);\n        for (var i = 0; i < props.length; i++) {\n            hash[props[i].name] = props[i];\n        }\n        var res = [];\n        if (!invalidNames)\n            invalidNames = [];\n        for (var i_1 = 0; i_1 < dynamicProps.length; i_1++) {\n            var dProp = dynamicProps[i_1];\n            if (!hash[dProp.name] && invalidNames.indexOf(dProp.name) < 0) {\n                res.push(dProp);\n            }\n        }\n        this.dynamicPropsCache[cacheType] = res;\n        return res;\n    };\n    JsonMetadata.prototype.hasOriginalProperty = function (obj, propName) {\n        return !!this.getOriginalProperty(obj, propName);\n    };\n    JsonMetadata.prototype.getOriginalProperty = function (obj, propName) {\n        var res = this.findProperty(obj.getType(), propName);\n        if (!!res)\n            return res;\n        if (this.isObjWrapper(obj))\n            return this.findProperty(obj.getOriginalObj().getType(), propName);\n        return null;\n    };\n    JsonMetadata.prototype.getProperty = function (className, propertyName) {\n        var prop = this.findProperty(className, propertyName);\n        if (!prop)\n            return prop;\n        var classInfo = this.findClass(className);\n        if (prop.classInfo === classInfo)\n            return prop;\n        var newProp = new JsonObjectProperty(classInfo, prop.name, prop.isRequired);\n        newProp.mergeWith(prop);\n        newProp.isArray = prop.isArray;\n        classInfo.properties.push(newProp);\n        classInfo.resetAllProperties();\n        return newProp;\n    };\n    JsonMetadata.prototype.findProperty = function (className, propertyName) {\n        var cl = this.findClass(className);\n        return !!cl ? cl.findProperty(propertyName) : null;\n    };\n    JsonMetadata.prototype.findProperties = function (className, propertyNames) {\n        var result = new Array();\n        var cl = this.findClass(className);\n        if (!cl)\n            return result;\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = cl.findProperty(propertyNames[i]);\n            if (prop) {\n                result.push(prop);\n            }\n        }\n        return result;\n    };\n    JsonMetadata.prototype.getAllPropertiesByName = function (propertyName) {\n        var res = new Array();\n        var classes = this.getAllClasses();\n        for (var i = 0; i < classes.length; i++) {\n            var classInfo = this.findClass(classes[i]);\n            for (var j = 0; j < classInfo.properties.length; j++) {\n                if (classInfo.properties[j].name == propertyName) {\n                    res.push(classInfo.properties[j]);\n                    break;\n                }\n            }\n        }\n        return res;\n    };\n    JsonMetadata.prototype.getAllClasses = function () {\n        var res = new Array();\n        for (var name in this.classes) {\n            res.push(name);\n        }\n        return res;\n    };\n    JsonMetadata.prototype.createClass = function (name, json) {\n        if (json === void 0) { json = undefined; }\n        name = name.toLowerCase();\n        var metaDataClass = this.findClass(name);\n        if (!metaDataClass)\n            return null;\n        if (metaDataClass.creator)\n            return metaDataClass.creator(json);\n        var parentName = metaDataClass.parentName;\n        while (parentName) {\n            metaDataClass = this.findClass(parentName);\n            if (!metaDataClass)\n                return null;\n            parentName = metaDataClass.parentName;\n            if (metaDataClass.creator)\n                return this.createCustomType(name, metaDataClass.creator, json);\n        }\n        return null;\n    };\n    JsonMetadata.prototype.createCustomType = function (name, creator, json) {\n        if (json === void 0) { json = undefined; }\n        name = name.toLowerCase();\n        var res = creator(json);\n        var customTypeName = name;\n        var customTemplateName = res.getTemplate\n            ? res.getTemplate()\n            : res.getType();\n        res.getType = function () {\n            return customTypeName;\n        };\n        res.getTemplate = function () {\n            return customTemplateName;\n        };\n        CustomPropertiesCollection.createProperties(res);\n        return res;\n    };\n    JsonMetadata.prototype.getChildrenClasses = function (name, canBeCreated) {\n        if (canBeCreated === void 0) { canBeCreated = false; }\n        name = name.toLowerCase();\n        var result = [];\n        this.fillChildrenClasses(name, canBeCreated, result);\n        return result;\n    };\n    JsonMetadata.prototype.getRequiredProperties = function (name) {\n        var metaClass = this.findClass(name);\n        if (!metaClass)\n            return [];\n        var props = metaClass.getRequiredProperties();\n        var res = [];\n        for (var i = 0; i < props.length; i++) {\n            res.push(props[i].name);\n        }\n        return res;\n    };\n    JsonMetadata.prototype.addProperties = function (className, propertiesInfos) {\n        className = className.toLowerCase();\n        var metaDataClass = this.findClass(className);\n        for (var i = 0; i < propertiesInfos.length; i++) {\n            this.addCustomPropertyCore(metaDataClass, propertiesInfos[i]);\n        }\n    };\n    JsonMetadata.prototype.addProperty = function (className, propertyInfo) {\n        return this.addCustomPropertyCore(this.findClass(className), propertyInfo);\n    };\n    JsonMetadata.prototype.addCustomPropertyCore = function (metaDataClass, propertyInfo) {\n        if (!metaDataClass)\n            return null;\n        var property = metaDataClass.createProperty(propertyInfo, true);\n        if (property) {\n            this.clearDynamicPropsCache(metaDataClass);\n            metaDataClass.resetAllProperties();\n        }\n        return property;\n    };\n    JsonMetadata.prototype.removeProperty = function (className, propertyName) {\n        var metaDataClass = this.findClass(className);\n        if (!metaDataClass)\n            return false;\n        var property = metaDataClass.find(propertyName);\n        if (property) {\n            this.clearDynamicPropsCache(metaDataClass);\n            this.removePropertyFromClass(metaDataClass, property);\n            metaDataClass.resetAllProperties();\n            CustomPropertiesCollection.removeProperty(metaDataClass.name, propertyName);\n        }\n    };\n    JsonMetadata.prototype.clearDynamicPropsCache = function (metaDataClass) {\n        this.dynamicPropsCache = {};\n    };\n    JsonMetadata.prototype.removePropertyFromClass = function (metaDataClass, property) {\n        var index = metaDataClass.properties.indexOf(property);\n        if (index < 0)\n            return;\n        metaDataClass.properties.splice(index, 1);\n    };\n    JsonMetadata.prototype.fillChildrenClasses = function (name, canBeCreated, result) {\n        var children = this.childrenClasses[name];\n        if (!children)\n            return;\n        for (var i = 0; i < children.length; i++) {\n            if (!canBeCreated || children[i].creator) {\n                result.push(children[i]);\n            }\n            this.fillChildrenClasses(children[i].name, canBeCreated, result);\n        }\n    };\n    JsonMetadata.prototype.findClass = function (name) {\n        name = name.toLowerCase();\n        var res = this.classes[name];\n        if (!res) {\n            var newName = this.alternativeNames[name];\n            if (!!newName && newName != name)\n                return this.findClass(newName);\n        }\n        return res;\n    };\n    JsonMetadata.prototype.isDescendantOf = function (className, ancestorClassName) {\n        if (!className || !ancestorClassName) {\n            return false;\n        }\n        className = className.toLowerCase();\n        ancestorClassName = ancestorClassName.toLowerCase();\n        var class_ = this.findClass(className);\n        if (!class_) {\n            return false;\n        }\n        var parentClass = class_;\n        do {\n            if (parentClass.name === ancestorClassName) {\n                return true;\n            }\n            parentClass = this.classes[parentClass.parentName];\n        } while (!!parentClass);\n        return false;\n    };\n    JsonMetadata.prototype.addAlterNativeClassName = function (name, alternativeName) {\n        this.alternativeNames[alternativeName.toLowerCase()] = name.toLowerCase();\n    };\n    JsonMetadata.prototype.generateSchema = function (className) {\n        if (className === void 0) { className = undefined; }\n        if (!className)\n            className = \"survey\";\n        var classInfo = this.findClass(className);\n        if (!classInfo)\n            return null;\n        var res = {\n            $schema: \"http://json-schema.org/draft-07/schema#\",\n            title: \"SurveyJS Library json schema\",\n            type: \"object\",\n            properties: {},\n            definitions: { locstring: this.generateLocStrClass() },\n        };\n        this.generateSchemaProperties(classInfo, res, res.definitions, true);\n        return res;\n    };\n    JsonMetadata.prototype.generateLocStrClass = function () {\n        var props = {};\n        var locProp = Serializer.findProperty(\"survey\", \"locale\");\n        if (!!locProp) {\n            var choices = locProp.getChoices(null);\n            if (Array.isArray(choices)) {\n                if (choices.indexOf(\"en\") < 0) {\n                    choices.splice(0, 0, \"en\");\n                }\n                choices.splice(0, 0, \"default\");\n                choices.forEach(function (l) { if (!!l) {\n                    props[l] = { type: \"string\" };\n                } });\n            }\n        }\n        return {\n            $id: \"locstring\",\n            type: \"object\",\n            properties: props\n        };\n    };\n    JsonMetadata.prototype.generateSchemaProperties = function (classInfo, classSchema, schemaDef, isRoot) {\n        if (!classInfo)\n            return;\n        var schemaProperties = classSchema.properties;\n        var requiredProps = [];\n        if (classInfo.name === \"question\" || classInfo.name === \"panel\") {\n            schemaProperties.type = { type: \"string\" };\n            requiredProps.push(\"type\");\n        }\n        for (var i = 0; i < classInfo.properties.length; i++) {\n            var prop = classInfo.properties[i];\n            if (!!classInfo.parentName && !!Serializer.findProperty(classInfo.parentName, prop.name))\n                continue;\n            schemaProperties[prop.name] = this.generateSchemaProperty(prop, schemaDef, isRoot);\n            if (prop.isRequired)\n                requiredProps.push(prop.name);\n        }\n        if (requiredProps.length > 0) {\n            classSchema.required = requiredProps;\n        }\n    };\n    JsonMetadata.prototype.generateSchemaProperty = function (prop, schemaDef, isRoot) {\n        if (prop.isLocalizable) {\n            return { oneOf: [\n                    { \"type\": \"string\" },\n                    { \"$ref\": this.getChemeRefName(\"locstring\", isRoot) }\n                ] };\n        }\n        var propType = prop.schemaType();\n        var refType = prop.schemaRef();\n        var res = {};\n        if (!!propType) {\n            res.type = propType;\n        }\n        if (prop.hasChoices) {\n            var enumRes = prop.getChoices(null);\n            if (Array.isArray(enumRes) && enumRes.length > 0) {\n                res.enum = this.getChoicesValues(enumRes);\n            }\n        }\n        if (!!refType) {\n            if (propType === \"array\") {\n                if (prop.className === \"string\") {\n                    res.items = { type: prop.className };\n                }\n                else {\n                    res.items = { $ref: this.getChemeRefName(prop.className, isRoot) };\n                }\n            }\n            else {\n                res[\"$ref\"] = this.getChemeRefName(refType, isRoot);\n            }\n            this.generateChemaClass(prop.className, schemaDef, false);\n        }\n        if (!!prop.baseClassName) {\n            var usedClasses = this.getChildrenClasses(prop.baseClassName, true);\n            if (prop.baseClassName == \"question\") {\n                usedClasses.push(this.findClass(\"panel\"));\n            }\n            res.items = { anyOf: [] };\n            for (var i = 0; i < usedClasses.length; i++) {\n                var className = usedClasses[i].name;\n                res.items.anyOf.push({ $ref: this.getChemeRefName(className, isRoot) });\n                this.generateChemaClass(className, schemaDef, false);\n            }\n        }\n        return res;\n    };\n    JsonMetadata.prototype.getChemeRefName = function (className, isRoot) {\n        //Fix for #6486, according to https://niem.github.io/json/reference/json-schema/references/#:~:text=In%20a%20JSON%20schema%2C%20a,%2C%20an%20in%2Dschema%20reference\n        //Checked by https://www.jsonschemavalidator.net/\n        return isRoot ? \"#/definitions/\" + className : className;\n    };\n    JsonMetadata.prototype.generateChemaClass = function (className, schemaDef, isRoot) {\n        if (!!schemaDef[className])\n            return;\n        var classInfo = this.findClass(className);\n        if (!classInfo)\n            return;\n        var hasParent = !!classInfo.parentName && classInfo.parentName != \"base\";\n        if (hasParent) {\n            this.generateChemaClass(classInfo.parentName, schemaDef, isRoot);\n        }\n        var res = { type: \"object\", $id: className };\n        schemaDef[className] = res;\n        var chemaProps = { properties: {} };\n        this.generateSchemaProperties(classInfo, chemaProps, schemaDef, isRoot);\n        if (hasParent) {\n            res.allOf = [\n                { $ref: this.getChemeRefName(classInfo.parentName, isRoot) },\n                { properties: chemaProps.properties },\n            ];\n        }\n        else {\n            res.properties = chemaProps.properties;\n        }\n        if (Array.isArray(chemaProps.required)) {\n            res.required = chemaProps.required;\n        }\n    };\n    JsonMetadata.prototype.getChoicesValues = function (enumRes) {\n        var res = new Array();\n        enumRes.forEach(function (item) {\n            if (typeof item === \"object\" && item.value !== undefined) {\n                res.push(item.value);\n            }\n            else {\n                res.push(item);\n            }\n        });\n        return res;\n    };\n    return JsonMetadata;\n}());\n\nvar JsonError = /** @class */ (function () {\n    function JsonError(type, message) {\n        this.type = type;\n        this.message = message;\n        this.description = \"\";\n        this.at = -1;\n        this.end = -1;\n    }\n    JsonError.prototype.getFullDescription = function () {\n        return this.message + (this.description ? \"\\n\" + this.description : \"\");\n    };\n    return JsonError;\n}());\n\nvar JsonUnknownPropertyError = /** @class */ (function (_super) {\n    __extends(JsonUnknownPropertyError, _super);\n    function JsonUnknownPropertyError(propertyName, className) {\n        var _this = _super.call(this, \"unknownproperty\", \"Unknown property in class '\" + className + \"': '\" + propertyName + \"'.\") || this;\n        _this.propertyName = propertyName;\n        _this.className = className;\n        return _this;\n    }\n    return JsonUnknownPropertyError;\n}(JsonError));\n\nvar JsonMissingTypeErrorBase = /** @class */ (function (_super) {\n    __extends(JsonMissingTypeErrorBase, _super);\n    function JsonMissingTypeErrorBase(baseClassName, type, message) {\n        var _this = _super.call(this, type, message) || this;\n        _this.baseClassName = baseClassName;\n        _this.type = type;\n        _this.message = message;\n        return _this;\n    }\n    return JsonMissingTypeErrorBase;\n}(JsonError));\n\nvar JsonMissingTypeError = /** @class */ (function (_super) {\n    __extends(JsonMissingTypeError, _super);\n    function JsonMissingTypeError(propertyName, baseClassName) {\n        var _this = _super.call(this, baseClassName, \"missingtypeproperty\", \"The property type is missing in the object. Please take a look at property: '\" +\n            propertyName +\n            \"'.\") || this;\n        _this.propertyName = propertyName;\n        _this.baseClassName = baseClassName;\n        return _this;\n    }\n    return JsonMissingTypeError;\n}(JsonMissingTypeErrorBase));\n\nvar JsonIncorrectTypeError = /** @class */ (function (_super) {\n    __extends(JsonIncorrectTypeError, _super);\n    function JsonIncorrectTypeError(propertyName, baseClassName) {\n        var _this = _super.call(this, baseClassName, \"incorrecttypeproperty\", \"The property type is incorrect in the object. Please take a look at property: '\" +\n            propertyName +\n            \"'.\") || this;\n        _this.propertyName = propertyName;\n        _this.baseClassName = baseClassName;\n        return _this;\n    }\n    return JsonIncorrectTypeError;\n}(JsonMissingTypeErrorBase));\n\nvar JsonRequiredPropertyError = /** @class */ (function (_super) {\n    __extends(JsonRequiredPropertyError, _super);\n    function JsonRequiredPropertyError(propertyName, className) {\n        var _this = _super.call(this, \"requiredproperty\", \"The property '\" +\n            propertyName +\n            \"' is required in class '\" +\n            className +\n            \"'.\") || this;\n        _this.propertyName = propertyName;\n        _this.className = className;\n        return _this;\n    }\n    return JsonRequiredPropertyError;\n}(JsonError));\n\nvar JsonRequiredArrayPropertyError = /** @class */ (function (_super) {\n    __extends(JsonRequiredArrayPropertyError, _super);\n    function JsonRequiredArrayPropertyError(propertyName, className) {\n        var _this = _super.call(this, \"arrayproperty\", \"The property '\" + propertyName + \"' should be an array in '\" + className + \"'.\") || this;\n        _this.propertyName = propertyName;\n        _this.className = className;\n        return _this;\n    }\n    return JsonRequiredArrayPropertyError;\n}(JsonError));\n\nvar JsonIncorrectPropertyValueError = /** @class */ (function (_super) {\n    __extends(JsonIncorrectPropertyValueError, _super);\n    function JsonIncorrectPropertyValueError(property, value) {\n        var _this = _super.call(this, \"incorrectvalue\", \"The property value: '\" + value + \"' is incorrect for property '\" + property.name + \"'.\") || this;\n        _this.property = property;\n        _this.value = value;\n        return _this;\n    }\n    return JsonIncorrectPropertyValueError;\n}(JsonError));\n\nvar JsonObject = /** @class */ (function () {\n    function JsonObject() {\n        this.errors = new Array();\n        this.lightSerializing = false;\n    }\n    Object.defineProperty(JsonObject, \"metaData\", {\n        get: function () {\n            return JsonObject.metaDataValue;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    JsonObject.prototype.toJsonObject = function (obj, options) {\n        return this.toJsonObjectCore(obj, null, options);\n    };\n    JsonObject.prototype.toObject = function (jsonObj, obj, options) {\n        this.toObjectCore(jsonObj, obj, options);\n        var error = this.getRequiredError(obj, jsonObj);\n        if (!!error) {\n            this.addNewError(error, jsonObj, obj);\n        }\n    };\n    JsonObject.prototype.toObjectCore = function (jsonObj, obj, options) {\n        if (!jsonObj)\n            return;\n        var properties = null;\n        var objType = undefined;\n        var needAddErrors = true;\n        if (obj.getType) {\n            objType = obj.getType();\n            properties = Serializer.getProperties(objType);\n            needAddErrors =\n                !!objType && !Serializer.isDescendantOf(objType, \"itemvalue\");\n        }\n        if (!properties)\n            return;\n        if (obj.startLoadingFromJson) {\n            obj.startLoadingFromJson(jsonObj);\n        }\n        properties = this.addDynamicProperties(obj, jsonObj, properties);\n        this.options = options;\n        for (var key in jsonObj) {\n            if (key === JsonObject.typePropertyName)\n                continue;\n            if (key === JsonObject.positionPropertyName) {\n                obj[key] = jsonObj[key];\n                continue;\n            }\n            var property = this.findProperty(properties, key);\n            if (!property) {\n                if (needAddErrors) {\n                    this.addNewError(new JsonUnknownPropertyError(key.toString(), objType), jsonObj, obj);\n                }\n                continue;\n            }\n            this.valueToObj(jsonObj[key], obj, property, jsonObj, options);\n        }\n        this.options = undefined;\n        if (obj.endLoadingFromJson) {\n            obj.endLoadingFromJson();\n        }\n    };\n    JsonObject.prototype.toJsonObjectCore = function (obj, property, options) {\n        if (!obj || !obj.getType)\n            return obj;\n        if (typeof obj.getData === \"function\")\n            return obj.getData();\n        var result = {};\n        if (property != null && !property.className) {\n            result[JsonObject.typePropertyName] = property.getObjType(obj.getType());\n        }\n        var storeDefaults = options === true;\n        if (!options || options === true) {\n            options = {};\n        }\n        if (storeDefaults) {\n            options.storeDefaults = storeDefaults;\n        }\n        this.propertiesToJson(obj, Serializer.getProperties(obj.getType()), result, options);\n        this.propertiesToJson(obj, this.getDynamicProperties(obj), result, options);\n        return result;\n    };\n    JsonObject.prototype.getDynamicProperties = function (obj) {\n        return Serializer.getDynamicPropertiesByObj(obj);\n    };\n    JsonObject.prototype.addDynamicProperties = function (obj, jsonObj, props) {\n        if (!obj.getDynamicPropertyName && !obj.getDynamicProperties)\n            return props;\n        if (obj.getDynamicPropertyName) {\n            var dynamicPropName = obj.getDynamicPropertyName();\n            if (!dynamicPropName)\n                return props;\n            if (dynamicPropName && jsonObj[dynamicPropName]) {\n                obj[dynamicPropName] = jsonObj[dynamicPropName];\n            }\n        }\n        var dynamicProps = this.getDynamicProperties(obj);\n        return dynamicProps.length === 0 ? props : [].concat(props).concat(dynamicProps);\n    };\n    JsonObject.prototype.propertiesToJson = function (obj, properties, json, options) {\n        for (var i = 0; i < properties.length; i++) {\n            this.valueToJson(obj, json, properties[i], options);\n        }\n    };\n    JsonObject.prototype.valueToJson = function (obj, result, prop, options) {\n        if (!options)\n            options = {};\n        if (prop.isSerializable === false || (prop.isLightSerializable === false && this.lightSerializing))\n            return;\n        if (options.version && !prop.isAvailableInVersion(options.version))\n            return;\n        this.valueToJsonCore(obj, result, prop, options);\n    };\n    JsonObject.prototype.valueToJsonCore = function (obj, result, prop, options) {\n        var serProp = prop.getSerializedProperty(obj, options.version);\n        if (serProp && serProp !== prop) {\n            this.valueToJsonCore(obj, result, serProp, options);\n            return;\n        }\n        var value = prop.getSerializableValue(obj);\n        if (!options.storeDefaults && prop.isDefaultValueByObj(obj, value))\n            return;\n        if (this.isValueArray(value)) {\n            var arrValue = [];\n            for (var i = 0; i < value.length; i++) {\n                arrValue.push(this.toJsonObjectCore(value[i], prop, options));\n            }\n            value = arrValue.length > 0 ? arrValue : null;\n        }\n        else {\n            value = this.toJsonObjectCore(value, prop, options);\n        }\n        if (value === undefined || value === null)\n            return;\n        var name = prop.getSerializedName(options.version);\n        var hasValue = typeof obj[\"getPropertyValue\"] === \"function\" &&\n            obj[\"getPropertyValue\"](name, null) !== null;\n        if ((options.storeDefaults && hasValue) || !prop.isDefaultValueByObj(obj, value)) {\n            if (!Serializer.onSerializingProperty || !Serializer.onSerializingProperty(obj, prop, value, result)) {\n                result[name] = this.removePosOnValueToJson(prop, value);\n            }\n        }\n    };\n    JsonObject.prototype.valueToObj = function (value, obj, property, jsonObj, options) {\n        if (value === null || value === undefined)\n            return;\n        this.removePos(property, value);\n        if (property != null && property.hasToUseSetValue) {\n            property.setValue(obj, value, this);\n            return;\n        }\n        if (property.isArray && !Array.isArray(value) && !!value) {\n            value = [value];\n            var propName = !!jsonObj && property.alternativeName && !!jsonObj[property.alternativeName] ? property.alternativeName : property.name;\n            this.addNewError(new JsonRequiredArrayPropertyError(propName, obj.getType()), !!jsonObj ? jsonObj : value, obj);\n        }\n        if (this.isValueArray(value)) {\n            this.valueToArray(value, obj, property.name, property, options);\n            return;\n        }\n        var newObj = this.createNewObj(value, property);\n        if (newObj.newObj) {\n            this.toObjectCore(value, newObj.newObj, options);\n            value = newObj.newObj;\n        }\n        if (!newObj.error) {\n            if (property != null) {\n                property.setValue(obj, value, this);\n                if (!!options && options.validatePropertyValues) {\n                    if (!property.validateValue(value)) {\n                        this.addNewError(new JsonIncorrectPropertyValueError(property, value), jsonObj, obj);\n                    }\n                }\n            }\n            else {\n                obj[property.name] = value;\n            }\n        }\n    };\n    JsonObject.prototype.removePosOnValueToJson = function (property, value) {\n        if (!property.isCustom || !value)\n            return value;\n        this.removePosFromObj(value);\n        return value;\n    };\n    JsonObject.prototype.removePos = function (property, value) {\n        if (!property || !property.type || property.type.indexOf(\"value\") < 0)\n            return;\n        this.removePosFromObj(value);\n    };\n    JsonObject.prototype.removePosFromObj = function (obj) {\n        if (!obj)\n            return;\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                this.removePosFromObj(obj[i]);\n            }\n        }\n        if (typeof obj !== \"object\")\n            return;\n        if (!!obj[JsonObject.positionPropertyName]) {\n            delete obj[JsonObject.positionPropertyName];\n        }\n        for (var key in obj) {\n            this.removePosFromObj(obj[key]);\n        }\n    };\n    JsonObject.prototype.isValueArray = function (value) {\n        return value && Array.isArray(value);\n    };\n    JsonObject.prototype.createNewObj = function (value, property) {\n        var result = { newObj: null, error: null };\n        var className = this.getClassNameForNewObj(value, property);\n        result.newObj = className\n            ? Serializer.createClass(className, value)\n            : null;\n        result.error = this.checkNewObjectOnErrors(result.newObj, value, property, className);\n        return result;\n    };\n    JsonObject.prototype.getClassNameForNewObj = function (value, property) {\n        var res = property != null && property.className ? property.className : undefined;\n        if (!res) {\n            res = value[JsonObject.typePropertyName];\n        }\n        if (!res)\n            return res;\n        res = res.toLowerCase();\n        var classNamePart = property.classNamePart;\n        if (classNamePart && res.indexOf(classNamePart) < 0) {\n            res += classNamePart;\n        }\n        return res;\n    };\n    JsonObject.prototype.checkNewObjectOnErrors = function (newObj, value, property, className) {\n        var error = null;\n        if (newObj) {\n            error = this.getRequiredError(newObj, value);\n        }\n        else {\n            if (property.baseClassName) {\n                if (!className) {\n                    error = new JsonMissingTypeError(property.name, property.baseClassName);\n                }\n                else {\n                    error = new JsonIncorrectTypeError(property.name, property.baseClassName);\n                }\n            }\n        }\n        if (error) {\n            this.addNewError(error, value, newObj);\n        }\n        return error;\n    };\n    JsonObject.prototype.getRequiredError = function (obj, jsonValue) {\n        if (!obj.getType || typeof obj.getData === \"function\")\n            return null;\n        var metaClass = Serializer.findClass(obj.getType());\n        if (!metaClass)\n            return null;\n        var props = metaClass.getRequiredProperties();\n        if (!Array.isArray(props))\n            return null;\n        for (var i = 0; i < props.length; i++) {\n            var prop = props[i];\n            if (!_helpers__WEBPACK_IMPORTED_MODULE_2__[\"Helpers\"].isValueEmpty(prop.defaultValue))\n                continue;\n            if (!jsonValue[prop.name]) {\n                return new JsonRequiredPropertyError(prop.name, obj.getType());\n            }\n        }\n        return null;\n    };\n    JsonObject.prototype.addNewError = function (error, jsonObj, element) {\n        error.jsonObj = jsonObj;\n        error.element = element;\n        this.errors.push(error);\n        if (!jsonObj)\n            return;\n        var posObj = jsonObj[JsonObject.positionPropertyName];\n        if (!posObj)\n            return;\n        error.at = posObj.start;\n        error.end = posObj.end;\n    };\n    JsonObject.prototype.valueToArray = function (value, obj, key, property, options) {\n        if (obj[key] && !this.isValueArray(obj[key]))\n            return;\n        if (obj[key] && value.length > 0)\n            obj[key].splice(0, obj[key].length);\n        var valueRes = obj[key] ? obj[key] : [];\n        this.addValuesIntoArray(value, valueRes, property, options);\n        if (!obj[key])\n            obj[key] = valueRes;\n    };\n    JsonObject.prototype.addValuesIntoArray = function (value, result, property, options) {\n        for (var i = 0; i < value.length; i++) {\n            var newValue = this.createNewObj(value[i], property);\n            if (newValue.newObj) {\n                if (!!value[i].name) {\n                    newValue.newObj.name = value[i].name;\n                }\n                if (!!value[i].valueName) {\n                    newValue.newObj.valueName = value[i].valueName.toString();\n                }\n                result.push(newValue.newObj);\n                this.toObjectCore(value[i], newValue.newObj, options);\n            }\n            else {\n                if (!newValue.error) {\n                    result.push(value[i]);\n                }\n            }\n        }\n    };\n    JsonObject.prototype.findProperty = function (properties, key) {\n        if (!properties)\n            return null;\n        for (var i = 0; i < properties.length; i++) {\n            var prop = properties[i];\n            if (prop.name == key || prop.alternativeName == key)\n                return prop;\n        }\n        return null;\n    };\n    JsonObject.typePropertyName = \"type\";\n    JsonObject.positionPropertyName = \"pos\";\n    JsonObject.metaDataValue = new JsonMetadata();\n    return JsonObject;\n}());\n\n/**\n * An alias for the metadata object. It contains object properties' runtime information and allows you to modify it.\n * @see JsonMetadata\n */\nvar Serializer = JsonObject.metaData;\n\n\n/***/ }),\n\n/***/ \"./src/list.ts\":\n/*!*********************!*\\\n  !*** ./src/list.ts ***!\n  \\*********************/\n/*! exports provided: defaultListCss, ListModel */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_438437__) {\n\n\"use strict\";\n__nested_webpack_require_438437__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_438437__.d(__nested_webpack_exports__, \"defaultListCss\", function() { return defaultListCss; });\n/* harmony export (binding) */ __nested_webpack_require_438437__.d(__nested_webpack_exports__, \"ListModel\", function() { return ListModel; });\n/* harmony import */ var _jsonobject__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_438437__(/*! ./jsonobject */ \"./src/jsonobject.ts\");\n/* harmony import */ var _actions_container__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_438437__(/*! ./actions/container */ \"./src/actions/container.ts\");\n/* harmony import */ var _actions_action__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_438437__(/*! ./actions/action */ \"./src/actions/action.ts\");\n/* harmony import */ var _utils_cssClassBuilder__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_438437__(/*! ./utils/cssClassBuilder */ \"./src/utils/cssClassBuilder.ts\");\n/* harmony import */ var _element_helper__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_438437__(/*! ./element-helper */ \"./src/element-helper.ts\");\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_438437__(/*! ./utils/utils */ \"./src/utils/utils.ts\");\n/* harmony import */ var _settings__WEBPACK_IMPORTED_MODULE_6__ = __nested_webpack_require_438437__(/*! ./settings */ \"./src/settings.ts\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = ( false) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n\n\n\n\n\n\nvar defaultListCss = {\n    root: \"sv-list__container\",\n    item: \"sv-list__item\",\n    searchClearButtonIcon: \"sv-list__filter-clear-button\",\n    loadingIndicator: \"sv-list__loading-indicator\",\n    itemSelected: \"sv-list__item--selected\",\n    itemWithIcon: \"sv-list__item--with-icon\",\n    itemDisabled: \"sv-list__item--disabled\",\n    itemFocused: \"sv-list__item--focused\",\n    itemTextWrap: \"sv-list__item-text--wrap\",\n    itemIcon: \"sv-list__item-icon\",\n    itemSeparator: \"sv-list__item-separator\",\n    itemBody: \"sv-list__item-body\",\n    itemsContainer: \"sv-list\",\n    itemsContainerFiltering: \"sv-list--filtering\",\n    filter: \"sv-list__filter\",\n    filterIcon: \"sv-list__filter-icon\",\n    filterInput: \"sv-list__input\",\n    emptyContainer: \"sv-list__empty-container\",\n    emptyText: \"sv-list__empty-text\"\n};\nvar ListModel = /** @class */ (function (_super) {\n    __extends(ListModel, _super);\n    function ListModel(items, onSelectionChanged, allowSelection, selectedItem, onFilterStringChangedCallback, elementId) {\n        var _this = _super.call(this) || this;\n        _this.onSelectionChanged = onSelectionChanged;\n        _this.allowSelection = allowSelection;\n        _this.onFilterStringChangedCallback = onFilterStringChangedCallback;\n        _this.elementId = elementId;\n        _this.onItemClick = function (itemValue) {\n            if (_this.isItemDisabled(itemValue)) {\n                return;\n            }\n            _this.isExpanded = false;\n            if (_this.allowSelection) {\n                _this.selectedItem = itemValue;\n            }\n            if (!!_this.onSelectionChanged) {\n                _this.onSelectionChanged(itemValue);\n            }\n        };\n        _this.isItemDisabled = function (itemValue) {\n            return itemValue.enabled !== undefined && !itemValue.enabled;\n        };\n        _this.isItemSelected = function (itemValue) {\n            return _this.areSameItems(_this.selectedItem, itemValue);\n        };\n        _this.isItemFocused = function (itemValue) {\n            return _this.areSameItems(_this.focusedItem, itemValue);\n        };\n        _this.getListClass = function () {\n            return new _utils_cssClassBuilder__WEBPACK_IMPORTED_MODULE_3__[\"CssClassBuilder\"]()\n                .append(_this.cssClasses.itemsContainer)\n                .append(_this.cssClasses.itemsContainerFiltering, !!_this.filterString && _this.visibleActions.length !== _this.visibleItems.length)\n                .toString();\n        };\n        _this.getItemClass = function (itemValue) {\n            return new _utils_cssClassBuilder__WEBPACK_IMPORTED_MODULE_3__[\"CssClassBuilder\"]()\n                .append(_this.cssClasses.item)\n                .append(_this.cssClasses.itemWithIcon, !!itemValue.iconName)\n                .append(_this.cssClasses.itemDisabled, _this.isItemDisabled(itemValue))\n                .append(_this.cssClasses.itemFocused, _this.isItemFocused(itemValue))\n                .append(_this.cssClasses.itemSelected, _this.isItemSelected(itemValue))\n                .append(_this.cssClasses.itemTextWrap, _this.textWrapEnabled)\n                .append(itemValue.css)\n                .toString();\n        };\n        _this.getItemIndent = function (itemValue) {\n            var level = itemValue.level || 0;\n            return (level + 1) * ListModel.INDENT + \"px\";\n        };\n        _this.setItems(items);\n        _this.selectedItem = selectedItem;\n        return _this;\n    }\n    ListModel.prototype.hasText = function (item, filterStringInLow) {\n        if (!filterStringInLow)\n            return true;\n        var text = item.title || \"\";\n        if (this.onTextSearchCallback)\n            return this.onTextSearchCallback(item, filterStringInLow);\n        var textInLow = text.toLocaleLowerCase();\n        textInLow = _settings__WEBPACK_IMPORTED_MODULE_6__[\"settings\"].comparator.normalizeTextCallback(textInLow, \"filter\");\n        return textInLow.indexOf(filterStringInLow.toLocaleLowerCase()) > -1;\n    };\n    ListModel.prototype.isItemVisible = function (item) {\n        return item.visible && (!this.shouldProcessFilter || this.hasText(item, this.filterString));\n    };\n    Object.defineProperty(ListModel.prototype, \"visibleItems\", {\n        get: function () {\n            var _this = this;\n            return this.visibleActions.filter(function (item) { return _this.isItemVisible(item); });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ListModel.prototype, \"shouldProcessFilter\", {\n        get: function () {\n            return !this.onFilterStringChangedCallback;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ListModel.prototype.onFilterStringChanged = function (text) {\n        var _this = this;\n        if (!!this.onFilterStringChangedCallback) {\n            this.onFilterStringChangedCallback(text);\n        }\n        this.isEmpty = this.renderedActions.filter(function (action) { return _this.isItemVisible(action); }).length === 0;\n    };\n    ListModel.prototype.scrollToItem = function (selector, ms) {\n        var _this = this;\n        if (ms === void 0) { ms = 0; }\n        setTimeout(function () {\n            if (!_this.listContainerHtmlElement)\n                return;\n            var item = _this.listContainerHtmlElement.querySelector(\".\" + selector);\n            if (item) {\n                setTimeout(function () {\n                    item.scrollIntoView({ behavior: \"smooth\", block: \"nearest\", inline: \"start\" });\n                }, ms);\n            }\n        }, ms);\n    };\n    ListModel.prototype.setOnFilterStringChangedCallback = function (callback) {\n        this.onFilterStringChangedCallback = callback;\n    };\n    ListModel.prototype.setOnTextSearchCallback = function (callback) {\n        this.onTextSearchCallback = callback;\n    };\n    ListModel.prototype.setItems = function (items, sortByVisibleIndex) {\n        var _this = this;\n        if (sortByVisibleIndex === void 0) { sortByVisibleIndex = true; }\n        _super.prototype.setItems.call(this, items, sortByVisibleIndex);\n        if (this.elementId) {\n            this.renderedActions.forEach(function (action) { action.elementId = _this.elementId + action.id; });\n        }\n        if (!this.isAllDataLoaded && !!this.actions.length) {\n            this.actions.push(this.loadingIndicator);\n        }\n    };\n    ListModel.prototype.onSet = function () {\n        this.showFilter = this.searchEnabled && (this.forceShowFilter || (this.actions || []).length > ListModel.MINELEMENTCOUNT);\n        _super.prototype.onSet.call(this);\n    };\n    ListModel.prototype.getDefaultCssClasses = function () {\n        return defaultListCss;\n    };\n    ListModel.prototype.areSameItems = function (item1, item2) {\n        if (!!this.areSameItemsCallback)\n            return this.areSameItemsCallback(item1, item2);\n        return !!item1 && !!item2 && item1.id == item2.id;\n    };\n    Object.defineProperty(ListModel.prototype, \"filterStringPlaceholder\", {\n        get: function () {\n            return this.getLocalizationString(\"filterStringPlaceholder\");\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ListModel.prototype, \"emptyMessage\", {\n        get: function () {\n            return this.isAllDataLoaded ? this.getLocalizationString(\"emptyMessage\") : this.loadingText;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ListModel.prototype, \"scrollableContainer\", {\n        get: function () {\n            return this.listContainerHtmlElement.querySelector(\".\" + this.getDefaultCssClasses().itemsContainer);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ListModel.prototype, \"loadingText\", {\n        get: function () {\n            return this.getLocalizationString(\"loadingFile\");\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ListModel.prototype, \"loadingIndicator\", {\n        get: function () {\n            if (!this.loadingIndicatorValue) {\n                this.loadingIndicatorValue = (new _actions_action__WEBPACK_IMPORTED_MODULE_2__[\"Action\"]({\n                    id: \"loadingIndicator\",\n                    title: this.loadingText,\n                    action: function () { },\n                    css: this.cssClasses.loadingIndicator\n                }));\n            }\n            return this.loadingIndicatorValue;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ListModel.prototype.goToItems = function (event) {\n        if (event.key === \"ArrowDown\" || event.keyCode === 40) {\n            var currentElement = event.target.parentElement;\n            var listElement = currentElement.parentElement.querySelector(\"ul\");\n            var firstChild = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_5__[\"getFirstVisibleChild\"])(listElement);\n            if (!!listElement && !!firstChild) {\n                _element_helper__WEBPACK_IMPORTED_MODULE_4__[\"ElementHelper\"].focusElement(firstChild);\n                event.preventDefault();\n            }\n        }\n    };\n    ListModel.prototype.onMouseMove = function (event) {\n        this.resetFocusedItem();\n    };\n    ListModel.prototype.onKeyDown = function (event) {\n        var currentElement = event.target;\n        if (event.key === \"ArrowDown\" || event.keyCode === 40) {\n            _element_helper__WEBPACK_IMPORTED_MODULE_4__[\"ElementHelper\"].focusElement(_element_helper__WEBPACK_IMPORTED_MODULE_4__[\"ElementHelper\"].getNextElementPreorder(currentElement));\n            event.preventDefault();\n        }\n        else if (event.key === \"ArrowUp\" || event.keyCode === 38) {\n            _element_helper__WEBPACK_IMPORTED_MODULE_4__[\"ElementHelper\"].focusElement(_element_helper__WEBPACK_IMPORTED_MODULE_4__[\"ElementHelper\"].getNextElementPostorder(currentElement));\n            event.preventDefault();\n        }\n    };\n    ListModel.prototype.onPointerDown = function (event, item) { };\n    ListModel.prototype.refresh = function () {\n        this.filterString = \"\";\n        this.resetFocusedItem();\n    };\n    ListModel.prototype.onClickSearchClearButton = function (event) {\n        event.currentTarget.parentElement.querySelector(\"input\").focus();\n        this.refresh();\n    };\n    ListModel.prototype.resetFocusedItem = function () {\n        this.focusedItem = undefined;\n    };\n    ListModel.prototype.focusFirstVisibleItem = function () {\n        this.focusedItem = this.visibleItems[0];\n    };\n    ListModel.prototype.focusLastVisibleItem = function () {\n        this.focusedItem = this.visibleItems[this.visibleItems.length - 1];\n    };\n    ListModel.prototype.initFocusedItem = function () {\n        var _this = this;\n        this.focusedItem = this.visibleItems.filter(function (item) { return item.visible && _this.isItemSelected(item); })[0];\n        if (!this.focusedItem) {\n            this.focusFirstVisibleItem();\n        }\n    };\n    ListModel.prototype.focusNextVisibleItem = function () {\n        if (!this.focusedItem) {\n            this.initFocusedItem();\n        }\n        else {\n            var items = this.visibleItems;\n            var currentFocusedItemIndex = items.indexOf(this.focusedItem);\n            var nextItem = items[currentFocusedItemIndex + 1];\n            if (nextItem) {\n                this.focusedItem = nextItem;\n            }\n            else {\n                this.focusFirstVisibleItem();\n            }\n        }\n    };\n    ListModel.prototype.focusPrevVisibleItem = function () {\n        if (!this.focusedItem) {\n            this.initFocusedItem();\n        }\n        else {\n            var items = this.visibleItems;\n            var currentFocusedItemIndex = items.indexOf(this.focusedItem);\n            var prevItem = items[currentFocusedItemIndex - 1];\n            if (prevItem) {\n                this.focusedItem = prevItem;\n            }\n            else {\n                this.focusLastVisibleItem();\n            }\n        }\n    };\n    ListModel.prototype.selectFocusedItem = function () {\n        !!this.focusedItem && this.onItemClick(this.focusedItem);\n    };\n    ListModel.prototype.initListContainerHtmlElement = function (htmlElement) {\n        this.listContainerHtmlElement = htmlElement;\n    };\n    ListModel.prototype.onLastItemRended = function (item) {\n        if (this.isAllDataLoaded)\n            return;\n        if (item === this.actions[this.actions.length - 1] && !!this.listContainerHtmlElement) {\n            this.hasVerticalScroller = _element_helper__WEBPACK_IMPORTED_MODULE_4__[\"ElementHelper\"].hasVerticalScroller(this.scrollableContainer);\n        }\n    };\n    ListModel.prototype.scrollToFocusedItem = function () {\n        this.scrollToItem(this.getDefaultCssClasses().itemFocused);\n    };\n    ListModel.prototype.scrollToSelectedItem = function () {\n        this.scrollToItem(this.getDefaultCssClasses().itemSelected, 110);\n    };\n    ListModel.prototype.addScrollEventListener = function (handler) {\n        if (!!handler) {\n            this.scrollHandler = handler;\n        }\n        if (!!this.scrollHandler) {\n            this.scrollableContainer.addEventListener(\"scroll\", this.scrollHandler);\n        }\n    };\n    ListModel.prototype.removeScrollEventListener = function () {\n        if (!!this.scrollHandler) {\n            this.scrollableContainer.removeEventListener(\"scroll\", this.scrollHandler);\n        }\n    };\n    ListModel.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        if (!!this.loadingIndicatorValue) {\n            this.loadingIndicatorValue.dispose();\n        }\n        this.listContainerHtmlElement = undefined;\n    };\n    ListModel.INDENT = 16;\n    ListModel.MINELEMENTCOUNT = 10;\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_0__[\"property\"])({\n            defaultValue: true,\n            onSet: function (newValue, target) {\n                target.onSet();\n            }\n        })\n    ], ListModel.prototype, \"searchEnabled\", void 0);\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_0__[\"property\"])({ defaultValue: false })\n    ], ListModel.prototype, \"showFilter\", void 0);\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_0__[\"property\"])({ defaultValue: false })\n    ], ListModel.prototype, \"forceShowFilter\", void 0);\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_0__[\"property\"])({ defaultValue: false })\n    ], ListModel.prototype, \"isExpanded\", void 0);\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_0__[\"property\"])({})\n    ], ListModel.prototype, \"selectedItem\", void 0);\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_0__[\"property\"])()\n    ], ListModel.prototype, \"focusedItem\", void 0);\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_0__[\"property\"])({\n            onSet: function (_, target) {\n                target.onFilterStringChanged(target.filterString);\n            }\n        })\n    ], ListModel.prototype, \"filterString\", void 0);\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_0__[\"property\"])({ defaultValue: false })\n    ], ListModel.prototype, \"hasVerticalScroller\", void 0);\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_0__[\"property\"])({ defaultValue: true })\n    ], ListModel.prototype, \"isAllDataLoaded\", void 0);\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_0__[\"property\"])({ defaultValue: false })\n    ], ListModel.prototype, \"showSearchClearButton\", void 0);\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_0__[\"property\"])({ defaultValue: true })\n    ], ListModel.prototype, \"renderElements\", void 0);\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_0__[\"property\"])({ defaultValue: false })\n    ], ListModel.prototype, \"textWrapEnabled\", void 0);\n    return ListModel;\n}(_actions_container__WEBPACK_IMPORTED_MODULE_1__[\"ActionContainer\"]));\n\n\n\n/***/ }),\n\n/***/ \"./src/localizablestring.ts\":\n/*!**********************************!*\\\n  !*** ./src/localizablestring.ts ***!\n  \\**********************************/\n/*! exports provided: LocalizableString, LocalizableStrings */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_457429__) {\n\n\"use strict\";\n__nested_webpack_require_457429__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_457429__.d(__nested_webpack_exports__, \"LocalizableString\", function() { return LocalizableString; });\n/* harmony export (binding) */ __nested_webpack_require_457429__.d(__nested_webpack_exports__, \"LocalizableStrings\", function() { return LocalizableStrings; });\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_457429__(/*! ./helpers */ \"./src/helpers.ts\");\n/* harmony import */ var _surveyStrings__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_457429__(/*! ./surveyStrings */ \"./src/surveyStrings.ts\");\n/* harmony import */ var _settings__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_457429__(/*! ./settings */ \"./src/settings.ts\");\n/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_457429__(/*! ./base */ \"./src/base.ts\");\n/* harmony import */ var _jsonobject__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_457429__(/*! ./jsonobject */ \"./src/jsonobject.ts\");\n/* harmony import */ var _survey_element__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_457429__(/*! ./survey-element */ \"./src/survey-element.ts\");\n\n\n\n\n\n\n/**\n * The class represents the string that supports multi-languages and markdown.\n * It uses in all objects where support for multi-languages and markdown is required.\n */\nvar LocalizableString = /** @class */ (function () {\n    function LocalizableString(owner, useMarkdown, name) {\n        if (useMarkdown === void 0) { useMarkdown = false; }\n        var _a;\n        this.owner = owner;\n        this.useMarkdown = useMarkdown;\n        this.name = name;\n        this.values = {};\n        this.htmlValues = {};\n        this._allowLineBreaks = false;\n        this.onStringChanged = new _base__WEBPACK_IMPORTED_MODULE_3__[\"EventBase\"]();\n        if (owner instanceof _survey_element__WEBPACK_IMPORTED_MODULE_5__[\"SurveyElementCore\"]) {\n            this._allowLineBreaks = ((_a = _jsonobject__WEBPACK_IMPORTED_MODULE_4__[\"Serializer\"].findProperty(owner.getType(), name)) === null || _a === void 0 ? void 0 : _a.type) == \"text\";\n        }\n        this.onCreating();\n    }\n    Object.defineProperty(LocalizableString, \"defaultLocale\", {\n        get: function () {\n            return _settings__WEBPACK_IMPORTED_MODULE_2__[\"settings\"].localization.defaultLocaleName;\n        },\n        set: function (val) {\n            _settings__WEBPACK_IMPORTED_MODULE_2__[\"settings\"].localization.defaultLocaleName = val;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(LocalizableString.prototype, \"localizationName\", {\n        get: function () {\n            return this._localizationName;\n        },\n        set: function (val) {\n            if (this._localizationName != val) {\n                this._localizationName = val;\n                this.strChanged();\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(LocalizableString.prototype, \"allowLineBreaks\", {\n        get: function () {\n            return this._allowLineBreaks;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    LocalizableString.prototype.getIsMultiple = function () { return false; };\n    Object.defineProperty(LocalizableString.prototype, \"locale\", {\n        get: function () {\n            if (this.owner && this.owner.getLocale) {\n                var res = this.owner.getLocale();\n                if (!!res || !this.sharedData)\n                    return res;\n            }\n            if (!!this.sharedData)\n                return this.sharedData.locale;\n            return \"\";\n        },\n        enumerable: false,\n        configurable: true\n    });\n    LocalizableString.prototype.strChanged = function () {\n        this.searchableText = undefined;\n        if (this.renderedText === undefined)\n            return;\n        this.calculatedTextValue = this.calcText();\n        if (this.renderedText !== this.calculatedTextValue) {\n            this.renderedText = undefined;\n            this.calculatedTextValue = undefined;\n        }\n        this.htmlValues = {};\n        this.onChanged();\n        this.onStringChanged.fire(this, {});\n    };\n    Object.defineProperty(LocalizableString.prototype, \"text\", {\n        get: function () {\n            return this.pureText;\n        },\n        set: function (value) {\n            this.setLocaleText(this.locale, value);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(LocalizableString.prototype, \"calculatedText\", {\n        get: function () {\n            this.renderedText =\n                this.calculatedTextValue !== undefined\n                    ? this.calculatedTextValue\n                    : this.calcText();\n            this.calculatedTextValue = undefined;\n            return this.renderedText;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    LocalizableString.prototype.calcText = function () {\n        var res = this.pureText;\n        if (res &&\n            this.owner &&\n            this.owner.getProcessedText &&\n            res.indexOf(\"{\") > -1) {\n            res = this.owner.getProcessedText(res);\n        }\n        if (this.onGetTextCallback)\n            res = this.onGetTextCallback(res);\n        return res;\n    };\n    Object.defineProperty(LocalizableString.prototype, \"pureText\", {\n        get: function () {\n            var loc = this.locale;\n            if (!loc)\n                loc = this.defaultLoc;\n            var res = this.getValue(loc);\n            if (this.isValueEmpty(res) && loc === this.defaultLoc) {\n                res = this.getValue(_surveyStrings__WEBPACK_IMPORTED_MODULE_1__[\"surveyLocalization\"].defaultLocale);\n            }\n            if (this.isValueEmpty(res)) {\n                var dialect = this.getRootDialect(loc);\n                if (!!dialect) {\n                    res = this.getValue(dialect);\n                }\n            }\n            if (this.isValueEmpty(res) && loc !== this.defaultLoc) {\n                res = this.getValue(this.defaultLoc);\n            }\n            if (this.isValueEmpty(res) && !!this.getLocalizationName()) {\n                res = this.getLocalizationStr();\n                if (!!this.onGetLocalizationTextCallback) {\n                    res = this.onGetLocalizationTextCallback(res);\n                }\n            }\n            if (!res)\n                res = this.defaultValue || \"\";\n            return res;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    LocalizableString.prototype.getRootDialect = function (loc) {\n        if (!loc)\n            return loc;\n        var index = loc.indexOf(\"-\");\n        return index > -1 ? loc.substring(0, index) : \"\";\n    };\n    LocalizableString.prototype.getLocalizationName = function () {\n        return !!this.sharedData ? this.sharedData.localizationName : this.localizationName;\n    };\n    LocalizableString.prototype.getLocalizationStr = function () {\n        var name = this.getLocalizationName();\n        return !!name ? _surveyStrings__WEBPACK_IMPORTED_MODULE_1__[\"surveyLocalization\"].getString(name, this.locale) : \"\";\n    };\n    Object.defineProperty(LocalizableString.prototype, \"hasHtml\", {\n        get: function () {\n            return this.hasHtmlValue();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(LocalizableString.prototype, \"html\", {\n        get: function () {\n            if (!this.hasHtml)\n                return \"\";\n            return this.getHtmlValue();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(LocalizableString.prototype, \"isEmpty\", {\n        get: function () {\n            return this.getValuesKeys().length == 0;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(LocalizableString.prototype, \"textOrHtml\", {\n        get: function () {\n            return this.hasHtml ? this.getHtmlValue() : this.calculatedText;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(LocalizableString.prototype, \"renderedHtml\", {\n        get: function () {\n            return this.textOrHtml;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    LocalizableString.prototype.getLocaleText = function (loc) {\n        var res = this.getLocaleTextCore(loc);\n        return res ? res : \"\";\n    };\n    LocalizableString.prototype.getLocaleTextCore = function (loc) {\n        if (!loc)\n            loc = this.defaultLoc;\n        return this.getValue(loc);\n    };\n    LocalizableString.prototype.isLocaleTextEqualsWithDefault = function (loc, val) {\n        var res = this.getLocaleTextCore(loc);\n        if (res === val)\n            return true;\n        return this.isValueEmpty(res) && this.isValueEmpty(val);\n    };\n    LocalizableString.prototype.clear = function () {\n        this.setJson(undefined);\n    };\n    LocalizableString.prototype.clearLocale = function (loc) {\n        this.setLocaleText(loc, undefined);\n    };\n    LocalizableString.prototype.setLocaleText = function (loc, value) {\n        loc = this.getValueLoc(loc);\n        if (!this.storeDefaultText && this.isLocaleTextEqualsWithDefault(loc, value)) {\n            if (!this.isValueEmpty(value) || !!loc && loc !== this.defaultLoc)\n                return;\n            var dl = _surveyStrings__WEBPACK_IMPORTED_MODULE_1__[\"surveyLocalization\"].defaultLocale;\n            var oldValue_1 = this.getValue(dl);\n            if (!!dl && !this.isValueEmpty(oldValue_1)) {\n                this.setValue(dl, value);\n                this.fireStrChanged(dl, oldValue_1);\n            }\n            return;\n        }\n        if (!_settings__WEBPACK_IMPORTED_MODULE_2__[\"settings\"].localization.storeDuplicatedTranslations &&\n            !this.isValueEmpty(value) && loc && loc != this.defaultLoc &&\n            !this.getValue(loc) &&\n            value == this.getLocaleText(this.defaultLoc))\n            return;\n        var curLoc = this.curLocale;\n        if (!loc)\n            loc = this.defaultLoc;\n        var oldValue = this.onStrChanged && loc === curLoc ? this.pureText : undefined;\n        delete this.htmlValues[loc];\n        if (this.isValueEmpty(value)) {\n            this.deleteValue(loc);\n        }\n        else {\n            if (typeof value === \"string\") {\n                if (this.canRemoveLocValue(loc, value)) {\n                    this.setLocaleText(loc, null);\n                }\n                else {\n                    this.setValue(loc, value);\n                    if (loc == this.defaultLoc) {\n                        this.deleteValuesEqualsToDefault(value);\n                    }\n                }\n            }\n        }\n        this.fireStrChanged(loc, oldValue);\n    };\n    LocalizableString.prototype.isValueEmpty = function (val) {\n        if (val === undefined || val === null)\n            return true;\n        if (this.localizationName)\n            return false;\n        return val === \"\";\n    };\n    Object.defineProperty(LocalizableString.prototype, \"curLocale\", {\n        get: function () {\n            return !!this.locale ? this.locale : this.defaultLoc;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    LocalizableString.prototype.canRemoveLocValue = function (loc, val) {\n        if (_settings__WEBPACK_IMPORTED_MODULE_2__[\"settings\"].localization.storeDuplicatedTranslations)\n            return false;\n        if (loc === this.defaultLoc)\n            return false;\n        var dialect = this.getRootDialect(loc);\n        if (!!dialect) {\n            var dialectVal = this.getLocaleText(dialect);\n            if (!!dialectVal)\n                return dialectVal == val;\n            return this.canRemoveLocValue(dialect, val);\n        }\n        else {\n            return val == this.getLocaleText(this.defaultLoc);\n        }\n    };\n    LocalizableString.prototype.fireStrChanged = function (loc, oldValue) {\n        this.strChanged();\n        if (!this.onStrChanged)\n            return;\n        var value = this.pureText;\n        if (loc !== this.curLocale || oldValue !== value) {\n            this.onStrChanged(oldValue, value);\n        }\n    };\n    LocalizableString.prototype.hasNonDefaultText = function () {\n        var keys = this.getValuesKeys();\n        if (keys.length == 0)\n            return false;\n        return keys.length > 1 || keys[0] != this.defaultLoc;\n    };\n    LocalizableString.prototype.getLocales = function () {\n        var keys = this.getValuesKeys();\n        if (keys.length == 0)\n            return [];\n        return keys;\n    };\n    LocalizableString.prototype.getJson = function () {\n        if (!!this.sharedData)\n            return this.sharedData.getJson();\n        var keys = this.getValuesKeys();\n        if (keys.length == 0)\n            return null;\n        if (keys.length == 1 &&\n            keys[0] == _settings__WEBPACK_IMPORTED_MODULE_2__[\"settings\"].localization.defaultLocaleName &&\n            !_settings__WEBPACK_IMPORTED_MODULE_2__[\"settings\"].serialization.localizableStringSerializeAsObject)\n            return this.values[keys[0]];\n        var res = {};\n        for (var key in this.values) {\n            res[key] = this.values[key];\n        }\n        return res;\n    };\n    LocalizableString.prototype.setJson = function (value) {\n        if (!!this.sharedData) {\n            this.sharedData.setJson(value);\n            return;\n        }\n        this.values = {};\n        this.htmlValues = {};\n        if (value === null || value === undefined)\n            return;\n        if (typeof value === \"string\") {\n            this.setLocaleText(null, value);\n        }\n        else {\n            for (var key in value) {\n                this.setLocaleText(key, value[key]);\n            }\n        }\n        this.strChanged();\n    };\n    Object.defineProperty(LocalizableString.prototype, \"renderAs\", {\n        get: function () {\n            if (!this.owner || typeof this.owner.getRenderer !== \"function\") {\n                return LocalizableString.defaultRenderer;\n            }\n            return this.owner.getRenderer(this.name) || LocalizableString.defaultRenderer;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(LocalizableString.prototype, \"renderAsData\", {\n        get: function () {\n            if (!this.owner || typeof this.owner.getRendererContext !== \"function\") {\n                return this;\n            }\n            return this.owner.getRendererContext(this) || this;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    LocalizableString.prototype.equals = function (obj) {\n        if (!!this.sharedData)\n            return this.sharedData.equals(obj);\n        if (!obj || !obj.values)\n            return false;\n        return _helpers__WEBPACK_IMPORTED_MODULE_0__[\"Helpers\"].isTwoValueEquals(this.values, obj.values, false, true, false);\n    };\n    LocalizableString.prototype.setFindText = function (text) {\n        if (this.searchText == text)\n            return;\n        this.searchText = text;\n        if (!this.searchableText) {\n            var textOrHtml = this.textOrHtml;\n            this.searchableText = !!textOrHtml ? textOrHtml.toLowerCase() : \"\";\n        }\n        var str = this.searchableText;\n        var index = !!str && !!text ? str.indexOf(text) : undefined;\n        if (index < 0)\n            index = undefined;\n        if (index != undefined || this.searchIndex != index) {\n            this.searchIndex = index;\n            if (!!this.onSearchChanged) {\n                this.onSearchChanged();\n            }\n        }\n        return this.searchIndex != undefined;\n    };\n    LocalizableString.prototype.onChanged = function () { };\n    LocalizableString.prototype.onCreating = function () { };\n    LocalizableString.prototype.hasHtmlValue = function () {\n        if (!this.owner || !this.useMarkdown)\n            return false;\n        var loc = this.locale;\n        if (!loc)\n            loc = this.defaultLoc;\n        if (this.htmlValues[loc] !== undefined)\n            return !!this.htmlValues[loc];\n        var renderedText = this.calculatedText;\n        if (!renderedText) {\n            this.setHtmlValue(loc, \"\");\n            return false;\n        }\n        if (!!this.getLocalizationName() && renderedText === this.getLocalizationStr()) {\n            this.setHtmlValue(loc, \"\");\n            return false;\n        }\n        var res = this.owner.getMarkdownHtml(renderedText, this.name);\n        this.setHtmlValue(loc, res);\n        return !!res;\n    };\n    LocalizableString.prototype.setHtmlValue = function (loc, val) {\n        this.htmlValues[loc] = val;\n    };\n    LocalizableString.prototype.getHtmlValue = function () {\n        var loc = this.locale;\n        if (!loc)\n            loc = this.defaultLoc;\n        return this.htmlValues[loc];\n    };\n    LocalizableString.prototype.deleteValuesEqualsToDefault = function (defaultValue) {\n        if (_settings__WEBPACK_IMPORTED_MODULE_2__[\"settings\"].localization.storeDuplicatedTranslations)\n            return;\n        var keys = this.getValuesKeys();\n        for (var i = 0; i < keys.length; i++) {\n            if (keys[i] == this.defaultLoc)\n                continue;\n            if (this.getValue(keys[i]) == defaultValue) {\n                this.deleteValue(keys[i]);\n            }\n        }\n    };\n    LocalizableString.prototype.getValue = function (loc) {\n        if (!!this.sharedData)\n            return this.sharedData.getValue(loc);\n        return this.values[this.getValueLoc(loc)];\n    };\n    LocalizableString.prototype.setValue = function (loc, value) {\n        if (!!this.sharedData)\n            this.sharedData.setValue(loc, value);\n        else\n            this.values[this.getValueLoc(loc)] = value;\n    };\n    LocalizableString.prototype.deleteValue = function (loc) {\n        if (!!this.sharedData)\n            this.sharedData.deleteValue(loc);\n        else\n            delete this.values[this.getValueLoc(loc)];\n    };\n    LocalizableString.prototype.getValueLoc = function (loc) {\n        if (this.disableLocalization)\n            return _settings__WEBPACK_IMPORTED_MODULE_2__[\"settings\"].localization.defaultLocaleName;\n        return loc;\n    };\n    LocalizableString.prototype.getValuesKeys = function () {\n        if (!!this.sharedData)\n            return this.sharedData.getValuesKeys();\n        return Object.keys(this.values);\n    };\n    Object.defineProperty(LocalizableString.prototype, \"defaultLoc\", {\n        get: function () {\n            return _settings__WEBPACK_IMPORTED_MODULE_2__[\"settings\"].localization.defaultLocaleName;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    LocalizableString.SerializeAsObject = false;\n    LocalizableString.defaultRenderer = \"sv-string-viewer\";\n    LocalizableString.editableRenderer = \"sv-string-editor\";\n    return LocalizableString;\n}());\n\n/**\n * The class represents the list of strings that supports multi-languages.\n */\nvar LocalizableStrings = /** @class */ (function () {\n    function LocalizableStrings(owner) {\n        this.owner = owner;\n        this.values = {};\n    }\n    LocalizableStrings.prototype.getIsMultiple = function () { return true; };\n    Object.defineProperty(LocalizableStrings.prototype, \"locale\", {\n        get: function () {\n            return this.owner && this.owner.getLocale ? this.owner.getLocale() : \"\";\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(LocalizableStrings.prototype, \"value\", {\n        get: function () {\n            return this.getValue(\"\");\n        },\n        set: function (val) {\n            this.setValue(\"\", val);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(LocalizableStrings.prototype, \"text\", {\n        get: function () {\n            return Array.isArray(this.value) ? this.value.join(\"\\n\") : \"\";\n        },\n        set: function (val) {\n            this.value = !!val ? val.split(\"\\n\") : [];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    LocalizableStrings.prototype.getLocaleText = function (loc) {\n        var res = this.getValueCore(loc, !loc || loc === this.locale);\n        if (!res || !Array.isArray(res) || res.length == 0)\n            return \"\";\n        return res.join(\"\\n\");\n    };\n    LocalizableStrings.prototype.setLocaleText = function (loc, newValue) {\n        var val = !!newValue ? newValue.split(\"\\n\") : null;\n        this.setValue(loc, val);\n    };\n    LocalizableStrings.prototype.getValue = function (loc) {\n        return this.getValueCore(loc);\n    };\n    LocalizableStrings.prototype.getValueCore = function (loc, useDefault) {\n        if (useDefault === void 0) { useDefault = true; }\n        loc = this.getLocale(loc);\n        if (this.values[loc])\n            return this.values[loc];\n        if (useDefault) {\n            var defLoc = _settings__WEBPACK_IMPORTED_MODULE_2__[\"settings\"].localization.defaultLocaleName;\n            if (loc !== defLoc && this.values[defLoc])\n                return this.values[defLoc];\n        }\n        return [];\n    };\n    LocalizableStrings.prototype.setValue = function (loc, val) {\n        loc = this.getLocale(loc);\n        var oldValue = _helpers__WEBPACK_IMPORTED_MODULE_0__[\"Helpers\"].createCopy(this.values);\n        if (!val || val.length == 0) {\n            delete this.values[loc];\n        }\n        else {\n            this.values[loc] = val;\n        }\n        if (!!this.onValueChanged) {\n            this.onValueChanged(oldValue, this.values);\n        }\n    };\n    LocalizableStrings.prototype.hasValue = function (loc) {\n        if (loc === void 0) { loc = \"\"; }\n        return !this.isEmpty && this.getValue(loc).length > 0;\n    };\n    Object.defineProperty(LocalizableStrings.prototype, \"isEmpty\", {\n        get: function () {\n            return this.getValuesKeys().length == 0;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    LocalizableStrings.prototype.getLocale = function (loc) {\n        if (!!loc)\n            return loc;\n        loc = this.locale;\n        return !!loc ? loc : _settings__WEBPACK_IMPORTED_MODULE_2__[\"settings\"].localization.defaultLocaleName;\n    };\n    LocalizableStrings.prototype.getLocales = function () {\n        var keys = this.getValuesKeys();\n        if (keys.length == 0)\n            return [];\n        return keys;\n    };\n    LocalizableStrings.prototype.getJson = function () {\n        var keys = this.getValuesKeys();\n        if (keys.length == 0)\n            return null;\n        if (keys.length == 1 &&\n            keys[0] == _settings__WEBPACK_IMPORTED_MODULE_2__[\"settings\"].localization.defaultLocaleName &&\n            !_settings__WEBPACK_IMPORTED_MODULE_2__[\"settings\"].serialization.localizableStringSerializeAsObject)\n            return this.values[keys[0]];\n        return _helpers__WEBPACK_IMPORTED_MODULE_0__[\"Helpers\"].createCopy(this.values);\n    };\n    LocalizableStrings.prototype.setJson = function (value) {\n        this.values = {};\n        if (!value)\n            return;\n        if (Array.isArray(value)) {\n            this.setValue(null, value);\n        }\n        else {\n            for (var key in value) {\n                this.setValue(key, value[key]);\n            }\n        }\n    };\n    LocalizableStrings.prototype.getValuesKeys = function () {\n        return Object.keys(this.values);\n    };\n    return LocalizableStrings;\n}());\n\n\n\n/***/ }),\n\n/***/ \"./src/localization/english.ts\":\n/*!*************************************!*\\\n  !*** ./src/localization/english.ts ***!\n  \\*************************************/\n/*! exports provided: englishStrings */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_481198__) {\n\n\"use strict\";\n__nested_webpack_require_481198__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_481198__.d(__nested_webpack_exports__, \"englishStrings\", function() { return englishStrings; });\n// Uncomment the line below if you create a custom dictionary\n// import { surveyLocalization } from \"survey-core\";\nvar englishStrings = {\n    pagePrevText: \"Previous\",\n    pageNextText: \"Next\",\n    completeText: \"Complete\",\n    previewText: \"Preview\",\n    editText: \"Edit\",\n    startSurveyText: \"Start\",\n    otherItemText: \"Other (describe)\",\n    noneItemText: \"None\",\n    refuseItemText: \"Refuse to answer\",\n    dontKnowItemText: \"Don't know\",\n    selectAllItemText: \"Select All\",\n    progressText: \"Page {0} of {1}\",\n    indexText: \"{0} of {1}\",\n    panelDynamicProgressText: \"{0} of {1}\",\n    panelDynamicTabTextFormat: \"Panel {panelIndex}\",\n    questionsProgressText: \"Answered {0}/{1} questions\",\n    emptySurvey: \"The survey doesn't contain any visible elements.\",\n    completingSurvey: \"Thank you for completing the survey\",\n    completingSurveyBefore: \"Our records show that you have already completed this survey.\",\n    loadingSurvey: \"Loading Survey...\",\n    placeholder: \"Select...\",\n    ratingOptionsCaption: \"Select...\",\n    value: \"value\",\n    requiredError: \"Response required.\",\n    requiredErrorInPanel: \"Response required: answer at least one question.\",\n    requiredInAllRowsError: \"Response required: answer questions in all rows.\",\n    eachRowUniqueError: \"Each row must have a unique value.\",\n    numericError: \"The value should be numeric.\",\n    minError: \"The value should not be less than {0}\",\n    maxError: \"The value should not be greater than {0}\",\n    textMinLength: \"Please enter at least {0} character(s).\",\n    textMaxLength: \"Please enter no more than {0} character(s).\",\n    textMinMaxLength: \"Please enter at least {0} and no more than {1} characters.\",\n    minRowCountError: \"Please fill in at least {0} row(s).\",\n    minSelectError: \"Please select at least {0} option(s).\",\n    maxSelectError: \"Please select no more than {0} option(s).\",\n    numericMinMax: \"The '{0}' should be at least {1} and at most {2}\",\n    numericMin: \"The '{0}' should be at least {1}\",\n    numericMax: \"The '{0}' should be at most {1}\",\n    invalidEmail: \"Please enter a valid e-mail address.\",\n    invalidExpression: \"The expression: {0} should return 'true'.\",\n    urlRequestError: \"The request returned error '{0}'. {1}\",\n    urlGetChoicesError: \"The request returned empty data or the 'path' property is incorrect\",\n    exceedMaxSize: \"The file size should not exceed {0}.\",\n    noUploadFilesHandler: \"Files cannot be uploaded. Please add a handler for the 'onUploadFiles' event.\",\n    otherRequiredError: \"Response required: enter another value.\",\n    uploadingFile: \"Your file is uploading. Please wait several seconds and try again.\",\n    loadingFile: \"Loading...\",\n    chooseFile: \"Choose file(s)...\",\n    noFileChosen: \"No file chosen\",\n    filePlaceholder: \"Drag and drop a file here or click the button below to select a file to upload.\",\n    confirmDelete: \"Are you sure you want to delete this record?\",\n    keyDuplicationError: \"This value should be unique.\",\n    addColumn: \"Add Column\",\n    addRow: \"Add Row\",\n    removeRow: \"Remove\",\n    emptyRowsText: \"There are no rows.\",\n    addPanel: \"Add new\",\n    removePanel: \"Remove\",\n    showDetails: \"Show Details\",\n    hideDetails: \"Hide Details\",\n    choices_Item: \"item\",\n    matrix_column: \"Column\",\n    matrix_row: \"Row\",\n    multipletext_itemname: \"text\",\n    savingData: \"The results are being saved on the server...\",\n    savingDataError: \"An error occurred and we could not save the results.\",\n    savingDataSuccess: \"The results were saved successfully!\",\n    saveAgainButton: \"Try again\",\n    timerMin: \"min\",\n    timerSec: \"sec\",\n    timerSpentAll: \"You have spent {0} on this page and {1} in total.\",\n    timerSpentPage: \"You have spent {0} on this page.\",\n    timerSpentSurvey: \"You have spent {0} in total.\",\n    timerLimitAll: \"You have spent {0} of {1} on this page and {2} of {3} in total.\",\n    timerLimitPage: \"You have spent {0} of {1} on this page.\",\n    timerLimitSurvey: \"You have spent {0} of {1} in total.\",\n    clearCaption: \"Clear\",\n    signaturePlaceHolder: \"Sign here\",\n    chooseFileCaption: \"Select File\",\n    takePhotoCaption: \"Take Photo\",\n    photoPlaceholder: \"Click the button below to take a photo using the camera.\",\n    fileOrPhotoPlaceholder: \"Drag and drop or select a file to upload or take a photo using the camera.\",\n    replaceFileCaption: \"Replace file\",\n    removeFileCaption: \"Remove this file\",\n    booleanCheckedLabel: \"Yes\",\n    booleanUncheckedLabel: \"No\",\n    confirmRemoveFile: \"Are you sure that you want to remove this file: {0}?\",\n    confirmRemoveAllFiles: \"Are you sure that you want to remove all files?\",\n    questionTitlePatternText: \"Question Title\",\n    modalCancelButtonText: \"Cancel\",\n    modalApplyButtonText: \"Apply\",\n    filterStringPlaceholder: \"Type to search...\",\n    emptyMessage: \"No data to display\",\n    noEntriesText: \"No entries yet.\\nClick the button below to add a new entry.\",\n    noEntriesReadonlyText: \"No entries.\",\n    more: \"More\",\n    tagboxDoneButtonCaption: \"OK\",\n    selectToRankEmptyRankedAreaText: \"All choices are selected for ranking\",\n    selectToRankEmptyUnrankedAreaText: \"Drag choices here to rank them\",\n    ok: \"OK\",\n    cancel: \"Cancel\",\n};\n// Uncomment the lines below if you create a custom dictionary.\n// Replace \"en\" with a custom locale code (for example, \"fr\" or \"de\"),\n// Replace `englishStrings` with the name of the variable that contains the custom dictionary.\n// surveyLocalization.locales[\"en\"] = englishStrings;\n// surveyLocalization.localeNames[\"en\"] = \"English\";\n\n\n/***/ }),\n\n/***/ \"./src/popup.ts\":\n/*!**********************!*\\\n  !*** ./src/popup.ts ***!\n  \\**********************/\n/*! exports provided: PopupModel, createDialogOptions */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_487189__) {\n\n\"use strict\";\n__nested_webpack_require_487189__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_487189__.d(__nested_webpack_exports__, \"PopupModel\", function() { return PopupModel; });\n/* harmony export (binding) */ __nested_webpack_require_487189__.d(__nested_webpack_exports__, \"createDialogOptions\", function() { return createDialogOptions; });\n/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_487189__(/*! ./base */ \"./src/base.ts\");\n/* harmony import */ var _jsonobject__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_487189__(/*! ./jsonobject */ \"./src/jsonobject.ts\");\n/* harmony import */ var _console_warnings__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_487189__(/*! ./console-warnings */ \"./src/console-warnings.ts\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = ( false) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n\n\nvar PopupModel = /** @class */ (function (_super) {\n    __extends(PopupModel, _super);\n    function PopupModel(contentComponentName, contentComponentData, verticalPosition, horizontalPosition, showPointer, isModal, onCancel, onApply, onHide, onShow, cssClass, title, onDispose) {\n        if (verticalPosition === void 0) { verticalPosition = \"bottom\"; }\n        if (horizontalPosition === void 0) { horizontalPosition = \"left\"; }\n        if (showPointer === void 0) { showPointer = true; }\n        if (isModal === void 0) { isModal = false; }\n        if (onCancel === void 0) { onCancel = function () { }; }\n        if (onApply === void 0) { onApply = function () { return true; }; }\n        if (onHide === void 0) { onHide = function () { }; }\n        if (onShow === void 0) { onShow = function () { }; }\n        if (cssClass === void 0) { cssClass = \"\"; }\n        if (title === void 0) { title = \"\"; }\n        if (onDispose === void 0) { onDispose = function () { }; }\n        var _this = _super.call(this) || this;\n        _this.onDispose = onDispose;\n        _this.focusFirstInputSelector = \"\";\n        _this.onVisibilityChanged = _this.addEvent();\n        _this.onFooterActionsCreated = _this.addEvent();\n        _this.onRecalculatePosition = _this.addEvent();\n        _this.contentComponentName = contentComponentName;\n        _this.contentComponentData = contentComponentData;\n        _this.verticalPosition = verticalPosition;\n        _this.horizontalPosition = horizontalPosition;\n        _this.showPointer = showPointer;\n        _this.isModal = isModal;\n        _this.onCancel = onCancel;\n        _this.onApply = onApply;\n        _this.onHide = onHide;\n        _this.onShow = onShow;\n        _this.cssClass = cssClass;\n        _this.title = title;\n        return _this;\n    }\n    PopupModel.prototype.refreshInnerModel = function () {\n        var innerModel = this.contentComponentData[\"model\"];\n        innerModel && innerModel.refresh && innerModel.refresh();\n    };\n    Object.defineProperty(PopupModel.prototype, \"isVisible\", {\n        get: function () {\n            return this.getPropertyValue(\"isVisible\", false);\n        },\n        set: function (value) {\n            if (this.isVisible === value) {\n                return;\n            }\n            this.setPropertyValue(\"isVisible\", value);\n            this.onVisibilityChanged.fire(this, { model: this, isVisible: value });\n            if (this.isVisible) {\n                this.onShow();\n            }\n            else {\n                this.refreshInnerModel();\n                this.onHide();\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    PopupModel.prototype.toggleVisibility = function () {\n        this.isVisible = !this.isVisible;\n    };\n    PopupModel.prototype.recalculatePosition = function (isResetHeight) {\n        this.onRecalculatePosition.fire(this, { isResetHeight: isResetHeight });\n    };\n    PopupModel.prototype.updateFooterActions = function (footerActions) {\n        var options = { actions: footerActions };\n        this.onFooterActionsCreated.fire(this, options);\n        return options.actions;\n    };\n    PopupModel.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.onDispose();\n    };\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()\n    ], PopupModel.prototype, \"contentComponentName\", void 0);\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()\n    ], PopupModel.prototype, \"contentComponentData\", void 0);\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_1__[\"property\"])({ defaultValue: \"bottom\" })\n    ], PopupModel.prototype, \"verticalPosition\", void 0);\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_1__[\"property\"])({ defaultValue: \"left\" })\n    ], PopupModel.prototype, \"horizontalPosition\", void 0);\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_1__[\"property\"])({ defaultValue: false })\n    ], PopupModel.prototype, \"showPointer\", void 0);\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_1__[\"property\"])({ defaultValue: false })\n    ], PopupModel.prototype, \"isModal\", void 0);\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_1__[\"property\"])({ defaultValue: true })\n    ], PopupModel.prototype, \"isFocusedContent\", void 0);\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_1__[\"property\"])({ defaultValue: true })\n    ], PopupModel.prototype, \"isFocusedContainer\", void 0);\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_1__[\"property\"])({ defaultValue: function () { } })\n    ], PopupModel.prototype, \"onCancel\", void 0);\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_1__[\"property\"])({ defaultValue: function () { return true; } })\n    ], PopupModel.prototype, \"onApply\", void 0);\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_1__[\"property\"])({ defaultValue: function () { } })\n    ], PopupModel.prototype, \"onHide\", void 0);\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_1__[\"property\"])({ defaultValue: function () { } })\n    ], PopupModel.prototype, \"onShow\", void 0);\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_1__[\"property\"])({ defaultValue: \"\" })\n    ], PopupModel.prototype, \"cssClass\", void 0);\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_1__[\"property\"])({ defaultValue: \"\" })\n    ], PopupModel.prototype, \"title\", void 0);\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_1__[\"property\"])({ defaultValue: \"auto\" })\n    ], PopupModel.prototype, \"overlayDisplayMode\", void 0);\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_1__[\"property\"])({ defaultValue: \"popup\" })\n    ], PopupModel.prototype, \"displayMode\", void 0);\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_1__[\"property\"])({ defaultValue: \"flex\" })\n    ], PopupModel.prototype, \"positionMode\", void 0);\n    return PopupModel;\n}(_base__WEBPACK_IMPORTED_MODULE_0__[\"Base\"]));\n\nfunction createDialogOptions(componentName, data, onApply, onCancel, onHide, onShow, cssClass, title, displayMode) {\n    if (onHide === void 0) { onHide = function () { }; }\n    if (onShow === void 0) { onShow = function () { }; }\n    if (displayMode === void 0) { displayMode = \"popup\"; }\n    _console_warnings__WEBPACK_IMPORTED_MODULE_2__[\"ConsoleWarnings\"].warn(\"The `showModal()` and `createDialogOptions()` methods are obsolete. Use the `showDialog()` method instead.\");\n    return {\n        componentName: componentName,\n        data: data,\n        onApply: onApply,\n        onCancel: onCancel,\n        onHide: onHide,\n        onShow: onShow,\n        cssClass: cssClass,\n        title: title,\n        displayMode: displayMode\n    };\n}\n\n\n/***/ }),\n\n/***/ \"./src/react/boolean-checkbox.tsx\":\n/*!****************************************!*\\\n  !*** ./src/react/boolean-checkbox.tsx ***!\n  \\****************************************/\n/*! exports provided: SurveyQuestionBooleanCheckbox */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_496480__) {\n\n\"use strict\";\n__nested_webpack_require_496480__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_496480__.d(__nested_webpack_exports__, \"SurveyQuestionBooleanCheckbox\", function() { return SurveyQuestionBooleanCheckbox; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_496480__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_496480__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var survey_core__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_496480__(/*! survey-core */ \"survey-core\");\n/* harmony import */ var survey_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__nested_webpack_require_496480__.n(survey_core__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _reactquestion_factory__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_496480__(/*! ./reactquestion_factory */ \"./src/react/reactquestion_factory.tsx\");\n/* harmony import */ var _boolean__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_496480__(/*! ./boolean */ \"./src/react/boolean.tsx\");\n/* harmony import */ var _components_title_title_actions__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_496480__(/*! ./components/title/title-actions */ \"./src/react/components/title/title-actions.tsx\");\n/* harmony import */ var _reactquestion_element__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_496480__(/*! ./reactquestion_element */ \"./src/react/reactquestion_element.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\n\nvar SurveyQuestionBooleanCheckbox = /** @class */ (function (_super) {\n    __extends(SurveyQuestionBooleanCheckbox, _super);\n    function SurveyQuestionBooleanCheckbox(props) {\n        return _super.call(this, props) || this;\n    }\n    SurveyQuestionBooleanCheckbox.prototype.renderElement = function () {\n        var cssClasses = this.question.cssClasses;\n        var itemClass = this.question.getCheckboxItemCss();\n        var description = this.question.canRenderLabelDescription ?\n            _reactquestion_element__WEBPACK_IMPORTED_MODULE_5__[\"SurveyElementBase\"].renderQuestionDescription(this.question) : null;\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: cssClasses.rootCheckbox },\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: itemClass },\n                react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"label\", { className: cssClasses.checkboxLabel },\n                    react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"input\", { ref: this.checkRef, type: \"checkbox\", name: this.question.name, value: this.question.booleanValue === null\n                            ? \"\"\n                            : this.question.booleanValue, id: this.question.inputId, className: cssClasses.controlCheckbox, disabled: this.isDisplayMode, checked: this.question.booleanValue || false, onChange: this.handleOnChange, \"aria-required\": this.question.ariaRequired, \"aria-label\": this.question.ariaLabel, \"aria-invalid\": this.question.ariaInvalid, \"aria-errormessage\": this.question.ariaErrormessage }),\n                    react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"span\", { className: cssClasses.checkboxMaterialDecorator },\n                        this.question.svgIcon ?\n                            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"svg\", { className: cssClasses.checkboxItemDecorator },\n                                react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"use\", { xlinkHref: this.question.svgIcon })) : null,\n                        react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"span\", { className: \"check\" })),\n                    this.question.isLabelRendered && (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"span\", { className: cssClasses.checkboxControlLabel, id: this.question.labelRenderedAriaID },\n                        react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_components_title_title_actions__WEBPACK_IMPORTED_MODULE_4__[\"TitleActions\"], { element: this.question, cssClasses: this.question.cssClasses })))),\n                description)));\n    };\n    return SurveyQuestionBooleanCheckbox;\n}(_boolean__WEBPACK_IMPORTED_MODULE_3__[\"SurveyQuestionBoolean\"]));\n\n_reactquestion_factory__WEBPACK_IMPORTED_MODULE_2__[\"ReactQuestionFactory\"].Instance.registerQuestion(\"sv-boolean-checkbox\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](SurveyQuestionBooleanCheckbox, props);\n});\nsurvey_core__WEBPACK_IMPORTED_MODULE_1__[\"RendererFactory\"].Instance.registerRenderer(\"boolean\", \"checkbox\", \"sv-boolean-checkbox\");\n\n\n/***/ }),\n\n/***/ \"./src/react/boolean-radio.tsx\":\n/*!*************************************!*\\\n  !*** ./src/react/boolean-radio.tsx ***!\n  \\*************************************/\n/*! exports provided: SurveyQuestionBooleanRadio */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_502086__) {\n\n\"use strict\";\n__nested_webpack_require_502086__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_502086__.d(__nested_webpack_exports__, \"SurveyQuestionBooleanRadio\", function() { return SurveyQuestionBooleanRadio; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_502086__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_502086__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var survey_core__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_502086__(/*! survey-core */ \"survey-core\");\n/* harmony import */ var survey_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__nested_webpack_require_502086__.n(survey_core__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _reactquestion_factory__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_502086__(/*! ./reactquestion_factory */ \"./src/react/reactquestion_factory.tsx\");\n/* harmony import */ var _boolean__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_502086__(/*! ./boolean */ \"./src/react/boolean.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\nvar SurveyQuestionBooleanRadio = /** @class */ (function (_super) {\n    __extends(SurveyQuestionBooleanRadio, _super);\n    function SurveyQuestionBooleanRadio(props) {\n        var _this = _super.call(this, props) || this;\n        _this.handleOnChange = function (event) {\n            _this.question.booleanValue = event.nativeEvent.target.value == \"true\";\n        };\n        return _this;\n    }\n    SurveyQuestionBooleanRadio.prototype.renderRadioItem = function (value, locText) {\n        var cssClasses = this.question.cssClasses;\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { role: \"presentation\", className: this.question.getRadioItemClass(cssClasses, value) },\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"label\", { className: cssClasses.radioLabel },\n                react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"input\", { type: \"radio\", name: this.question.name, value: value, \"aria-errormessage\": this.question.ariaErrormessage, checked: value === this.question.booleanValueRendered, disabled: this.question.isInputReadOnly, className: cssClasses.itemRadioControl, onChange: this.handleOnChange }),\n                this.question.cssClasses.materialRadioDecorator ?\n                    (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"span\", { className: cssClasses.materialRadioDecorator }, this.question.itemSvgIcon ?\n                        (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"svg\", { className: cssClasses.itemRadioDecorator },\n                            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"use\", { xlinkHref: this.question.itemSvgIcon }))) : null)) : null,\n                react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"span\", { className: cssClasses.radioControlLabel }, this.renderLocString(locText)))));\n    };\n    SurveyQuestionBooleanRadio.prototype.renderElement = function () {\n        var cssClasses = this.question.cssClasses;\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: cssClasses.rootRadio },\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"fieldset\", { role: \"presentation\", className: cssClasses.radioFieldset }, !this.question.swapOrder ?\n                (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](react__WEBPACK_IMPORTED_MODULE_0__[\"Fragment\"], null,\n                    this.renderRadioItem(false, this.question.locLabelFalse),\n                    this.renderRadioItem(true, this.question.locLabelTrue)))\n                :\n                    (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](react__WEBPACK_IMPORTED_MODULE_0__[\"Fragment\"], null,\n                        this.renderRadioItem(true, this.question.locLabelTrue),\n                        this.renderRadioItem(false, this.question.locLabelFalse))))));\n    };\n    return SurveyQuestionBooleanRadio;\n}(_boolean__WEBPACK_IMPORTED_MODULE_3__[\"SurveyQuestionBoolean\"]));\n\n_reactquestion_factory__WEBPACK_IMPORTED_MODULE_2__[\"ReactQuestionFactory\"].Instance.registerQuestion(\"sv-boolean-radio\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](SurveyQuestionBooleanRadio, props);\n});\nsurvey_core__WEBPACK_IMPORTED_MODULE_1__[\"RendererFactory\"].Instance.registerRenderer(\"boolean\", \"radio\", \"sv-boolean-radio\");\n\n\n/***/ }),\n\n/***/ \"./src/react/boolean.tsx\":\n/*!*******************************!*\\\n  !*** ./src/react/boolean.tsx ***!\n  \\*******************************/\n/*! exports provided: SurveyQuestionBoolean */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_507482__) {\n\n\"use strict\";\n__nested_webpack_require_507482__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_507482__.d(__nested_webpack_exports__, \"SurveyQuestionBoolean\", function() { return SurveyQuestionBoolean; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_507482__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_507482__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _reactquestion_element__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_507482__(/*! ./reactquestion_element */ \"./src/react/reactquestion_element.tsx\");\n/* harmony import */ var _reactquestion_factory__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_507482__(/*! ./reactquestion_factory */ \"./src/react/reactquestion_factory.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar SurveyQuestionBoolean = /** @class */ (function (_super) {\n    __extends(SurveyQuestionBoolean, _super);\n    function SurveyQuestionBoolean(props) {\n        var _this = _super.call(this, props) || this;\n        _this.handleOnChange = _this.handleOnChange.bind(_this);\n        _this.handleOnClick = _this.handleOnClick.bind(_this);\n        _this.handleOnLabelClick = _this.handleOnLabelClick.bind(_this);\n        _this.handleOnSwitchClick = _this.handleOnSwitchClick.bind(_this);\n        _this.handleOnKeyDown = _this.handleOnKeyDown.bind(_this);\n        _this.checkRef = react__WEBPACK_IMPORTED_MODULE_0__[\"createRef\"]();\n        return _this;\n    }\n    SurveyQuestionBoolean.prototype.getStateElement = function () {\n        return this.question;\n    };\n    Object.defineProperty(SurveyQuestionBoolean.prototype, \"question\", {\n        get: function () {\n            return this.questionBase;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /*\n    private get allowClick(): boolean {\n      return this.question.isIndeterminate && !this.isDisplayMode;\n    }\n    */\n    SurveyQuestionBoolean.prototype.doCheck = function (value) {\n        this.question.booleanValue = value;\n    };\n    SurveyQuestionBoolean.prototype.handleOnChange = function (event) {\n        this.doCheck(event.target.checked);\n    };\n    SurveyQuestionBoolean.prototype.handleOnClick = function (event) {\n        this.question.onLabelClick(event, true);\n    };\n    SurveyQuestionBoolean.prototype.handleOnSwitchClick = function (event) {\n        this.question.onSwitchClickModel(event.nativeEvent);\n    };\n    SurveyQuestionBoolean.prototype.handleOnLabelClick = function (event, value) {\n        this.question.onLabelClick(event, value);\n    };\n    SurveyQuestionBoolean.prototype.handleOnKeyDown = function (event) {\n        this.question.onKeyDownCore(event);\n    };\n    SurveyQuestionBoolean.prototype.updateDomElement = function () {\n        if (!this.question)\n            return;\n        var el = this.checkRef.current;\n        if (el) {\n            el.indeterminate = this.question.isIndeterminate;\n        }\n        this.setControl(el);\n        _super.prototype.updateDomElement.call(this);\n    };\n    SurveyQuestionBoolean.prototype.renderElement = function () {\n        var _this = this;\n        var cssClasses = this.question.cssClasses;\n        var itemClass = this.question.getItemCss();\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: cssClasses.root, onKeyDown: this.handleOnKeyDown },\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"label\", { className: itemClass, onClick: this.handleOnClick },\n                react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"input\", { ref: this.checkRef, type: \"checkbox\", name: this.question.name, value: this.question.booleanValue === null\n                        ? \"\"\n                        : this.question.booleanValue, id: this.question.inputId, className: cssClasses.control, disabled: this.isDisplayMode, checked: this.question.booleanValue || false, onChange: this.handleOnChange, role: this.question.a11y_input_ariaRole, \"aria-required\": this.question.a11y_input_ariaRequired, \"aria-label\": this.question.a11y_input_ariaLabel, \"aria-labelledby\": this.question.a11y_input_ariaLabelledBy, \"aria-describedby\": this.question.a11y_input_ariaDescribedBy, \"aria-invalid\": this.question.a11y_input_ariaInvalid, \"aria-errormessage\": this.question.a11y_input_ariaErrormessage }),\n                react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: cssClasses.sliderGhost, onClick: function (event) { return _this.handleOnLabelClick(event, _this.question.swapOrder); } },\n                    react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"span\", { className: this.question.getLabelCss(this.question.swapOrder) }, this.renderLocString(this.question.locLabelLeft))),\n                react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: cssClasses.switch, onClick: this.handleOnSwitchClick },\n                    react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"span\", { className: cssClasses.slider }, this.question.isDeterminated && cssClasses.sliderText ?\n                        react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"span\", { className: cssClasses.sliderText }, this.renderLocString(this.question.getCheckedLabel()))\n                        : null)),\n                react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: cssClasses.sliderGhost, onClick: function (event) { return _this.handleOnLabelClick(event, !_this.question.swapOrder); } },\n                    react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"span\", { className: this.question.getLabelCss(!this.question.swapOrder) }, this.renderLocString(this.question.locLabelRight))))));\n    };\n    return SurveyQuestionBoolean;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_1__[\"SurveyQuestionElementBase\"]));\n\n_reactquestion_factory__WEBPACK_IMPORTED_MODULE_2__[\"ReactQuestionFactory\"].Instance.registerQuestion(\"boolean\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](SurveyQuestionBoolean, props);\n});\n\n\n/***/ }),\n\n/***/ \"./src/react/components/action-bar/action-bar-item-dropdown.tsx\":\n/*!**********************************************************************!*\\\n  !*** ./src/react/components/action-bar/action-bar-item-dropdown.tsx ***!\n  \\**********************************************************************/\n/*! exports provided: SurveyActionBarItemDropdown */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_514692__) {\n\n\"use strict\";\n__nested_webpack_require_514692__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_514692__.d(__nested_webpack_exports__, \"SurveyActionBarItemDropdown\", function() { return SurveyActionBarItemDropdown; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_514692__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_514692__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var survey_core__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_514692__(/*! survey-core */ \"survey-core\");\n/* harmony import */ var survey_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__nested_webpack_require_514692__.n(survey_core__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _element_factory__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_514692__(/*! ../../element-factory */ \"./src/react/element-factory.tsx\");\n/* harmony import */ var _popup_popup__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_514692__(/*! ../popup/popup */ \"./src/react/components/popup/popup.tsx\");\n/* harmony import */ var _action_bar_item__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_514692__(/*! ./action-bar-item */ \"./src/react/components/action-bar/action-bar-item.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\nvar SurveyActionBarItemDropdown = /** @class */ (function (_super) {\n    __extends(SurveyActionBarItemDropdown, _super);\n    function SurveyActionBarItemDropdown(props) {\n        var _this = _super.call(this, props) || this;\n        _this.viewModel = new survey_core__WEBPACK_IMPORTED_MODULE_1__[\"ActionDropdownViewModel\"](_this.item);\n        return _this;\n    }\n    SurveyActionBarItemDropdown.prototype.renderInnerButton = function () {\n        var button = _super.prototype.renderInnerButton.call(this);\n        return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null,\n            button,\n            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_popup_popup__WEBPACK_IMPORTED_MODULE_3__[\"Popup\"], { model: this.item.popupModel, getTarget: survey_core__WEBPACK_IMPORTED_MODULE_1__[\"getActionDropdownButtonTarget\"] })));\n    };\n    SurveyActionBarItemDropdown.prototype.componentWillUnmount = function () {\n        _super.prototype.componentWillUnmount.call(this);\n        this.viewModel.dispose();\n    };\n    return SurveyActionBarItemDropdown;\n}(_action_bar_item__WEBPACK_IMPORTED_MODULE_4__[\"SurveyActionBarItem\"]));\n\n_element_factory__WEBPACK_IMPORTED_MODULE_2__[\"ReactElementFactory\"].Instance.registerElement(\"sv-action-bar-item-dropdown\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(SurveyActionBarItemDropdown, props);\n});\n\n\n/***/ }),\n\n/***/ \"./src/react/components/action-bar/action-bar-item.tsx\":\n/*!*************************************************************!*\\\n  !*** ./src/react/components/action-bar/action-bar-item.tsx ***!\n  \\*************************************************************/\n/*! exports provided: SurveyAction, SurveyActionBarItem */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_518566__) {\n\n\"use strict\";\n__nested_webpack_require_518566__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_518566__.d(__nested_webpack_exports__, \"SurveyAction\", function() { return SurveyAction; });\n/* harmony export (binding) */ __nested_webpack_require_518566__.d(__nested_webpack_exports__, \"SurveyActionBarItem\", function() { return SurveyActionBarItem; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_518566__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_518566__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _element_factory__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_518566__(/*! ../../element-factory */ \"./src/react/element-factory.tsx\");\n/* harmony import */ var _reactquestion_element__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_518566__(/*! ../../reactquestion_element */ \"./src/react/reactquestion_element.tsx\");\n/* harmony import */ var _reactSurvey__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_518566__(/*! ../../reactSurvey */ \"./src/react/reactSurvey.tsx\");\n/* harmony import */ var _svg_icon_svg_icon__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_518566__(/*! ../svg-icon/svg-icon */ \"./src/react/components/svg-icon/svg-icon.tsx\");\n/* harmony import */ var _action_bar_separator__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_518566__(/*! ./action-bar-separator */ \"./src/react/components/action-bar/action-bar-separator.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\n\nvar SurveyAction = /** @class */ (function (_super) {\n    __extends(SurveyAction, _super);\n    function SurveyAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(SurveyAction.prototype, \"item\", {\n        get: function () {\n            return this.props.item;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyAction.prototype.getStateElement = function () {\n        return this.item;\n    };\n    SurveyAction.prototype.renderElement = function () {\n        //refactor\n        var itemClass = this.item.getActionRootCss();\n        var separator = this.item.needSeparator ? (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_action_bar_separator__WEBPACK_IMPORTED_MODULE_5__[\"SurveyActionBarSeparator\"], null)) : null;\n        var itemComponent = _element_factory__WEBPACK_IMPORTED_MODULE_1__[\"ReactElementFactory\"].Instance.createElement(this.item.component || \"sv-action-bar-item\", {\n            item: this.item,\n        });\n        return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", { className: itemClass, id: this.item.id },\n            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", { className: \"sv-action__content\" },\n                separator,\n                itemComponent)));\n    };\n    return SurveyAction;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_2__[\"SurveyElementBase\"]));\n\nvar SurveyActionBarItem = /** @class */ (function (_super) {\n    __extends(SurveyActionBarItem, _super);\n    function SurveyActionBarItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(SurveyActionBarItem.prototype, \"item\", {\n        get: function () {\n            return this.props.item;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyActionBarItem.prototype.getStateElement = function () {\n        return this.item;\n    };\n    SurveyActionBarItem.prototype.renderElement = function () {\n        return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, this.renderInnerButton());\n    };\n    SurveyActionBarItem.prototype.renderText = function () {\n        if (!this.item.hasTitle)\n            return null;\n        var titleClass = this.item.getActionBarItemTitleCss();\n        return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", { className: titleClass }, this.item.title);\n    };\n    SurveyActionBarItem.prototype.renderButtonContent = function () {\n        var text = this.renderText();\n        var svgIcon = !!this.item.iconName ? (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_svg_icon_svg_icon__WEBPACK_IMPORTED_MODULE_4__[\"SvgIcon\"], { className: this.item.cssClasses.itemIcon, size: this.item.iconSize, iconName: this.item.iconName, title: this.item.tooltip || this.item.title })) : null;\n        return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null,\n            svgIcon,\n            text));\n    };\n    SurveyActionBarItem.prototype.renderInnerButton = function () {\n        var _this = this;\n        var className = this.item.getActionBarItemCss();\n        var title = this.item.tooltip || this.item.title;\n        var buttonContent = this.renderButtonContent();\n        var tabIndex = this.item.disableTabStop ? -1 : undefined;\n        var button = Object(_reactSurvey__WEBPACK_IMPORTED_MODULE_3__[\"attachKey2click\"])(react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"button\", { className: className, type: \"button\", disabled: this.item.disabled, onClick: function (args) { return _this.item.action(_this.item, _this.item.getIsTrusted(args)); }, title: title, tabIndex: tabIndex, \"aria-checked\": this.item.ariaChecked, \"aria-expanded\": this.item.ariaExpanded, role: this.item.ariaRole }, buttonContent), this.item, { processEsc: false });\n        return button;\n    };\n    return SurveyActionBarItem;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_2__[\"SurveyElementBase\"]));\n\n_element_factory__WEBPACK_IMPORTED_MODULE_1__[\"ReactElementFactory\"].Instance.registerElement(\"sv-action-bar-item\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(SurveyActionBarItem, props);\n});\n\n\n/***/ }),\n\n/***/ \"./src/react/components/action-bar/action-bar-separator.tsx\":\n/*!******************************************************************!*\\\n  !*** ./src/react/components/action-bar/action-bar-separator.tsx ***!\n  \\******************************************************************/\n/*! exports provided: SurveyActionBarSeparator */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_525538__) {\n\n\"use strict\";\n__nested_webpack_require_525538__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_525538__.d(__nested_webpack_exports__, \"SurveyActionBarSeparator\", function() { return SurveyActionBarSeparator; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_525538__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_525538__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _element_factory__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_525538__(/*! ../../element-factory */ \"./src/react/element-factory.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\nvar SurveyActionBarSeparator = /** @class */ (function (_super) {\n    __extends(SurveyActionBarSeparator, _super);\n    function SurveyActionBarSeparator(props) {\n        return _super.call(this, props) || this;\n    }\n    SurveyActionBarSeparator.prototype.render = function () {\n        var className = \"sv-action-bar-separator \" + this.props.cssClasses;\n        return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", { className: className });\n    };\n    return SurveyActionBarSeparator;\n}(react__WEBPACK_IMPORTED_MODULE_0___default.a.Component));\n\n_element_factory__WEBPACK_IMPORTED_MODULE_1__[\"ReactElementFactory\"].Instance.registerElement(\"sv-action-bar-separator\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(SurveyActionBarSeparator, props);\n});\n\n\n/***/ }),\n\n/***/ \"./src/react/components/action-bar/action-bar.tsx\":\n/*!********************************************************!*\\\n  !*** ./src/react/components/action-bar/action-bar.tsx ***!\n  \\********************************************************/\n/*! exports provided: SurveyActionBarItemDropdown, SurveyActionBarSeparator, SurveyActionBar */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_528165__) {\n\n\"use strict\";\n__nested_webpack_require_528165__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_528165__.d(__nested_webpack_exports__, \"SurveyActionBar\", function() { return SurveyActionBar; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_528165__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_528165__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _element_factory__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_528165__(/*! ../../element-factory */ \"./src/react/element-factory.tsx\");\n/* harmony import */ var _reactquestion_element__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_528165__(/*! ../../reactquestion_element */ \"./src/react/reactquestion_element.tsx\");\n/* harmony import */ var _action_bar_item__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_528165__(/*! ./action-bar-item */ \"./src/react/components/action-bar/action-bar-item.tsx\");\n/* harmony import */ var _action_bar_item_dropdown__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_528165__(/*! ./action-bar-item-dropdown */ \"./src/react/components/action-bar/action-bar-item-dropdown.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_528165__.d(__nested_webpack_exports__, \"SurveyActionBarItemDropdown\", function() { return _action_bar_item_dropdown__WEBPACK_IMPORTED_MODULE_4__[\"SurveyActionBarItemDropdown\"]; });\n\n/* harmony import */ var _action_bar_separator__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_528165__(/*! ./action-bar-separator */ \"./src/react/components/action-bar/action-bar-separator.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_528165__.d(__nested_webpack_exports__, \"SurveyActionBarSeparator\", function() { return _action_bar_separator__WEBPACK_IMPORTED_MODULE_5__[\"SurveyActionBarSeparator\"]; });\n\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\n\nvar SurveyActionBar = /** @class */ (function (_super) {\n    __extends(SurveyActionBar, _super);\n    function SurveyActionBar(props) {\n        var _this = _super.call(this, props) || this;\n        _this.rootRef = react__WEBPACK_IMPORTED_MODULE_0___default.a.createRef();\n        return _this;\n    }\n    Object.defineProperty(SurveyActionBar.prototype, \"handleClick\", {\n        get: function () {\n            return this.props.handleClick !== undefined ? this.props.handleClick : true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyActionBar.prototype, \"model\", {\n        get: function () {\n            return this.props.model;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyActionBar.prototype.componentDidMount = function () {\n        _super.prototype.componentDidMount.call(this);\n        if (!this.model.hasActions)\n            return;\n        var container = this.rootRef.current;\n        if (!!container) {\n            this.model.initResponsivityManager(container, function (callback) { setTimeout(callback); });\n        }\n    };\n    SurveyActionBar.prototype.componentWillUnmount = function () {\n        _super.prototype.componentWillUnmount.call(this);\n        if (!!this.model.hasActions) {\n            this.model.resetResponsivityManager();\n        }\n    };\n    SurveyActionBar.prototype.componentDidUpdate = function (prevProps, prevState) {\n        _super.prototype.componentDidUpdate.call(this, prevProps, prevState);\n        if (prevProps.model == this.props.model) {\n            return;\n        }\n        if (!!this.model.hasActions) {\n            this.model.resetResponsivityManager();\n            var container = this.rootRef.current;\n            if (!!container) {\n                this.model.initResponsivityManager(container, function (callback) { setTimeout(callback); });\n            }\n        }\n    };\n    SurveyActionBar.prototype.getStateElement = function () {\n        return this.model;\n    };\n    SurveyActionBar.prototype.renderElement = function () {\n        if (!this.model.hasActions)\n            return null;\n        var items = this.renderItems();\n        return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", { ref: this.rootRef, className: this.model.getRootCss(), onClick: this.handleClick ? function (event) {\n                event.stopPropagation();\n            } : undefined }, items));\n    };\n    SurveyActionBar.prototype.renderItems = function () {\n        return this.model.renderedActions.map(function (item, itemIndex) {\n            return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_action_bar_item__WEBPACK_IMPORTED_MODULE_3__[\"SurveyAction\"], { item: item, key: \"item\" + itemIndex }));\n        });\n    };\n    return SurveyActionBar;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_2__[\"SurveyElementBase\"]));\n\n_element_factory__WEBPACK_IMPORTED_MODULE_1__[\"ReactElementFactory\"].Instance.registerElement(\"sv-action-bar\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(SurveyActionBar, props);\n});\n\n\n/***/ }),\n\n/***/ \"./src/react/components/brand-info.tsx\":\n/*!*********************************************!*\\\n  !*** ./src/react/components/brand-info.tsx ***!\n  \\*********************************************/\n/*! exports provided: BrandInfo */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_534145__) {\n\n\"use strict\";\n__nested_webpack_require_534145__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_534145__.d(__nested_webpack_exports__, \"BrandInfo\", function() { return BrandInfo; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_534145__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_534145__.n(react__WEBPACK_IMPORTED_MODULE_0__);\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\nvar BrandInfo = /** @class */ (function (_super) {\n    __extends(BrandInfo, _super);\n    function BrandInfo() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    BrandInfo.prototype.render = function () {\n        return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", { className: \"sv-brand-info\" },\n            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"a\", { className: \"sv-brand-info__logo\", href: \"https://surveyjs.io/?utm_source=built-in_links&utm_medium=online_survey_tool&utm_campaign=landing_page\" },\n                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"img\", { src: \"https://surveyjs.io/Content/Images/poweredby.svg\" })),\n            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", { className: \"sv-brand-info__text\" },\n                \"Try and see how easy it is to \",\n                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"a\", { href: \"https://surveyjs.io/create-survey?utm_source=built-in_links&utm_medium=online_survey_tool&utm_campaign=create_survey\" }, \"create a survey\")),\n            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", { className: \"sv-brand-info__terms\" },\n                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"a\", { href: \"https://surveyjs.io/TermsOfUse\" }, \"Terms of Use & Privacy Statement\"))));\n    };\n    return BrandInfo;\n}(react__WEBPACK_IMPORTED_MODULE_0___default.a.Component));\n\n\n\n/***/ }),\n\n/***/ \"./src/react/components/character-counter.tsx\":\n/*!****************************************************!*\\\n  !*** ./src/react/components/character-counter.tsx ***!\n  \\****************************************************/\n/*! exports provided: CharacterCounterComponent */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_537197__) {\n\n\"use strict\";\n__nested_webpack_require_537197__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_537197__.d(__nested_webpack_exports__, \"CharacterCounterComponent\", function() { return CharacterCounterComponent; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_537197__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_537197__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _element_factory__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_537197__(/*! ../element-factory */ \"./src/react/element-factory.tsx\");\n/* harmony import */ var _reactquestion_element__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_537197__(/*! ../reactquestion_element */ \"./src/react/reactquestion_element.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar CharacterCounterComponent = /** @class */ (function (_super) {\n    __extends(CharacterCounterComponent, _super);\n    function CharacterCounterComponent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    CharacterCounterComponent.prototype.getStateElement = function () {\n        return this.props.counter;\n    };\n    CharacterCounterComponent.prototype.renderElement = function () {\n        return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", { className: this.props.remainingCharacterCounter }, this.props.counter.remainingCharacterCounter));\n    };\n    return CharacterCounterComponent;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_2__[\"SurveyElementBase\"]));\n\n_element_factory__WEBPACK_IMPORTED_MODULE_1__[\"ReactElementFactory\"].Instance.registerElement(\"sv-character-counter\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(CharacterCounterComponent, props);\n});\n\n\n/***/ }),\n\n/***/ \"./src/react/components/components-container.tsx\":\n/*!*******************************************************!*\\\n  !*** ./src/react/components/components-container.tsx ***!\n  \\*******************************************************/\n/*! exports provided: ComponentsContainer */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_540102__) {\n\n\"use strict\";\n__nested_webpack_require_540102__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_540102__.d(__nested_webpack_exports__, \"ComponentsContainer\", function() { return ComponentsContainer; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_540102__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_540102__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _element_factory__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_540102__(/*! ../element-factory */ \"./src/react/element-factory.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\nvar ComponentsContainer = /** @class */ (function (_super) {\n    __extends(ComponentsContainer, _super);\n    function ComponentsContainer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ComponentsContainer.prototype.render = function () {\n        var _this = this;\n        var components = this.props.survey.getContainerContent(this.props.container);\n        var needRenderWrapper = this.props.needRenderWrapper === false ? false : true;\n        if (components.length == 0) {\n            return null;\n        }\n        if (!needRenderWrapper) {\n            return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, components.map(function (component) {\n                return _element_factory__WEBPACK_IMPORTED_MODULE_1__[\"ReactElementFactory\"].Instance.createElement(component.component, { survey: _this.props.survey, model: component.data, container: _this.props.container, key: component.id });\n            }));\n        }\n        return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", { className: \"sv-components-column\" }, components.map(function (component) {\n            return _element_factory__WEBPACK_IMPORTED_MODULE_1__[\"ReactElementFactory\"].Instance.createElement(component.component, { survey: _this.props.survey, model: component.data, container: _this.props.container, key: component.id });\n        }));\n    };\n    return ComponentsContainer;\n}(react__WEBPACK_IMPORTED_MODULE_0___default.a.Component));\n\n_element_factory__WEBPACK_IMPORTED_MODULE_1__[\"ReactElementFactory\"].Instance.registerElement(\"sv-components-container\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ComponentsContainer, props);\n});\n\n\n/***/ }),\n\n/***/ \"./src/react/components/file/file-choose-button.tsx\":\n/*!**********************************************************!*\\\n  !*** ./src/react/components/file/file-choose-button.tsx ***!\n  \\**********************************************************/\n/*! exports provided: SurveyFileChooseButton */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_543648__) {\n\n\"use strict\";\n__nested_webpack_require_543648__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_543648__.d(__nested_webpack_exports__, \"SurveyFileChooseButton\", function() { return SurveyFileChooseButton; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_543648__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_543648__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _reactSurvey__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_543648__(/*! ../../reactSurvey */ \"./src/react/reactSurvey.tsx\");\n/* harmony import */ var _reactquestion_element__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_543648__(/*! ../../reactquestion_element */ \"./src/react/reactquestion_element.tsx\");\n/* harmony import */ var _svg_icon_svg_icon__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_543648__(/*! ../svg-icon/svg-icon */ \"./src/react/components/svg-icon/svg-icon.tsx\");\n/* harmony import */ var _element_factory__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_543648__(/*! ../../element-factory */ \"./src/react/element-factory.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\nvar SurveyFileChooseButton = /** @class */ (function (_super) {\n    __extends(SurveyFileChooseButton, _super);\n    function SurveyFileChooseButton(props) {\n        return _super.call(this, props) || this;\n    }\n    Object.defineProperty(SurveyFileChooseButton.prototype, \"question\", {\n        get: function () {\n            return (this.props.item && this.props.item.data.question) || this.props.data.question;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyFileChooseButton.prototype.render = function () {\n        var _this = this;\n        return Object(_reactSurvey__WEBPACK_IMPORTED_MODULE_1__[\"attachKey2click\"])(react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"label\", { tabIndex: 0, className: this.question.getChooseFileCss(), htmlFor: this.question.inputId, \"aria-label\": this.question.chooseButtonText, onClick: function (e) { return _this.question.chooseFile(e.nativeEvent); } },\n            (!!this.question.cssClasses.chooseFileIconId) ? react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_svg_icon_svg_icon__WEBPACK_IMPORTED_MODULE_3__[\"SvgIcon\"], { title: this.question.chooseButtonText, iconName: this.question.cssClasses.chooseFileIconId, size: \"auto\" }) : null,\n            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", null, this.question.chooseButtonText)));\n    };\n    return SurveyFileChooseButton;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_2__[\"ReactSurveyElement\"]));\n\n_element_factory__WEBPACK_IMPORTED_MODULE_4__[\"ReactElementFactory\"].Instance.registerElement(\"sv-file-choose-btn\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(SurveyFileChooseButton, props);\n});\n\n\n/***/ }),\n\n/***/ \"./src/react/components/file/file-preview.tsx\":\n/*!****************************************************!*\\\n  !*** ./src/react/components/file/file-preview.tsx ***!\n  \\****************************************************/\n/*! exports provided: SurveyFilePreview */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_547601__) {\n\n\"use strict\";\n__nested_webpack_require_547601__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_547601__.d(__nested_webpack_exports__, \"SurveyFilePreview\", function() { return SurveyFilePreview; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_547601__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_547601__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _reactquestion_element__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_547601__(/*! ../../reactquestion_element */ \"./src/react/reactquestion_element.tsx\");\n/* harmony import */ var _svg_icon_svg_icon__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_547601__(/*! ../svg-icon/svg-icon */ \"./src/react/components/svg-icon/svg-icon.tsx\");\n/* harmony import */ var _element_factory__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_547601__(/*! ../../element-factory */ \"./src/react/element-factory.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\nvar SurveyFilePreview = /** @class */ (function (_super) {\n    __extends(SurveyFilePreview, _super);\n    function SurveyFilePreview() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(SurveyFilePreview.prototype, \"question\", {\n        get: function () {\n            return this.props.question;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyFilePreview.prototype.renderFileSign = function (className, val) {\n        var _this = this;\n        if (!className || !val.name)\n            return null;\n        return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", { className: className },\n            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"a\", { href: val.content, onClick: function (event) {\n                    _this.question.doDownloadFile(event, val);\n                }, title: val.name, download: val.name, style: { width: this.question.imageWidth } }, val.name)));\n    };\n    SurveyFilePreview.prototype.renderElement = function () {\n        var _this = this;\n        var previews = this.question.previewValue.map(function (val, index) {\n            if (!val)\n                return null;\n            return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", { key: _this.question.inputId + \"_\" + index, className: _this.question.cssClasses.preview, style: { display: _this.question.isPreviewVisible(index) ? undefined : \"none\" } },\n                _this.renderFileSign(_this.question.cssClasses.fileSign, val),\n                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", { className: _this.question.getImageWrapperCss(val) },\n                    _this.question.canPreviewImage(val) ? (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"img\", { src: val.content, style: { height: _this.question.imageHeight, width: _this.question.imageWidth }, alt: \"File preview\" })) : (_this.question.cssClasses.defaultImage ? (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_svg_icon_svg_icon__WEBPACK_IMPORTED_MODULE_2__[\"SvgIcon\"], { iconName: _this.question.cssClasses.defaultImageIconId, size: \"auto\", className: _this.question.cssClasses.defaultImage })) : null),\n                    val.name && !_this.question.isReadOnly ? (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", { className: _this.question.getRemoveButtonCss(), onClick: function () { return _this.question.doRemoveFile(val); } },\n                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", { className: _this.question.cssClasses.removeFile }, _this.question.removeFileCaption),\n                        (_this.question.cssClasses.removeFileSvgIconId) ?\n                            (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_svg_icon_svg_icon__WEBPACK_IMPORTED_MODULE_2__[\"SvgIcon\"], { title: _this.question.removeFileCaption, iconName: _this.question.cssClasses.removeFileSvgIconId, size: \"auto\", className: _this.question.cssClasses.removeFileSvg })) : null)) : null),\n                _this.renderFileSign(_this.question.cssClasses.fileSignBottom, val)));\n        });\n        return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", { className: this.question.cssClasses.fileList || undefined }, previews);\n    };\n    SurveyFilePreview.prototype.canRender = function () {\n        return this.question.showPreviewContainer;\n    };\n    return SurveyFilePreview;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_1__[\"SurveyElementBase\"]));\n\n_element_factory__WEBPACK_IMPORTED_MODULE_3__[\"ReactElementFactory\"].Instance.registerElement(\"sv-file-preview\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(SurveyFilePreview, props);\n});\n\n\n/***/ }),\n\n/***/ \"./src/react/components/header.tsx\":\n/*!*****************************************!*\\\n  !*** ./src/react/components/header.tsx ***!\n  \\*****************************************/\n/*! exports provided: HeaderMobile, HeaderCell, Header */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_553454__) {\n\n\"use strict\";\n__nested_webpack_require_553454__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_553454__.d(__nested_webpack_exports__, \"HeaderMobile\", function() { return HeaderMobile; });\n/* harmony export (binding) */ __nested_webpack_require_553454__.d(__nested_webpack_exports__, \"HeaderCell\", function() { return HeaderCell; });\n/* harmony export (binding) */ __nested_webpack_require_553454__.d(__nested_webpack_exports__, \"Header\", function() { return Header; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_553454__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_553454__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _reactquestion_element__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_553454__(/*! ../reactquestion_element */ \"./src/react/reactquestion_element.tsx\");\n/* harmony import */ var _element_factory__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_553454__(/*! ../element-factory */ \"./src/react/element-factory.tsx\");\n/* harmony import */ var _title_title_element__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_553454__(/*! ./title/title-element */ \"./src/react/components/title/title-element.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\nvar HeaderMobile = /** @class */ (function (_super) {\n    __extends(HeaderMobile, _super);\n    function HeaderMobile() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(HeaderMobile.prototype, \"model\", {\n        get: function () {\n            return this.props.model;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    HeaderMobile.prototype.renderLogoImage = function () {\n        var componentName = this.model.survey.getElementWrapperComponentName(this.model.survey, \"logo-image\");\n        var componentData = this.model.survey.getElementWrapperComponentData(this.model.survey, \"logo-image\");\n        return _element_factory__WEBPACK_IMPORTED_MODULE_2__[\"ReactElementFactory\"].Instance.createElement(componentName, {\n            data: componentData,\n        });\n    };\n    HeaderMobile.prototype.render = function () {\n        return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", { className: \"sv-header--mobile\" },\n            this.model.survey.hasLogo ? (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", { className: \"sv-header__logo\" }, this.renderLogoImage())) : null,\n            this.model.survey.hasTitle ? (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", { className: \"sv-header__title\", style: { maxWidth: this.model.textAreaWidth } },\n                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_title_title_element__WEBPACK_IMPORTED_MODULE_3__[\"TitleElement\"], { element: this.model.survey }))) : null,\n            this.model.survey.renderedHasDescription ? (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", { className: \"sv-header__description\", style: { maxWidth: this.model.textAreaWidth } },\n                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", { className: this.model.survey.css.description }, _reactquestion_element__WEBPACK_IMPORTED_MODULE_1__[\"SurveyElementBase\"].renderLocString(this.model.survey.locDescription)))) : null));\n    };\n    return HeaderMobile;\n}(react__WEBPACK_IMPORTED_MODULE_0___default.a.Component));\n\nvar HeaderCell = /** @class */ (function (_super) {\n    __extends(HeaderCell, _super);\n    function HeaderCell() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(HeaderCell.prototype, \"model\", {\n        get: function () {\n            return this.props.model;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    HeaderCell.prototype.renderLogoImage = function () {\n        var componentName = this.model.survey.getElementWrapperComponentName(this.model.survey, \"logo-image\");\n        var componentData = this.model.survey.getElementWrapperComponentData(this.model.survey, \"logo-image\");\n        return _element_factory__WEBPACK_IMPORTED_MODULE_2__[\"ReactElementFactory\"].Instance.createElement(componentName, {\n            data: componentData,\n        });\n    };\n    HeaderCell.prototype.render = function () {\n        return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", { className: this.model.css, style: this.model.style },\n            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", { className: \"sv-header__cell-content\", style: this.model.contentStyle },\n                this.model.showLogo ? (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", { className: \"sv-header__logo\" }, this.renderLogoImage())) : null,\n                this.model.showTitle ? (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", { className: \"sv-header__title\", style: { maxWidth: this.model.textAreaWidth } },\n                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_title_title_element__WEBPACK_IMPORTED_MODULE_3__[\"TitleElement\"], { element: this.model.survey }))) : null,\n                this.model.showDescription ? (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", { className: \"sv-header__description\", style: { maxWidth: this.model.textAreaWidth } },\n                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", { className: this.model.survey.css.description }, _reactquestion_element__WEBPACK_IMPORTED_MODULE_1__[\"SurveyElementBase\"].renderLocString(this.model.survey.locDescription)))) : null)));\n    };\n    return HeaderCell;\n}(react__WEBPACK_IMPORTED_MODULE_0___default.a.Component));\n\nvar Header = /** @class */ (function (_super) {\n    __extends(Header, _super);\n    function Header() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Header.prototype, \"model\", {\n        get: function () {\n            return this.props.model;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Header.prototype.getStateElement = function () {\n        return this.model;\n    };\n    Header.prototype.renderElement = function () {\n        this.model.survey = this.props.survey;\n        if (!(this.props.survey.headerView === \"advanced\")) {\n            return null;\n        }\n        var headerContent = null;\n        if (this.props.survey.isMobile) {\n            headerContent = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(HeaderMobile, { model: this.model });\n        }\n        else {\n            headerContent = (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", { className: this.model.contentClasses, style: { maxWidth: this.model.maxWidth } }, this.model.cells.map(function (cell, index) { return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(HeaderCell, { key: index, model: cell }); })));\n        }\n        return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", { className: this.model.headerClasses, style: { height: this.model.renderedHeight } },\n            this.model.backgroundImage ? react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", { style: this.model.backgroundImageStyle, className: this.model.backgroundImageClasses }) : null,\n            headerContent));\n    };\n    return Header;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_1__[\"SurveyElementBase\"]));\n\n_element_factory__WEBPACK_IMPORTED_MODULE_2__[\"ReactElementFactory\"].Instance.registerElement(\"sv-header\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Header, props);\n});\n\n\n/***/ }),\n\n/***/ \"./src/react/components/list/list-item.tsx\":\n/*!*************************************************!*\\\n  !*** ./src/react/components/list/list-item.tsx ***!\n  \\*************************************************/\n/*! exports provided: ListItem */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_562132__) {\n\n\"use strict\";\n__nested_webpack_require_562132__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_562132__.d(__nested_webpack_exports__, \"ListItem\", function() { return ListItem; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_562132__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_562132__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _element_factory__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_562132__(/*! ../../element-factory */ \"./src/react/element-factory.tsx\");\n/* harmony import */ var _reactquestion_element__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_562132__(/*! ../../reactquestion_element */ \"./src/react/reactquestion_element.tsx\");\n/* harmony import */ var _reactSurvey__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_562132__(/*! ../../reactSurvey */ \"./src/react/reactSurvey.tsx\");\n/* harmony import */ var _svg_icon_svg_icon__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_562132__(/*! ../svg-icon/svg-icon */ \"./src/react/components/svg-icon/svg-icon.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\nvar ListItem = /** @class */ (function (_super) {\n    __extends(ListItem, _super);\n    function ListItem() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.handleKeydown = function (event) {\n            _this.model.onKeyDown(event);\n        };\n        return _this;\n    }\n    Object.defineProperty(ListItem.prototype, \"model\", {\n        get: function () {\n            return this.props.model;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ListItem.prototype, \"item\", {\n        get: function () {\n            return this.props.item;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ListItem.prototype.getStateElement = function () {\n        return this.item;\n    };\n    ListItem.prototype.render = function () {\n        var _this = this;\n        if (!this.item)\n            return null;\n        var contentWrapStyle = {\n            paddingInlineStart: this.model.getItemIndent(this.item)\n        };\n        var className = this.model.getItemClass(this.item);\n        var content = [];\n        if (!this.item.component) {\n            var text = this.renderLocString(this.item.locTitle, undefined, \"locString\");\n            if (this.item.iconName) {\n                var icon = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_svg_icon_svg_icon__WEBPACK_IMPORTED_MODULE_4__[\"SvgIcon\"], { key: 1, className: this.model.cssClasses.itemIcon, iconName: this.item.iconName, size: this.item.iconSize, \"aria-label\": this.item.title });\n                content.push(icon);\n                content.push(react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", { key: 2 }, text));\n            }\n            else {\n                content.push(text);\n            }\n        }\n        else {\n            var newElement = _element_factory__WEBPACK_IMPORTED_MODULE_1__[\"ReactElementFactory\"].Instance.createElement(this.item.component, { item: this.item, key: this.item.id });\n            if (!!newElement) {\n                content.push(newElement);\n            }\n        }\n        var contentWrap = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", { style: contentWrapStyle, className: this.model.cssClasses.itemBody, title: this.item.locTitle.calculatedText }, content);\n        var separator = this.item.needSeparator ? react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", { className: this.model.cssClasses.itemSeparator }) : null;\n        var isVisible = this.model.isItemVisible(this.item);\n        var style = {\n            display: isVisible ? null : \"none\"\n        };\n        return Object(_reactSurvey__WEBPACK_IMPORTED_MODULE_3__[\"attachKey2click\"])(react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"li\", { className: className, role: \"option\", style: style, id: this.item.elementId, \"aria-selected\": this.model.isItemSelected(this.item), onClick: function (event) {\n                _this.model.onItemClick(_this.item);\n                event.stopPropagation();\n            }, onPointerDown: function (event) { return _this.model.onPointerDown(event, _this.item); } },\n            separator,\n            contentWrap));\n    };\n    ListItem.prototype.componentDidMount = function () {\n        _super.prototype.componentDidMount.call(this);\n        this.model.onLastItemRended(this.item);\n    };\n    return ListItem;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_2__[\"SurveyElementBase\"]));\n\n_element_factory__WEBPACK_IMPORTED_MODULE_1__[\"ReactElementFactory\"].Instance.registerElement(\"sv-list-item\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ListItem, props);\n});\n\n\n/***/ }),\n\n/***/ \"./src/react/components/list/list.tsx\":\n/*!********************************************!*\\\n  !*** ./src/react/components/list/list.tsx ***!\n  \\********************************************/\n/*! exports provided: List */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_567987__) {\n\n\"use strict\";\n__nested_webpack_require_567987__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_567987__.d(__nested_webpack_exports__, \"List\", function() { return List; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_567987__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_567987__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var survey_core__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_567987__(/*! survey-core */ \"survey-core\");\n/* harmony import */ var survey_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__nested_webpack_require_567987__.n(survey_core__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _element_factory__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_567987__(/*! ../../element-factory */ \"./src/react/element-factory.tsx\");\n/* harmony import */ var _reactquestion_element__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_567987__(/*! ../../reactquestion_element */ \"./src/react/reactquestion_element.tsx\");\n/* harmony import */ var _svg_icon_svg_icon__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_567987__(/*! ../svg-icon/svg-icon */ \"./src/react/components/svg-icon/svg-icon.tsx\");\n/* harmony import */ var _list_item__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_567987__(/*! ./list-item */ \"./src/react/components/list/list-item.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\n\nvar List = /** @class */ (function (_super) {\n    __extends(List, _super);\n    function List(props) {\n        var _this = _super.call(this, props) || this;\n        _this.handleKeydown = function (event) {\n            _this.model.onKeyDown(event);\n        };\n        _this.handleMouseMove = function (event) {\n            _this.model.onMouseMove(event);\n        };\n        _this.state = {\n            filterString: _this.model.filterString || \"\"\n        };\n        _this.listContainerRef = react__WEBPACK_IMPORTED_MODULE_0___default.a.createRef();\n        return _this;\n    }\n    Object.defineProperty(List.prototype, \"model\", {\n        get: function () {\n            return this.props.model;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    List.prototype.getStateElement = function () {\n        return this.model;\n    };\n    List.prototype.componentDidMount = function () {\n        _super.prototype.componentDidMount.call(this);\n        if (!!this.listContainerRef && !!this.listContainerRef.current) {\n            this.model.initListContainerHtmlElement(this.listContainerRef.current);\n        }\n    };\n    List.prototype.componentWillUnmount = function () {\n        _super.prototype.componentWillUnmount.call(this);\n        if (!!this.model) {\n            this.model.initListContainerHtmlElement(undefined);\n        }\n    };\n    List.prototype.renderElement = function () {\n        return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", { className: this.model.cssClasses.root, ref: this.listContainerRef },\n            this.searchElementContent(),\n            this.emptyContent(),\n            this.renderList()));\n    };\n    List.prototype.renderList = function () {\n        if (!this.model.renderElements)\n            return null;\n        var items = this.renderItems();\n        var ulStyle = { display: this.model.isEmpty ? \"none\" : null };\n        return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"ul\", { className: this.model.getListClass(), style: ulStyle, role: \"listbox\", id: this.model.elementId, onMouseDown: function (e) {\n                e.preventDefault();\n            }, onKeyDown: this.handleKeydown, onMouseMove: this.handleMouseMove }, items));\n    };\n    List.prototype.renderItems = function () {\n        var _this = this;\n        if (!this.model) {\n            return null;\n        }\n        var items = this.model.renderedActions;\n        if (!items) {\n            return null;\n        }\n        return items.map(function (item, itemIndex) {\n            return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_list_item__WEBPACK_IMPORTED_MODULE_5__[\"ListItem\"], { model: _this.model, item: item, key: \"item\" + itemIndex }));\n        });\n    };\n    List.prototype.searchElementContent = function () {\n        var _this = this;\n        if (!this.model.showFilter)\n            return null;\n        else {\n            var onChange = function (e) {\n                var root = survey_core__WEBPACK_IMPORTED_MODULE_1__[\"settings\"].environment.root;\n                if (e.target === root.activeElement) {\n                    _this.model.filterString = e.target.value;\n                }\n            };\n            var onKeyUp = function (e) {\n                _this.model.goToItems(e);\n            };\n            var clearButton = this.model.showSearchClearButton && !!this.model.filterString ?\n                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"button\", { className: this.model.cssClasses.searchClearButtonIcon, onClick: function (event) { _this.model.onClickSearchClearButton(event); } },\n                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_svg_icon_svg_icon__WEBPACK_IMPORTED_MODULE_4__[\"SvgIcon\"], { iconName: \"icon-searchclear\", size: \"auto\" })) : null;\n            return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", { className: this.model.cssClasses.filter },\n                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", { className: this.model.cssClasses.filterIcon },\n                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_svg_icon_svg_icon__WEBPACK_IMPORTED_MODULE_4__[\"SvgIcon\"], { iconName: \"icon-search\", size: \"auto\" })),\n                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"input\", { type: \"text\", className: this.model.cssClasses.filterInput, \"aria-label\": this.model.filterStringPlaceholder, placeholder: this.model.filterStringPlaceholder, value: this.state.filterString, onKeyUp: onKeyUp, onChange: onChange }),\n                clearButton));\n        }\n    };\n    List.prototype.emptyContent = function () {\n        var style = { display: this.model.isEmpty ? null : \"none\" };\n        return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", { className: this.model.cssClasses.emptyContainer, style: style },\n            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", { className: this.model.cssClasses.emptyText, \"aria-label\": this.model.emptyMessage }, this.model.emptyMessage)));\n    };\n    return List;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_3__[\"SurveyElementBase\"]));\n\n_element_factory__WEBPACK_IMPORTED_MODULE_2__[\"ReactElementFactory\"].Instance.registerElement(\"sv-list\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(List, props);\n});\n\n\n/***/ }),\n\n/***/ \"./src/react/components/loading-indicator.tsx\":\n/*!****************************************************!*\\\n  !*** ./src/react/components/loading-indicator.tsx ***!\n  \\****************************************************/\n/*! exports provided: LoadingIndicatorComponent */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_575867__) {\n\n\"use strict\";\n__nested_webpack_require_575867__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_575867__.d(__nested_webpack_exports__, \"LoadingIndicatorComponent\", function() { return LoadingIndicatorComponent; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_575867__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_575867__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _svg_icon_svg_icon__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_575867__(/*! ./svg-icon/svg-icon */ \"./src/react/components/svg-icon/svg-icon.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\nvar LoadingIndicatorComponent = /** @class */ (function (_super) {\n    __extends(LoadingIndicatorComponent, _super);\n    function LoadingIndicatorComponent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    LoadingIndicatorComponent.prototype.render = function () {\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: \"sd-loading-indicator\" },\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_svg_icon_svg_icon__WEBPACK_IMPORTED_MODULE_1__[\"SvgIcon\"], { iconName: \"icon-loading\", size: \"auto\" })));\n    };\n    return LoadingIndicatorComponent;\n}(react__WEBPACK_IMPORTED_MODULE_0__[\"Component\"]));\n\n\n\n/***/ }),\n\n/***/ \"./src/react/components/matrix-actions/detail-button/detail-button.tsx\":\n/*!*****************************************************************************!*\\\n  !*** ./src/react/components/matrix-actions/detail-button/detail-button.tsx ***!\n  \\*****************************************************************************/\n/*! exports provided: SurveyQuestionMatrixDetailButton */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_578425__) {\n\n\"use strict\";\n__nested_webpack_require_578425__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_578425__.d(__nested_webpack_exports__, \"SurveyQuestionMatrixDetailButton\", function() { return SurveyQuestionMatrixDetailButton; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_578425__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_578425__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _element_factory__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_578425__(/*! ../../../element-factory */ \"./src/react/element-factory.tsx\");\n/* harmony import */ var _reactquestion_element__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_578425__(/*! ../../../reactquestion_element */ \"./src/react/reactquestion_element.tsx\");\n/* harmony import */ var _svg_icon_svg_icon__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_578425__(/*! ../../svg-icon/svg-icon */ \"./src/react/components/svg-icon/svg-icon.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\nvar SurveyQuestionMatrixDetailButton = /** @class */ (function (_super) {\n    __extends(SurveyQuestionMatrixDetailButton, _super);\n    function SurveyQuestionMatrixDetailButton(props) {\n        var _this = _super.call(this, props) || this;\n        _this.handleOnShowHideClick = _this.handleOnShowHideClick.bind(_this);\n        return _this;\n    }\n    SurveyQuestionMatrixDetailButton.prototype.getStateElement = function () {\n        return this.props.item;\n    };\n    Object.defineProperty(SurveyQuestionMatrixDetailButton.prototype, \"item\", {\n        get: function () {\n            return this.props.item;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionMatrixDetailButton.prototype, \"question\", {\n        get: function () {\n            return this.props.item.data.question;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionMatrixDetailButton.prototype, \"row\", {\n        get: function () {\n            return this.props.item.data.row;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionMatrixDetailButton.prototype.handleOnShowHideClick = function (event) {\n        this.row.showHideDetailPanelClick();\n    };\n    SurveyQuestionMatrixDetailButton.prototype.renderElement = function () {\n        var isExpanded = this.row.isDetailPanelShowing;\n        var ariaExpanded = isExpanded;\n        var ariaControls = isExpanded ? this.row.detailPanelId : undefined;\n        return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"button\", { type: \"button\", onClick: this.handleOnShowHideClick, className: this.question.getDetailPanelButtonCss(this.row), \"aria-expanded\": ariaExpanded, \"aria-controls\": ariaControls },\n            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_svg_icon_svg_icon__WEBPACK_IMPORTED_MODULE_3__[\"SvgIcon\"], { className: this.question.getDetailPanelIconCss(this.row), iconName: this.question.getDetailPanelIconId(this.row), size: \"auto\" })));\n    };\n    return SurveyQuestionMatrixDetailButton;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_2__[\"ReactSurveyElement\"]));\n\n_element_factory__WEBPACK_IMPORTED_MODULE_1__[\"ReactElementFactory\"].Instance.registerElement(\"sv-matrix-detail-button\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(SurveyQuestionMatrixDetailButton, props);\n});\n\n\n/***/ }),\n\n/***/ \"./src/react/components/matrix-actions/drag-drop-icon/drag-drop-icon.tsx\":\n/*!*******************************************************************************!*\\\n  !*** ./src/react/components/matrix-actions/drag-drop-icon/drag-drop-icon.tsx ***!\n  \\*******************************************************************************/\n/*! exports provided: SurveyQuestionMatrixDynamicDragDropIcon */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_583119__) {\n\n\"use strict\";\n__nested_webpack_require_583119__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_583119__.d(__nested_webpack_exports__, \"SurveyQuestionMatrixDynamicDragDropIcon\", function() { return SurveyQuestionMatrixDynamicDragDropIcon; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_583119__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_583119__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _element_factory__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_583119__(/*! ../../../element-factory */ \"./src/react/element-factory.tsx\");\n/* harmony import */ var _reactquestion_element__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_583119__(/*! ../../../reactquestion_element */ \"./src/react/reactquestion_element.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar SurveyQuestionMatrixDynamicDragDropIcon = /** @class */ (function (_super) {\n    __extends(SurveyQuestionMatrixDynamicDragDropIcon, _super);\n    function SurveyQuestionMatrixDynamicDragDropIcon() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(SurveyQuestionMatrixDynamicDragDropIcon.prototype, \"question\", {\n        get: function () {\n            return this.props.item.data.question;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionMatrixDynamicDragDropIcon.prototype.renderElement = function () {\n        if (this.question.iconDragElement) {\n            return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"svg\", { className: this.question.cssClasses.dragElementDecorator },\n                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"use\", { xlinkHref: this.question.iconDragElement })));\n        }\n        else {\n            return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", { className: this.question.cssClasses.iconDrag }));\n        }\n    };\n    return SurveyQuestionMatrixDynamicDragDropIcon;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_2__[\"ReactSurveyElement\"]));\n\n_element_factory__WEBPACK_IMPORTED_MODULE_1__[\"ReactElementFactory\"].Instance.registerElement(\"sv-matrix-drag-drop-icon\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(SurveyQuestionMatrixDynamicDragDropIcon, props);\n});\n\n\n/***/ }),\n\n/***/ \"./src/react/components/matrix-actions/remove-button/remove-button.tsx\":\n/*!*****************************************************************************!*\\\n  !*** ./src/react/components/matrix-actions/remove-button/remove-button.tsx ***!\n  \\*****************************************************************************/\n/*! exports provided: SurveyQuestionMatrixDynamicRemoveButton */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_586703__) {\n\n\"use strict\";\n__nested_webpack_require_586703__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_586703__.d(__nested_webpack_exports__, \"SurveyQuestionMatrixDynamicRemoveButton\", function() { return SurveyQuestionMatrixDynamicRemoveButton; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_586703__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_586703__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _element_factory__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_586703__(/*! ../../../element-factory */ \"./src/react/element-factory.tsx\");\n/* harmony import */ var _reactquestion_element__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_586703__(/*! ../../../reactquestion_element */ \"./src/react/reactquestion_element.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar SurveyQuestionMatrixDynamicRemoveButton = /** @class */ (function (_super) {\n    __extends(SurveyQuestionMatrixDynamicRemoveButton, _super);\n    function SurveyQuestionMatrixDynamicRemoveButton(props) {\n        var _this = _super.call(this, props) || this;\n        _this.handleOnRowRemoveClick = _this.handleOnRowRemoveClick.bind(_this);\n        return _this;\n    }\n    Object.defineProperty(SurveyQuestionMatrixDynamicRemoveButton.prototype, \"question\", {\n        get: function () {\n            return this.props.item.data.question;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionMatrixDynamicRemoveButton.prototype, \"row\", {\n        get: function () {\n            return this.props.item.data.row;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionMatrixDynamicRemoveButton.prototype.handleOnRowRemoveClick = function (event) {\n        this.question.removeRowUI(this.row);\n    };\n    SurveyQuestionMatrixDynamicRemoveButton.prototype.renderElement = function () {\n        var removeRowText = this.renderLocString(this.question.locRemoveRowText);\n        return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"button\", { className: this.question.getRemoveRowButtonCss(), type: \"button\", onClick: this.handleOnRowRemoveClick, disabled: this.question.isInputReadOnly },\n            removeRowText,\n            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", { className: this.question.cssClasses.iconRemove })));\n    };\n    return SurveyQuestionMatrixDynamicRemoveButton;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_2__[\"ReactSurveyElement\"]));\n\n_element_factory__WEBPACK_IMPORTED_MODULE_1__[\"ReactElementFactory\"].Instance.registerElement(\"sv-matrix-remove-button\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(SurveyQuestionMatrixDynamicRemoveButton, props);\n});\n\n\n/***/ }),\n\n/***/ \"./src/react/components/matrix/row.tsx\":\n/*!*********************************************!*\\\n  !*** ./src/react/components/matrix/row.tsx ***!\n  \\*********************************************/\n/*! exports provided: MatrixRow */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_590577__) {\n\n\"use strict\";\n__nested_webpack_require_590577__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_590577__.d(__nested_webpack_exports__, \"MatrixRow\", function() { return MatrixRow; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_590577__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_590577__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _element_factory__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_590577__(/*! ../../element-factory */ \"./src/react/element-factory.tsx\");\n/* harmony import */ var _reactquestion_element__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_590577__(/*! ../../reactquestion_element */ \"./src/react/reactquestion_element.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar MatrixRow = /** @class */ (function (_super) {\n    __extends(MatrixRow, _super);\n    function MatrixRow(props) {\n        var _this = _super.call(this, props) || this;\n        _this.onPointerDownHandler = function (event) {\n            _this.parentMatrix.onPointerDown(event.nativeEvent, _this.model.row);\n        };\n        return _this;\n    }\n    Object.defineProperty(MatrixRow.prototype, \"model\", {\n        get: function () {\n            return this.props.model;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MatrixRow.prototype, \"parentMatrix\", {\n        get: function () {\n            return this.props.parentMatrix;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MatrixRow.prototype.getStateElement = function () {\n        return this.model;\n    };\n    MatrixRow.prototype.render = function () {\n        var _this = this;\n        var model = this.model;\n        if (!model.visible)\n            return null;\n        return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"tr\", { className: model.className, \"data-sv-drop-target-matrix-row\": model.row && model.row.id, onPointerDown: function (event) { return _this.onPointerDownHandler(event); } }, this.props.children));\n    };\n    return MatrixRow;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_2__[\"SurveyElementBase\"]));\n\n_element_factory__WEBPACK_IMPORTED_MODULE_1__[\"ReactElementFactory\"].Instance.registerElement(\"sv-matrix-row\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(MatrixRow, props);\n});\n\n\n/***/ }),\n\n/***/ \"./src/react/components/notifier.tsx\":\n/*!*******************************************!*\\\n  !*** ./src/react/components/notifier.tsx ***!\n  \\*******************************************/\n/*! exports provided: NotifierComponent */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_594037__) {\n\n\"use strict\";\n__nested_webpack_require_594037__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_594037__.d(__nested_webpack_exports__, \"NotifierComponent\", function() { return NotifierComponent; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_594037__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_594037__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _reactquestion_element__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_594037__(/*! ../reactquestion_element */ \"./src/react/reactquestion_element.tsx\");\n/* harmony import */ var _element_factory__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_594037__(/*! ../element-factory */ \"./src/react/element-factory.tsx\");\n/* harmony import */ var _action_bar_action_bar__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_594037__(/*! ./action-bar/action-bar */ \"./src/react/components/action-bar/action-bar.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\nvar NotifierComponent = /** @class */ (function (_super) {\n    __extends(NotifierComponent, _super);\n    function NotifierComponent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(NotifierComponent.prototype, \"notifier\", {\n        get: function () {\n            return this.props.notifier;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    NotifierComponent.prototype.getStateElement = function () {\n        return this.notifier;\n    };\n    NotifierComponent.prototype.renderElement = function () {\n        if (!this.notifier.isDisplayed)\n            return null;\n        var style = { visibility: this.notifier.active ? \"visible\" : \"hidden\" };\n        return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", { className: this.notifier.css, style: style, role: \"alert\", \"aria-live\": \"polite\" },\n            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", null, this.notifier.message),\n            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_action_bar_action_bar__WEBPACK_IMPORTED_MODULE_3__[\"SurveyActionBar\"], { model: this.notifier.actionBar })));\n    };\n    return NotifierComponent;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_1__[\"SurveyElementBase\"]));\n\n_element_factory__WEBPACK_IMPORTED_MODULE_2__[\"ReactElementFactory\"].Instance.registerElement(\"sv-notifier\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(NotifierComponent, props);\n});\n\n\n/***/ }),\n\n/***/ \"./src/react/components/paneldynamic-actions/paneldynamic-add-btn.tsx\":\n/*!****************************************************************************!*\\\n  !*** ./src/react/components/paneldynamic-actions/paneldynamic-add-btn.tsx ***!\n  \\****************************************************************************/\n/*! exports provided: SurveyQuestionPanelDynamicAction, SurveyQuestionPanelDynamicAddButton */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_597805__) {\n\n\"use strict\";\n__nested_webpack_require_597805__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_597805__.d(__nested_webpack_exports__, \"SurveyQuestionPanelDynamicAction\", function() { return SurveyQuestionPanelDynamicAction; });\n/* harmony export (binding) */ __nested_webpack_require_597805__.d(__nested_webpack_exports__, \"SurveyQuestionPanelDynamicAddButton\", function() { return SurveyQuestionPanelDynamicAddButton; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_597805__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_597805__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _element_factory__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_597805__(/*! ../../element-factory */ \"./src/react/element-factory.tsx\");\n/* harmony import */ var _reactquestion_element__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_597805__(/*! ../../reactquestion_element */ \"./src/react/reactquestion_element.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar SurveyQuestionPanelDynamicAction = /** @class */ (function (_super) {\n    __extends(SurveyQuestionPanelDynamicAction, _super);\n    function SurveyQuestionPanelDynamicAction(props) {\n        return _super.call(this, props) || this;\n    }\n    Object.defineProperty(SurveyQuestionPanelDynamicAction.prototype, \"data\", {\n        get: function () {\n            return (this.props.item && this.props.item.data) || this.props.data;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionPanelDynamicAction.prototype, \"question\", {\n        get: function () {\n            return (this.props.item && this.props.item.data.question) || this.props.data.question;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return SurveyQuestionPanelDynamicAction;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_2__[\"ReactSurveyElement\"]));\n\nvar SurveyQuestionPanelDynamicAddButton = /** @class */ (function (_super) {\n    __extends(SurveyQuestionPanelDynamicAddButton, _super);\n    function SurveyQuestionPanelDynamicAddButton() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.handleClick = function (event) {\n            _this.question.addPanelUI();\n        };\n        return _this;\n    }\n    SurveyQuestionPanelDynamicAddButton.prototype.renderElement = function () {\n        if (!this.question.canAddPanel)\n            return null;\n        var btnText = this.renderLocString(this.question.locPanelAddText);\n        return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"button\", { type: \"button\", className: this.question.getAddButtonCss(), onClick: this.handleClick },\n            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", { className: this.question.cssClasses.buttonAddText }, btnText)));\n    };\n    return SurveyQuestionPanelDynamicAddButton;\n}(SurveyQuestionPanelDynamicAction));\n\n_element_factory__WEBPACK_IMPORTED_MODULE_1__[\"ReactElementFactory\"].Instance.registerElement(\"sv-paneldynamic-add-btn\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(SurveyQuestionPanelDynamicAddButton, props);\n});\n\n\n/***/ }),\n\n/***/ \"./src/react/components/paneldynamic-actions/paneldynamic-next-btn.tsx\":\n/*!*****************************************************************************!*\\\n  !*** ./src/react/components/paneldynamic-actions/paneldynamic-next-btn.tsx ***!\n  \\*****************************************************************************/\n/*! exports provided: SurveyQuestionPanelDynamicNextButton */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_602233__) {\n\n\"use strict\";\n__nested_webpack_require_602233__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_602233__.d(__nested_webpack_exports__, \"SurveyQuestionPanelDynamicNextButton\", function() { return SurveyQuestionPanelDynamicNextButton; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_602233__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_602233__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _element_factory__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_602233__(/*! ../../element-factory */ \"./src/react/element-factory.tsx\");\n/* harmony import */ var _svg_icon_svg_icon__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_602233__(/*! ../svg-icon/svg-icon */ \"./src/react/components/svg-icon/svg-icon.tsx\");\n/* harmony import */ var _paneldynamic_add_btn__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_602233__(/*! ./paneldynamic-add-btn */ \"./src/react/components/paneldynamic-actions/paneldynamic-add-btn.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\nvar SurveyQuestionPanelDynamicNextButton = /** @class */ (function (_super) {\n    __extends(SurveyQuestionPanelDynamicNextButton, _super);\n    function SurveyQuestionPanelDynamicNextButton() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.handleClick = function (event) {\n            _this.question.goToNextPanel();\n        };\n        return _this;\n    }\n    SurveyQuestionPanelDynamicNextButton.prototype.renderElement = function () {\n        return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", { title: this.question.panelNextText, onClick: this.handleClick, className: this.question.getNextButtonCss() },\n            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_svg_icon_svg_icon__WEBPACK_IMPORTED_MODULE_2__[\"SvgIcon\"], { iconName: this.question.cssClasses.progressBtnIcon, size: \"auto\" })));\n    };\n    return SurveyQuestionPanelDynamicNextButton;\n}(_paneldynamic_add_btn__WEBPACK_IMPORTED_MODULE_3__[\"SurveyQuestionPanelDynamicAction\"]));\n\n_element_factory__WEBPACK_IMPORTED_MODULE_1__[\"ReactElementFactory\"].Instance.registerElement(\"sv-paneldynamic-next-btn\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(SurveyQuestionPanelDynamicNextButton, props);\n});\n\n\n/***/ }),\n\n/***/ \"./src/react/components/paneldynamic-actions/paneldynamic-prev-btn.tsx\":\n/*!*****************************************************************************!*\\\n  !*** ./src/react/components/paneldynamic-actions/paneldynamic-prev-btn.tsx ***!\n  \\*****************************************************************************/\n/*! exports provided: SurveyQuestionPanelDynamicPrevButton */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_605783__) {\n\n\"use strict\";\n__nested_webpack_require_605783__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_605783__.d(__nested_webpack_exports__, \"SurveyQuestionPanelDynamicPrevButton\", function() { return SurveyQuestionPanelDynamicPrevButton; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_605783__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_605783__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _element_factory__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_605783__(/*! ../../element-factory */ \"./src/react/element-factory.tsx\");\n/* harmony import */ var _svg_icon_svg_icon__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_605783__(/*! ../svg-icon/svg-icon */ \"./src/react/components/svg-icon/svg-icon.tsx\");\n/* harmony import */ var _paneldynamic_add_btn__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_605783__(/*! ./paneldynamic-add-btn */ \"./src/react/components/paneldynamic-actions/paneldynamic-add-btn.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\nvar SurveyQuestionPanelDynamicPrevButton = /** @class */ (function (_super) {\n    __extends(SurveyQuestionPanelDynamicPrevButton, _super);\n    function SurveyQuestionPanelDynamicPrevButton() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.handleClick = function (event) {\n            _this.question.goToPrevPanel();\n        };\n        return _this;\n    }\n    SurveyQuestionPanelDynamicPrevButton.prototype.renderElement = function () {\n        return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", { title: this.question.panelPrevText, onClick: this.handleClick, className: this.question.getPrevButtonCss() },\n            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_svg_icon_svg_icon__WEBPACK_IMPORTED_MODULE_2__[\"SvgIcon\"], { iconName: this.question.cssClasses.progressBtnIcon, size: \"auto\" })));\n    };\n    return SurveyQuestionPanelDynamicPrevButton;\n}(_paneldynamic_add_btn__WEBPACK_IMPORTED_MODULE_3__[\"SurveyQuestionPanelDynamicAction\"]));\n\n_element_factory__WEBPACK_IMPORTED_MODULE_1__[\"ReactElementFactory\"].Instance.registerElement(\"sv-paneldynamic-prev-btn\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(SurveyQuestionPanelDynamicPrevButton, props);\n});\n\n\n/***/ }),\n\n/***/ \"./src/react/components/paneldynamic-actions/paneldynamic-progress-text.tsx\":\n/*!**********************************************************************************!*\\\n  !*** ./src/react/components/paneldynamic-actions/paneldynamic-progress-text.tsx ***!\n  \\**********************************************************************************/\n/*! exports provided: SurveyQuestionPanelDynamicProgressText */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_609355__) {\n\n\"use strict\";\n__nested_webpack_require_609355__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_609355__.d(__nested_webpack_exports__, \"SurveyQuestionPanelDynamicProgressText\", function() { return SurveyQuestionPanelDynamicProgressText; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_609355__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_609355__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _element_factory__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_609355__(/*! ../../element-factory */ \"./src/react/element-factory.tsx\");\n/* harmony import */ var _paneldynamic_add_btn__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_609355__(/*! ./paneldynamic-add-btn */ \"./src/react/components/paneldynamic-actions/paneldynamic-add-btn.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar SurveyQuestionPanelDynamicProgressText = /** @class */ (function (_super) {\n    __extends(SurveyQuestionPanelDynamicProgressText, _super);\n    function SurveyQuestionPanelDynamicProgressText() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SurveyQuestionPanelDynamicProgressText.prototype.renderElement = function () {\n        return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", { className: this.question.cssClasses.progressText }, this.question.progressText));\n    };\n    return SurveyQuestionPanelDynamicProgressText;\n}(_paneldynamic_add_btn__WEBPACK_IMPORTED_MODULE_2__[\"SurveyQuestionPanelDynamicAction\"]));\n\n_element_factory__WEBPACK_IMPORTED_MODULE_1__[\"ReactElementFactory\"].Instance.registerElement(\"sv-paneldynamic-progress-text\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(SurveyQuestionPanelDynamicProgressText, props);\n});\n\n\n/***/ }),\n\n/***/ \"./src/react/components/paneldynamic-actions/paneldynamic-remove-btn.tsx\":\n/*!*******************************************************************************!*\\\n  !*** ./src/react/components/paneldynamic-actions/paneldynamic-remove-btn.tsx ***!\n  \\*******************************************************************************/\n/*! exports provided: SurveyQuestionPanelDynamicRemoveButton */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_612402__) {\n\n\"use strict\";\n__nested_webpack_require_612402__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_612402__.d(__nested_webpack_exports__, \"SurveyQuestionPanelDynamicRemoveButton\", function() { return SurveyQuestionPanelDynamicRemoveButton; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_612402__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_612402__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _element_factory__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_612402__(/*! ../../element-factory */ \"./src/react/element-factory.tsx\");\n/* harmony import */ var _paneldynamic_add_btn__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_612402__(/*! ./paneldynamic-add-btn */ \"./src/react/components/paneldynamic-actions/paneldynamic-add-btn.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar SurveyQuestionPanelDynamicRemoveButton = /** @class */ (function (_super) {\n    __extends(SurveyQuestionPanelDynamicRemoveButton, _super);\n    function SurveyQuestionPanelDynamicRemoveButton() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.handleClick = function (event) {\n            _this.question.removePanelUI(_this.data.panel);\n        };\n        return _this;\n    }\n    SurveyQuestionPanelDynamicRemoveButton.prototype.renderElement = function () {\n        var btnText = this.renderLocString(this.question.locPanelRemoveText);\n        return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"button\", { className: this.question.getPanelRemoveButtonCss(), onClick: this.handleClick, type: \"button\" },\n            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", { className: this.question.cssClasses.buttonRemoveText }, btnText),\n            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", { className: this.question.cssClasses.iconRemove })));\n    };\n    return SurveyQuestionPanelDynamicRemoveButton;\n}(_paneldynamic_add_btn__WEBPACK_IMPORTED_MODULE_2__[\"SurveyQuestionPanelDynamicAction\"]));\n\n_element_factory__WEBPACK_IMPORTED_MODULE_1__[\"ReactElementFactory\"].Instance.registerElement(\"sv-paneldynamic-remove-btn\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(SurveyQuestionPanelDynamicRemoveButton, props);\n});\n\n\n/***/ }),\n\n/***/ \"./src/react/components/popup/popup.tsx\":\n/*!**********************************************!*\\\n  !*** ./src/react/components/popup/popup.tsx ***!\n  \\**********************************************/\n/*! exports provided: Popup, PopupContainer, PopupDropdownContainer, showModal, showDialog */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_615866__) {\n\n\"use strict\";\n__nested_webpack_require_615866__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_615866__.d(__nested_webpack_exports__, \"Popup\", function() { return Popup; });\n/* harmony export (binding) */ __nested_webpack_require_615866__.d(__nested_webpack_exports__, \"PopupContainer\", function() { return PopupContainer; });\n/* harmony export (binding) */ __nested_webpack_require_615866__.d(__nested_webpack_exports__, \"PopupDropdownContainer\", function() { return PopupDropdownContainer; });\n/* harmony export (binding) */ __nested_webpack_require_615866__.d(__nested_webpack_exports__, \"showModal\", function() { return showModal; });\n/* harmony export (binding) */ __nested_webpack_require_615866__.d(__nested_webpack_exports__, \"showDialog\", function() { return showDialog; });\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_615866__(/*! react-dom */ \"react-dom\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_615866__.n(react_dom__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_615866__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__nested_webpack_require_615866__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var survey_core__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_615866__(/*! survey-core */ \"survey-core\");\n/* harmony import */ var survey_core__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__nested_webpack_require_615866__.n(survey_core__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _element_factory__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_615866__(/*! ../../element-factory */ \"./src/react/element-factory.tsx\");\n/* harmony import */ var _reactquestion_element__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_615866__(/*! ../../reactquestion_element */ \"./src/react/reactquestion_element.tsx\");\n/* harmony import */ var _action_bar_action_bar__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_615866__(/*! ../action-bar/action-bar */ \"./src/react/components/action-bar/action-bar.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\n\nvar Popup = /** @class */ (function (_super) {\n    __extends(Popup, _super);\n    function Popup(props) {\n        var _this = _super.call(this, props) || this;\n        _this.containerRef = react__WEBPACK_IMPORTED_MODULE_1___default.a.createRef();\n        _this.createModel();\n        return _this;\n    }\n    Object.defineProperty(Popup.prototype, \"model\", {\n        get: function () {\n            return this.props.model;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Popup.prototype.getStateElement = function () {\n        return this.model;\n    };\n    Popup.prototype.createModel = function () {\n        this.popup = Object(survey_core__WEBPACK_IMPORTED_MODULE_2__[\"createPopupViewModel\"])(this.props.model, undefined);\n    };\n    Popup.prototype.setTargetElement = function () {\n        var container = this.containerRef.current;\n        this.popup.setComponentElement(container, this.props.getTarget ? this.props.getTarget(container) : undefined);\n    };\n    Popup.prototype.componentDidMount = function () {\n        _super.prototype.componentDidMount.call(this);\n        this.setTargetElement();\n    };\n    Popup.prototype.componentDidUpdate = function (prevProps, prevState) {\n        _super.prototype.componentDidUpdate.call(this, prevProps, prevState);\n        this.setTargetElement();\n    };\n    Popup.prototype.componentWillUnmount = function () {\n        _super.prototype.componentWillUnmount.call(this);\n        this.popup.resetComponentElement();\n    };\n    Popup.prototype.shouldComponentUpdate = function (nextProps, nextState) {\n        var _a;\n        if (!_super.prototype.shouldComponentUpdate.call(this, nextProps, nextState))\n            return false;\n        var isNeedUpdate = nextProps.model !== this.popup.model;\n        if (isNeedUpdate) {\n            (_a = this.popup) === null || _a === void 0 ? void 0 : _a.dispose();\n            this.createModel();\n        }\n        return isNeedUpdate;\n    };\n    Popup.prototype.render = function () {\n        this.popup.model = this.model;\n        var popupContainer;\n        if (this.model.isModal) {\n            popupContainer = react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(PopupContainer, { model: this.popup });\n        }\n        else {\n            popupContainer = react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(PopupDropdownContainer, { model: this.popup });\n        }\n        return react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(\"div\", { ref: this.containerRef }, popupContainer);\n    };\n    return Popup;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_4__[\"SurveyElementBase\"]));\n\n_element_factory__WEBPACK_IMPORTED_MODULE_3__[\"ReactElementFactory\"].Instance.registerElement(\"sv-popup\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(Popup, props);\n});\nvar PopupContainer = /** @class */ (function (_super) {\n    __extends(PopupContainer, _super);\n    function PopupContainer(props) {\n        var _this = _super.call(this, props) || this;\n        _this.prevIsVisible = false;\n        _this.handleKeydown = function (event) {\n            _this.model.onKeyDown(event);\n        };\n        _this.clickInside = function (ev) {\n            ev.stopPropagation();\n        };\n        return _this;\n    }\n    Object.defineProperty(PopupContainer.prototype, \"model\", {\n        get: function () {\n            return this.props.model;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    PopupContainer.prototype.getStateElement = function () {\n        return this.model;\n    };\n    PopupContainer.prototype.componentDidUpdate = function (prevProps, prevState) {\n        _super.prototype.componentDidUpdate.call(this, prevProps, prevState);\n        if (!this.prevIsVisible && this.model.isVisible) {\n            this.model.updateOnShowing();\n        }\n        this.prevIsVisible = this.model.isVisible;\n    };\n    PopupContainer.prototype.renderContainer = function (popupBaseViewModel) {\n        var _this = this;\n        var headerPopup = popupBaseViewModel.showHeader ? this.renderHeaderPopup(popupBaseViewModel) : null;\n        var headerContent = !!popupBaseViewModel.title ? this.renderHeaderContent() : null;\n        var content = this.renderContent();\n        var footerContent = popupBaseViewModel.showFooter ? this.renderFooter(this.model) : null;\n        return (react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(\"div\", { className: \"sv-popup__container\", style: {\n                left: popupBaseViewModel.left,\n                top: popupBaseViewModel.top,\n                height: popupBaseViewModel.height,\n                width: popupBaseViewModel.width,\n                minWidth: popupBaseViewModel.minWidth,\n            }, onClick: function (ev) {\n                _this.clickInside(ev);\n            } },\n            react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(\"div\", { className: \"sv-popup__shadow\" },\n                headerPopup,\n                react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(\"div\", { className: \"sv-popup__body-content\" },\n                    headerContent,\n                    react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(\"div\", { className: \"sv-popup__scrolling-content\" }, content),\n                    footerContent))));\n    };\n    PopupContainer.prototype.renderHeaderContent = function () {\n        return react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(\"div\", { className: \"sv-popup__body-header\" }, this.model.title);\n    };\n    PopupContainer.prototype.renderContent = function () {\n        var contentComponent = _element_factory__WEBPACK_IMPORTED_MODULE_3__[\"ReactElementFactory\"].Instance.createElement(this.model.contentComponentName, this.model.contentComponentData);\n        return react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(\"div\", { className: \"sv-popup__content\" }, contentComponent);\n    };\n    PopupContainer.prototype.renderHeaderPopup = function (popupModel) {\n        return null;\n    };\n    PopupContainer.prototype.renderFooter = function (popuModel) {\n        return (react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(\"div\", { className: \"sv-popup__body-footer\" },\n            react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_action_bar_action_bar__WEBPACK_IMPORTED_MODULE_5__[\"SurveyActionBar\"], { model: popuModel.footerToolbar })));\n    };\n    PopupContainer.prototype.render = function () {\n        var _this = this;\n        var container = this.renderContainer(this.model);\n        var className = new survey_core__WEBPACK_IMPORTED_MODULE_2__[\"CssClassBuilder\"]()\n            .append(\"sv-popup\")\n            .append(this.model.styleClass)\n            .toString();\n        var style = { display: this.model.isVisible ? \"\" : \"none\", };\n        return (react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(\"div\", { tabIndex: -1, className: className, style: style, onClick: function (e) {\n                _this.model.clickOutside(e);\n            }, onKeyDown: this.handleKeydown }, container));\n    };\n    return PopupContainer;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_4__[\"SurveyElementBase\"]));\n\nvar PopupDropdownContainer = /** @class */ (function (_super) {\n    __extends(PopupDropdownContainer, _super);\n    function PopupDropdownContainer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    PopupDropdownContainer.prototype.renderHeaderPopup = function (popupModel) {\n        var popupDropdownModel = popupModel;\n        if (!popupDropdownModel)\n            return null;\n        return (react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(\"span\", { style: {\n                left: popupDropdownModel.pointerTarget.left,\n                top: popupDropdownModel.pointerTarget.top,\n            }, className: \"sv-popup__pointer\" }));\n    };\n    return PopupDropdownContainer;\n}(PopupContainer));\n\n// replace to showDialog then delete\nfunction showModal(componentName, data, onApply, onCancel, cssClass, title, displayMode) {\n    if (displayMode === void 0) { displayMode = \"popup\"; }\n    var options = Object(survey_core__WEBPACK_IMPORTED_MODULE_2__[\"createDialogOptions\"])(componentName, data, onApply, onCancel, undefined, undefined, cssClass, title, displayMode);\n    return showDialog(options);\n}\nfunction showDialog(dialogOptions, rootElement) {\n    var popupViewModel = Object(survey_core__WEBPACK_IMPORTED_MODULE_2__[\"createPopupModalViewModel\"])(dialogOptions, rootElement);\n    var onVisibilityChangedCallback = function (_, options) {\n        if (!options.isVisible) {\n            react_dom__WEBPACK_IMPORTED_MODULE_0___default.a.unmountComponentAtNode(popupViewModel.container);\n            popupViewModel.dispose();\n        }\n    };\n    popupViewModel.onVisibilityChanged.add(onVisibilityChangedCallback);\n    react_dom__WEBPACK_IMPORTED_MODULE_0___default.a.render(react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(PopupContainer, { model: popupViewModel }), popupViewModel.container);\n    popupViewModel.model.isVisible = true;\n    return popupViewModel;\n}\nsurvey_core__WEBPACK_IMPORTED_MODULE_2__[\"settings\"].showModal = showModal;\nsurvey_core__WEBPACK_IMPORTED_MODULE_2__[\"settings\"].showDialog = showDialog;\n\n\n/***/ }),\n\n/***/ \"./src/react/components/rating/rating-dropdown-item.tsx\":\n/*!**************************************************************!*\\\n  !*** ./src/react/components/rating/rating-dropdown-item.tsx ***!\n  \\**************************************************************/\n/*! exports provided: RatingDropdownItem */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_628296__) {\n\n\"use strict\";\n__nested_webpack_require_628296__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_628296__.d(__nested_webpack_exports__, \"RatingDropdownItem\", function() { return RatingDropdownItem; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_628296__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_628296__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _element_factory__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_628296__(/*! ../../element-factory */ \"./src/react/element-factory.tsx\");\n/* harmony import */ var _reactquestion_element__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_628296__(/*! ../../reactquestion_element */ \"./src/react/reactquestion_element.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar RatingDropdownItem = /** @class */ (function (_super) {\n    __extends(RatingDropdownItem, _super);\n    function RatingDropdownItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(RatingDropdownItem.prototype, \"item\", {\n        get: function () {\n            return this.props.item;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    RatingDropdownItem.prototype.getStateElement = function () {\n        return this.item;\n    };\n    RatingDropdownItem.prototype.render = function () {\n        if (!this.item)\n            return null;\n        var item = this.props.item;\n        var description = this.renderDescription(item);\n        return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", { className: \"sd-rating-dropdown-item\" },\n            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", { className: \"sd-rating-dropdown-item_text\" }, item.title),\n            description));\n    };\n    RatingDropdownItem.prototype.renderDescription = function (item) {\n        if (!item.description)\n            return null;\n        return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", { className: \"sd-rating-dropdown-item_description\" }, this.renderLocString(item.description, undefined, \"locString\")));\n    };\n    return RatingDropdownItem;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_2__[\"SurveyElementBase\"]));\n\n_element_factory__WEBPACK_IMPORTED_MODULE_1__[\"ReactElementFactory\"].Instance.registerElement(\"sv-rating-dropdown-item\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(RatingDropdownItem, props);\n});\n\n\n/***/ }),\n\n/***/ \"./src/react/components/rating/rating-item-smiley.tsx\":\n/*!************************************************************!*\\\n  !*** ./src/react/components/rating/rating-item-smiley.tsx ***!\n  \\************************************************************/\n/*! exports provided: RatingItemSmiley */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_631934__) {\n\n\"use strict\";\n__nested_webpack_require_631934__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_631934__.d(__nested_webpack_exports__, \"RatingItemSmiley\", function() { return RatingItemSmiley; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_631934__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_631934__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _element_factory__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_631934__(/*! ../../element-factory */ \"./src/react/element-factory.tsx\");\n/* harmony import */ var _svg_icon_svg_icon__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_631934__(/*! ../svg-icon/svg-icon */ \"./src/react/components/svg-icon/svg-icon.tsx\");\n/* harmony import */ var _rating_item__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_631934__(/*! ./rating-item */ \"./src/react/components/rating/rating-item.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\nvar RatingItemSmiley = /** @class */ (function (_super) {\n    __extends(RatingItemSmiley, _super);\n    function RatingItemSmiley() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    RatingItemSmiley.prototype.render = function () {\n        var _this = this;\n        return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"label\", { onMouseDown: this.handleOnMouseDown, style: this.question.getItemStyle(this.item.itemValue, this.item.highlight), className: this.question.getItemClass(this.item.itemValue), onMouseOver: function (e) { return _this.question.onItemMouseIn(_this.item); }, onMouseOut: function (e) { return _this.question.onItemMouseOut(_this.item); } },\n            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"input\", { type: \"radio\", className: \"sv-visuallyhidden\", name: this.question.name, id: this.question.getInputId(this.index), value: this.item.value, disabled: this.isDisplayMode, checked: this.question.value == this.item.value, onClick: this.props.handleOnClick, onChange: function () { }, \"aria-required\": this.question.ariaRequired, \"aria-label\": this.question.ariaLabel, \"aria-invalid\": this.question.ariaInvalid, \"aria-errormessage\": this.question.ariaErrormessage }),\n            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_svg_icon_svg_icon__WEBPACK_IMPORTED_MODULE_2__[\"SvgIcon\"], { size: \"auto\", iconName: this.question.getItemSmileyIconName(this.item.itemValue), title: this.item.text })));\n    };\n    return RatingItemSmiley;\n}(_rating_item__WEBPACK_IMPORTED_MODULE_3__[\"RatingItemBase\"]));\n\n_element_factory__WEBPACK_IMPORTED_MODULE_1__[\"ReactElementFactory\"].Instance.registerElement(\"sv-rating-item-smiley\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(RatingItemSmiley, props);\n});\n\n\n/***/ }),\n\n/***/ \"./src/react/components/rating/rating-item-star.tsx\":\n/*!**********************************************************!*\\\n  !*** ./src/react/components/rating/rating-item-star.tsx ***!\n  \\**********************************************************/\n/*! exports provided: RatingItemStar */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_635857__) {\n\n\"use strict\";\n__nested_webpack_require_635857__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_635857__.d(__nested_webpack_exports__, \"RatingItemStar\", function() { return RatingItemStar; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_635857__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_635857__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _element_factory__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_635857__(/*! ../../element-factory */ \"./src/react/element-factory.tsx\");\n/* harmony import */ var _svg_icon_svg_icon__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_635857__(/*! ../svg-icon/svg-icon */ \"./src/react/components/svg-icon/svg-icon.tsx\");\n/* harmony import */ var _rating_item__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_635857__(/*! ./rating-item */ \"./src/react/components/rating/rating-item.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\nvar RatingItemStar = /** @class */ (function (_super) {\n    __extends(RatingItemStar, _super);\n    function RatingItemStar() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    RatingItemStar.prototype.render = function () {\n        var _this = this;\n        return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"label\", { onMouseDown: this.handleOnMouseDown, className: this.question.getItemClass(this.item.itemValue), onMouseOver: function (e) { return _this.question.onItemMouseIn(_this.item); }, onMouseOut: function (e) { return _this.question.onItemMouseOut(_this.item); } },\n            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"input\", { type: \"radio\", className: \"sv-visuallyhidden\", name: this.question.name, id: this.question.getInputId(this.index), value: this.item.value, disabled: this.isDisplayMode, checked: this.question.value == this.item.value, onClick: this.props.handleOnClick, onChange: function () { }, \"aria-required\": this.question.ariaRequired, \"aria-label\": this.question.ariaLabel, \"aria-invalid\": this.question.ariaInvalid, \"aria-errormessage\": this.question.ariaErrormessage }),\n            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_svg_icon_svg_icon__WEBPACK_IMPORTED_MODULE_2__[\"SvgIcon\"], { className: \"sv-star\", size: \"auto\", iconName: this.question.itemStarIcon, title: this.item.text }),\n            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_svg_icon_svg_icon__WEBPACK_IMPORTED_MODULE_2__[\"SvgIcon\"], { className: \"sv-star-2\", size: \"auto\", iconName: this.question.itemStarIconAlt, title: this.item.text })));\n    };\n    return RatingItemStar;\n}(_rating_item__WEBPACK_IMPORTED_MODULE_3__[\"RatingItemBase\"]));\n\n_element_factory__WEBPACK_IMPORTED_MODULE_1__[\"ReactElementFactory\"].Instance.registerElement(\"sv-rating-item-star\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(RatingItemStar, props);\n});\n\n\n/***/ }),\n\n/***/ \"./src/react/components/rating/rating-item.tsx\":\n/*!*****************************************************!*\\\n  !*** ./src/react/components/rating/rating-item.tsx ***!\n  \\*****************************************************/\n/*! exports provided: RatingItemBase, RatingItem */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_639907__) {\n\n\"use strict\";\n__nested_webpack_require_639907__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_639907__.d(__nested_webpack_exports__, \"RatingItemBase\", function() { return RatingItemBase; });\n/* harmony export (binding) */ __nested_webpack_require_639907__.d(__nested_webpack_exports__, \"RatingItem\", function() { return RatingItem; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_639907__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_639907__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _element_factory__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_639907__(/*! ../../element-factory */ \"./src/react/element-factory.tsx\");\n/* harmony import */ var _reactquestion_element__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_639907__(/*! ../../reactquestion_element */ \"./src/react/reactquestion_element.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar RatingItemBase = /** @class */ (function (_super) {\n    __extends(RatingItemBase, _super);\n    function RatingItemBase(props) {\n        var _this = _super.call(this, props) || this;\n        _this.handleOnMouseDown = _this.handleOnMouseDown.bind(_this);\n        return _this;\n    }\n    Object.defineProperty(RatingItemBase.prototype, \"question\", {\n        get: function () {\n            return this.props.question;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(RatingItemBase.prototype, \"item\", {\n        get: function () {\n            return this.props.item;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(RatingItemBase.prototype, \"index\", {\n        get: function () {\n            return this.props.index;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    RatingItemBase.prototype.getStateElement = function () {\n        return this.item;\n    };\n    RatingItemBase.prototype.handleOnMouseDown = function (event) {\n        this.question.onMouseDown();\n    };\n    return RatingItemBase;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_2__[\"SurveyElementBase\"]));\n\nvar RatingItem = /** @class */ (function (_super) {\n    __extends(RatingItem, _super);\n    function RatingItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    RatingItem.prototype.render = function () {\n        var itemText = this.renderLocString(this.item.locText);\n        return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"label\", { onMouseDown: this.handleOnMouseDown, className: this.question.getItemClassByText(this.item.itemValue, this.item.text) },\n            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"input\", { type: \"radio\", className: \"sv-visuallyhidden\", name: this.question.name, id: this.question.getInputId(this.index), value: this.item.value, disabled: this.isDisplayMode, checked: this.question.value == this.item.value, onClick: this.props.handleOnClick, onChange: function () { }, \"aria-required\": this.question.ariaRequired, \"aria-label\": this.question.ariaLabel, \"aria-invalid\": this.question.ariaInvalid, \"aria-errormessage\": this.question.ariaErrormessage }),\n            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", { className: this.question.cssClasses.itemText }, itemText)));\n    };\n    RatingItem.prototype.componentDidMount = function () {\n        _super.prototype.componentDidMount.call(this);\n    };\n    return RatingItem;\n}(RatingItemBase));\n\n_element_factory__WEBPACK_IMPORTED_MODULE_1__[\"ReactElementFactory\"].Instance.registerElement(\"sv-rating-item\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(RatingItem, props);\n});\n\n\n/***/ }),\n\n/***/ \"./src/react/components/skeleton.tsx\":\n/*!*******************************************!*\\\n  !*** ./src/react/components/skeleton.tsx ***!\n  \\*******************************************/\n/*! exports provided: Skeleton */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_644683__) {\n\n\"use strict\";\n__nested_webpack_require_644683__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_644683__.d(__nested_webpack_exports__, \"Skeleton\", function() { return Skeleton; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_644683__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_644683__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _element_factory__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_644683__(/*! ../element-factory */ \"./src/react/element-factory.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\nvar Skeleton = /** @class */ (function (_super) {\n    __extends(Skeleton, _super);\n    function Skeleton() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Skeleton.prototype.render = function () {\n        var _a;\n        return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", { className: \"sv-skeleton-element\", id: (_a = this.props.element) === null || _a === void 0 ? void 0 : _a.id }));\n    };\n    return Skeleton;\n}(react__WEBPACK_IMPORTED_MODULE_0___default.a.Component));\n\n_element_factory__WEBPACK_IMPORTED_MODULE_1__[\"ReactElementFactory\"].Instance.registerElement(\"sv-skeleton\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Skeleton, props);\n});\n\n\n/***/ }),\n\n/***/ \"./src/react/components/survey-actions/survey-nav-button.tsx\":\n/*!*******************************************************************!*\\\n  !*** ./src/react/components/survey-actions/survey-nav-button.tsx ***!\n  \\*******************************************************************/\n/*! exports provided: SurveyNavigationButton */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_647210__) {\n\n\"use strict\";\n__nested_webpack_require_647210__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_647210__.d(__nested_webpack_exports__, \"SurveyNavigationButton\", function() { return SurveyNavigationButton; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_647210__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_647210__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _element_factory__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_647210__(/*! ../../element-factory */ \"./src/react/element-factory.tsx\");\n/* harmony import */ var _reactquestion_element__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_647210__(/*! ../../reactquestion_element */ \"./src/react/reactquestion_element.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar SurveyNavigationButton = /** @class */ (function (_super) {\n    __extends(SurveyNavigationButton, _super);\n    function SurveyNavigationButton() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(SurveyNavigationButton.prototype, \"item\", {\n        get: function () {\n            return this.props.item;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyNavigationButton.prototype.canRender = function () {\n        return this.item.isVisible;\n    };\n    SurveyNavigationButton.prototype.renderElement = function () {\n        return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"input\", { className: this.item.innerCss, type: \"button\", disabled: this.item.disabled, onMouseDown: this.item.data && this.item.data.mouseDown, onClick: this.item.action, title: this.item.getTooltip(), value: this.item.title }));\n    };\n    return SurveyNavigationButton;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_2__[\"ReactSurveyElement\"]));\n\n_element_factory__WEBPACK_IMPORTED_MODULE_1__[\"ReactElementFactory\"].Instance.registerElement(\"sv-nav-btn\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(SurveyNavigationButton, props);\n});\n\n\n/***/ }),\n\n/***/ \"./src/react/components/survey-header/logo-image.tsx\":\n/*!***********************************************************!*\\\n  !*** ./src/react/components/survey-header/logo-image.tsx ***!\n  \\***********************************************************/\n/*! exports provided: LogoImage */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_650415__) {\n\n\"use strict\";\n__nested_webpack_require_650415__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_650415__.d(__nested_webpack_exports__, \"LogoImage\", function() { return LogoImage; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_650415__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_650415__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _element_factory__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_650415__(/*! ../../element-factory */ \"./src/react/element-factory.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\nvar LogoImage = /** @class */ (function (_super) {\n    __extends(LogoImage, _super);\n    function LogoImage(props) {\n        return _super.call(this, props) || this;\n    }\n    Object.defineProperty(LogoImage.prototype, \"survey\", {\n        get: function () {\n            return this.props.data;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    LogoImage.prototype.render = function () {\n        var content = [];\n        content.push(react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", { key: \"logo-image\", className: this.survey.logoClassNames },\n            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"img\", { className: this.survey.css.logoImage, src: this.survey.locLogo.renderedHtml, alt: this.survey.locTitle.renderedHtml, width: this.survey.renderedLogoWidth, height: this.survey.renderedLogoHeight, style: { objectFit: this.survey.logoFit, width: this.survey.renderedStyleLogoWidth, height: this.survey.renderedStyleLogoHeight } })));\n        return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, content);\n    };\n    return LogoImage;\n}(react__WEBPACK_IMPORTED_MODULE_0___default.a.Component));\n\n_element_factory__WEBPACK_IMPORTED_MODULE_1__[\"ReactElementFactory\"].Instance.registerElement(\"sv-logo-image\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(LogoImage, props);\n});\n\n\n/***/ }),\n\n/***/ \"./src/react/components/survey-header/survey-header.tsx\":\n/*!**************************************************************!*\\\n  !*** ./src/react/components/survey-header/survey-header.tsx ***!\n  \\**************************************************************/\n/*! exports provided: SurveyHeader */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_653620__) {\n\n\"use strict\";\n__nested_webpack_require_653620__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_653620__.d(__nested_webpack_exports__, \"SurveyHeader\", function() { return SurveyHeader; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_653620__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_653620__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _reactquestion_element__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_653620__(/*! ../../reactquestion_element */ \"./src/react/reactquestion_element.tsx\");\n/* harmony import */ var _element_factory__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_653620__(/*! ../../element-factory */ \"./src/react/element-factory.tsx\");\n/* harmony import */ var _title_title_element__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_653620__(/*! ../title/title-element */ \"./src/react/components/title/title-element.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\nvar SurveyHeader = /** @class */ (function (_super) {\n    __extends(SurveyHeader, _super);\n    function SurveyHeader(props) {\n        var _this = _super.call(this, props) || this;\n        _this.state = { changed: 0 };\n        _this.rootRef = react__WEBPACK_IMPORTED_MODULE_0___default.a.createRef();\n        return _this;\n    }\n    Object.defineProperty(SurveyHeader.prototype, \"survey\", {\n        get: function () {\n            return this.props.survey;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyHeader.prototype, \"css\", {\n        get: function () {\n            return this.survey.css;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyHeader.prototype.componentDidMount = function () {\n        var self = this;\n        this.survey.afterRenderHeader(this.rootRef.current);\n        this.survey.locLogo.onChanged = function () {\n            self.setState({ changed: self.state.changed + 1 });\n        };\n    };\n    SurveyHeader.prototype.componentWillUnmount = function () {\n        this.survey.locLogo.onChanged = function () { };\n    };\n    SurveyHeader.prototype.renderTitle = function () {\n        if (!this.survey.renderedHasTitle)\n            return null;\n        var description = _reactquestion_element__WEBPACK_IMPORTED_MODULE_1__[\"SurveyElementBase\"].renderLocString(this.survey.locDescription);\n        return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", { className: this.css.headerText, style: { maxWidth: this.survey.titleMaxWidth } },\n            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_title_title_element__WEBPACK_IMPORTED_MODULE_3__[\"TitleElement\"], { element: this.survey }),\n            this.survey.renderedHasDescription ? react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", { className: this.css.description }, description) : null));\n    };\n    SurveyHeader.prototype.renderLogoImage = function (isRender) {\n        if (!isRender)\n            return null;\n        var componentName = this.survey.getElementWrapperComponentName(this.survey, \"logo-image\");\n        var componentData = this.survey.getElementWrapperComponentData(this.survey, \"logo-image\");\n        return _element_factory__WEBPACK_IMPORTED_MODULE_2__[\"ReactElementFactory\"].Instance.createElement(componentName, {\n            data: componentData,\n        });\n    };\n    SurveyHeader.prototype.render = function () {\n        if (!this.survey.renderedHasHeader)\n            return null;\n        return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", { className: this.css.header, ref: this.rootRef },\n            this.renderLogoImage(this.survey.isLogoBefore),\n            this.renderTitle(),\n            this.renderLogoImage(this.survey.isLogoAfter),\n            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", { className: this.css.headerClose })));\n    };\n    return SurveyHeader;\n}(react__WEBPACK_IMPORTED_MODULE_0___default.a.Component));\n\n_element_factory__WEBPACK_IMPORTED_MODULE_2__[\"ReactElementFactory\"].Instance.registerElement(\"survey-header\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(SurveyHeader, props);\n});\n\n\n/***/ }),\n\n/***/ \"./src/react/components/svg-icon/svg-icon.tsx\":\n/*!****************************************************!*\\\n  !*** ./src/react/components/svg-icon/svg-icon.tsx ***!\n  \\****************************************************/\n/*! exports provided: SvgIcon */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_658927__) {\n\n\"use strict\";\n__nested_webpack_require_658927__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_658927__.d(__nested_webpack_exports__, \"SvgIcon\", function() { return SvgIcon; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_658927__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_658927__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _element_factory__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_658927__(/*! ../../element-factory */ \"./src/react/element-factory.tsx\");\n/* harmony import */ var survey_core__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_658927__(/*! survey-core */ \"survey-core\");\n/* harmony import */ var survey_core__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__nested_webpack_require_658927__.n(survey_core__WEBPACK_IMPORTED_MODULE_2__);\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar SvgIcon = /** @class */ (function (_super) {\n    __extends(SvgIcon, _super);\n    function SvgIcon(props) {\n        var _this = _super.call(this, props) || this;\n        _this.svgIconRef = react__WEBPACK_IMPORTED_MODULE_0___default.a.createRef();\n        return _this;\n    }\n    SvgIcon.prototype.updateSvg = function () {\n        if (this.props.iconName)\n            Object(survey_core__WEBPACK_IMPORTED_MODULE_2__[\"createSvg\"])(this.props.size, this.props.width, this.props.height, this.props.iconName, this.svgIconRef.current, this.props.title);\n    };\n    SvgIcon.prototype.componentDidUpdate = function () {\n        this.updateSvg();\n    };\n    SvgIcon.prototype.render = function () {\n        var className = \"sv-svg-icon\";\n        if (this.props.className) {\n            className += \" \" + this.props.className;\n        }\n        return (this.props.iconName ?\n            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"svg\", { className: className, style: this.props.style, onClick: this.props.onClick, ref: this.svgIconRef, role: \"img\" },\n                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"use\", null))\n            : null);\n    };\n    SvgIcon.prototype.componentDidMount = function () {\n        this.updateSvg();\n    };\n    return SvgIcon;\n}(react__WEBPACK_IMPORTED_MODULE_0___default.a.Component));\n\n_element_factory__WEBPACK_IMPORTED_MODULE_1__[\"ReactElementFactory\"].Instance.registerElement(\"sv-svg-icon\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(SvgIcon, props);\n});\n\n\n/***/ }),\n\n/***/ \"./src/react/components/title/title-actions.tsx\":\n/*!******************************************************!*\\\n  !*** ./src/react/components/title/title-actions.tsx ***!\n  \\******************************************************/\n/*! exports provided: TitleActions */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_662485__) {\n\n\"use strict\";\n__nested_webpack_require_662485__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_662485__.d(__nested_webpack_exports__, \"TitleActions\", function() { return TitleActions; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_662485__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_662485__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var survey_core__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_662485__(/*! survey-core */ \"survey-core\");\n/* harmony import */ var survey_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__nested_webpack_require_662485__.n(survey_core__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _element_factory__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_662485__(/*! ../../element-factory */ \"./src/react/element-factory.tsx\");\n/* harmony import */ var _action_bar_action_bar__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_662485__(/*! ../action-bar/action-bar */ \"./src/react/components/action-bar/action-bar.tsx\");\n/* harmony import */ var _title_content__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_662485__(/*! ./title-content */ \"./src/react/components/title/title-content.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\nvar TitleActions = /** @class */ (function (_super) {\n    __extends(TitleActions, _super);\n    function TitleActions() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(TitleActions.prototype, \"cssClasses\", {\n        get: function () {\n            return this.props.cssClasses;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TitleActions.prototype, \"element\", {\n        get: function () {\n            return this.props.element;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    TitleActions.prototype.render = function () {\n        var titleContent = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_title_content__WEBPACK_IMPORTED_MODULE_4__[\"TitleContent\"], { element: this.element, cssClasses: this.cssClasses });\n        if (!this.element.hasTitleActions)\n            return titleContent;\n        return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", { className: \"sv-title-actions\" },\n            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", { className: \"sv-title-actions__title\" }, titleContent),\n            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_action_bar_action_bar__WEBPACK_IMPORTED_MODULE_3__[\"SurveyActionBar\"], { model: this.element.getTitleToolbar() })));\n    };\n    return TitleActions;\n}(react__WEBPACK_IMPORTED_MODULE_0___default.a.Component));\n\nsurvey_core__WEBPACK_IMPORTED_MODULE_1__[\"RendererFactory\"].Instance.registerRenderer(\"element\", \"title-actions\", \"sv-title-actions\");\n_element_factory__WEBPACK_IMPORTED_MODULE_2__[\"ReactElementFactory\"].Instance.registerElement(\"sv-title-actions\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(TitleActions, props);\n});\n\n\n/***/ }),\n\n/***/ \"./src/react/components/title/title-content.tsx\":\n/*!******************************************************!*\\\n  !*** ./src/react/components/title/title-content.tsx ***!\n  \\******************************************************/\n/*! exports provided: TitleContent */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_666674__) {\n\n\"use strict\";\n__nested_webpack_require_666674__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_666674__.d(__nested_webpack_exports__, \"TitleContent\", function() { return TitleContent; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_666674__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_666674__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _reactquestion_element__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_666674__(/*! ../../reactquestion_element */ \"./src/react/reactquestion_element.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\nvar TitleContent = /** @class */ (function (_super) {\n    __extends(TitleContent, _super);\n    function TitleContent(props) {\n        return _super.call(this, props) || this;\n    }\n    Object.defineProperty(TitleContent.prototype, \"cssClasses\", {\n        get: function () {\n            return this.props.cssClasses;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TitleContent.prototype, \"element\", {\n        get: function () {\n            return this.props.element;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    TitleContent.prototype.render = function () {\n        if (this.element.isTitleRenderedAsString)\n            return _reactquestion_element__WEBPACK_IMPORTED_MODULE_1__[\"SurveyElementBase\"].renderLocString(this.element.locTitle);\n        var spans = this.renderTitleSpans(this.element.getTitleOwner(), this.cssClasses);\n        return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, spans);\n    };\n    TitleContent.prototype.renderTitleSpans = function (element, cssClasses) {\n        var getSpaceSpan = function (key) {\n            return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", { \"data-key\": key, key: key }, \"\\u00A0\"));\n        };\n        var spans = [];\n        if (element.isRequireTextOnStart) {\n            spans.push(this.renderRequireText(element, cssClasses));\n            spans.push(getSpaceSpan(\"req-sp\"));\n        }\n        var questionNumber = element.no;\n        if (questionNumber) {\n            var panelNumber = !!cssClasses.panel ? cssClasses.panel.number : undefined;\n            spans.push(react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", { \"data-key\": \"q_num\", key: \"q_num\", className: cssClasses.number || panelNumber, style: { position: \"static\" }, \"aria-hidden\": true }, questionNumber));\n            spans.push(getSpaceSpan(\"num-sp\"));\n        }\n        if (element.isRequireTextBeforeTitle) {\n            spans.push(this.renderRequireText(element, cssClasses));\n            spans.push(getSpaceSpan(\"req-sp\"));\n        }\n        spans.push(_reactquestion_element__WEBPACK_IMPORTED_MODULE_1__[\"SurveyElementBase\"].renderLocString(element.locTitle, null, \"q_title\"));\n        if (element.isRequireTextAfterTitle) {\n            spans.push(getSpaceSpan(\"req-sp\"));\n            spans.push(this.renderRequireText(element, cssClasses));\n        }\n        return spans;\n    };\n    TitleContent.prototype.renderRequireText = function (element, cssClasses) {\n        return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", { \"data-key\": \"req-text\", key: \"req-text\", className: cssClasses.requiredText || cssClasses.panel.requiredText, \"aria-hidden\": true }, element.requiredText));\n    };\n    return TitleContent;\n}(react__WEBPACK_IMPORTED_MODULE_0___default.a.Component));\n\n\n\n/***/ }),\n\n/***/ \"./src/react/components/title/title-element.tsx\":\n/*!******************************************************!*\\\n  !*** ./src/react/components/title/title-element.tsx ***!\n  \\******************************************************/\n/*! exports provided: TitleElement */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_671334__) {\n\n\"use strict\";\n__nested_webpack_require_671334__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_671334__.d(__nested_webpack_exports__, \"TitleElement\", function() { return TitleElement; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_671334__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_671334__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var survey_core__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_671334__(/*! survey-core */ \"survey-core\");\n/* harmony import */ var survey_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__nested_webpack_require_671334__.n(survey_core__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _title_actions__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_671334__(/*! ./title-actions */ \"./src/react/components/title/title-actions.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar TitleElement = /** @class */ (function (_super) {\n    __extends(TitleElement, _super);\n    function TitleElement(props) {\n        return _super.call(this, props) || this;\n    }\n    Object.defineProperty(TitleElement.prototype, \"element\", {\n        get: function () {\n            return this.props.element;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    TitleElement.prototype.render = function () {\n        var element = this.element;\n        if (!element || !element.hasTitle)\n            return null;\n        var ariaLabel = element.titleAriaLabel || undefined;\n        var titleContent = (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_title_actions__WEBPACK_IMPORTED_MODULE_2__[\"TitleActions\"], { element: element, cssClasses: element.cssClasses }));\n        var onClick = undefined;\n        var onKeyUp = undefined;\n        if (element.hasTitleEvents) {\n            onKeyUp = function (evt) {\n                Object(survey_core__WEBPACK_IMPORTED_MODULE_1__[\"doKey2ClickUp\"])(evt.nativeEvent);\n            };\n        }\n        var CustomTag = element.titleTagName;\n        return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(CustomTag, { className: element.cssTitle, id: element.ariaTitleId, \"aria-label\": ariaLabel, tabIndex: element.titleTabIndex, \"aria-expanded\": element.titleAriaExpanded, role: element.titleAriaRole, onClick: onClick, onKeyUp: onKeyUp }, titleContent));\n    };\n    return TitleElement;\n}(react__WEBPACK_IMPORTED_MODULE_0___default.a.Component));\n\n\n\n/***/ }),\n\n/***/ \"./src/react/custom-widget.tsx\":\n/*!*************************************!*\\\n  !*** ./src/react/custom-widget.tsx ***!\n  \\*************************************/\n/*! exports provided: SurveyCustomWidget */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_674814__) {\n\n\"use strict\";\n__nested_webpack_require_674814__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_674814__.d(__nested_webpack_exports__, \"SurveyCustomWidget\", function() { return SurveyCustomWidget; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_674814__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_674814__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _reactquestion_element__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_674814__(/*! ./reactquestion_element */ \"./src/react/reactquestion_element.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\nvar SurveyCustomWidget = /** @class */ (function (_super) {\n    __extends(SurveyCustomWidget, _super);\n    function SurveyCustomWidget(props) {\n        var _this = _super.call(this, props) || this;\n        _this.widgetRef = react__WEBPACK_IMPORTED_MODULE_0__[\"createRef\"]();\n        return _this;\n    }\n    SurveyCustomWidget.prototype._afterRender = function () {\n        if (this.questionBase.customWidget) {\n            var el = this.widgetRef.current;\n            if (!!el) {\n                this.questionBase.customWidget.afterRender(this.questionBase, el);\n                this.questionBase.customWidgetData.isNeedRender = false;\n            }\n        }\n    };\n    SurveyCustomWidget.prototype.componentDidMount = function () {\n        _super.prototype.componentDidMount.call(this);\n        if (this.questionBase) {\n            this._afterRender();\n        }\n    };\n    SurveyCustomWidget.prototype.componentDidUpdate = function (prevProps, prevState) {\n        _super.prototype.componentDidUpdate.call(this, prevProps, prevState);\n        var isDefaultRender = !!this.questionBase.customWidget &&\n            this.questionBase.customWidget.isDefaultRender;\n        if (this.questionBase && !isDefaultRender) {\n            this._afterRender();\n        }\n    };\n    SurveyCustomWidget.prototype.componentWillUnmount = function () {\n        _super.prototype.componentWillUnmount.call(this);\n        if (this.questionBase.customWidget) {\n            var el = this.widgetRef.current;\n            if (!!el) {\n                this.questionBase.customWidget.willUnmount(this.questionBase, el);\n            }\n        }\n    };\n    SurveyCustomWidget.prototype.canRender = function () {\n        return _super.prototype.canRender.call(this) && this.questionBase.visible;\n    };\n    SurveyCustomWidget.prototype.renderElement = function () {\n        var customWidget = this.questionBase.customWidget;\n        if (customWidget.isDefaultRender) {\n            return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { ref: this.widgetRef }, this.creator.createQuestionElement(this.questionBase)));\n        }\n        var widget = null;\n        if (customWidget.widgetJson.render) {\n            widget = customWidget.widgetJson.render(this.questionBase);\n        }\n        else {\n            if (customWidget.htmlTemplate) {\n                var htmlValue = { __html: customWidget.htmlTemplate };\n                return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { ref: this.widgetRef, dangerouslySetInnerHTML: htmlValue });\n            }\n        }\n        return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { ref: this.widgetRef }, widget);\n    };\n    return SurveyCustomWidget;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_1__[\"SurveyQuestionElementBase\"]));\n\n\n\n/***/ }),\n\n/***/ \"./src/react/dropdown-base.tsx\":\n/*!*************************************!*\\\n  !*** ./src/react/dropdown-base.tsx ***!\n  \\*************************************/\n/*! exports provided: SurveyQuestionDropdownBase */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_679304__) {\n\n\"use strict\";\n__nested_webpack_require_679304__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_679304__.d(__nested_webpack_exports__, \"SurveyQuestionDropdownBase\", function() { return SurveyQuestionDropdownBase; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_679304__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_679304__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var survey_core__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_679304__(/*! survey-core */ \"survey-core\");\n/* harmony import */ var survey_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__nested_webpack_require_679304__.n(survey_core__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _components_popup_popup__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_679304__(/*! ./components/popup/popup */ \"./src/react/components/popup/popup.tsx\");\n/* harmony import */ var _components_svg_icon_svg_icon__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_679304__(/*! ./components/svg-icon/svg-icon */ \"./src/react/components/svg-icon/svg-icon.tsx\");\n/* harmony import */ var _element_factory__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_679304__(/*! ./element-factory */ \"./src/react/element-factory.tsx\");\n/* harmony import */ var _reactquestion_comment__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_679304__(/*! ./reactquestion_comment */ \"./src/react/reactquestion_comment.tsx\");\n/* harmony import */ var _reactquestion_element__WEBPACK_IMPORTED_MODULE_6__ = __nested_webpack_require_679304__(/*! ./reactquestion_element */ \"./src/react/reactquestion_element.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\n\n\nvar SurveyQuestionDropdownBase = /** @class */ (function (_super) {\n    __extends(SurveyQuestionDropdownBase, _super);\n    function SurveyQuestionDropdownBase() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.click = function (event) {\n            var _a;\n            (_a = _this.question.dropdownListModel) === null || _a === void 0 ? void 0 : _a.onClick(event);\n        };\n        _this.chevronPointerDown = function (event) {\n            var _a;\n            (_a = _this.question.dropdownListModel) === null || _a === void 0 ? void 0 : _a.chevronPointerDown(event);\n        };\n        _this.clear = function (event) {\n            var _a;\n            (_a = _this.question.dropdownListModel) === null || _a === void 0 ? void 0 : _a.onClear(event);\n        };\n        _this.keyhandler = function (event) {\n            var _a;\n            (_a = _this.question.dropdownListModel) === null || _a === void 0 ? void 0 : _a.keyHandler(event);\n        };\n        _this.blur = function (event) {\n            var _a;\n            (_a = _this.question.dropdownListModel) === null || _a === void 0 ? void 0 : _a.onBlur(event);\n            _this.updateInputDomElement();\n        };\n        _this.focus = function (event) {\n            var _a;\n            (_a = _this.question.dropdownListModel) === null || _a === void 0 ? void 0 : _a.onFocus(event);\n        };\n        return _this;\n    }\n    SurveyQuestionDropdownBase.prototype.getStateElement = function () {\n        return this.question[\"dropdownListModel\"];\n    };\n    SurveyQuestionDropdownBase.prototype.setValueCore = function (newValue) {\n        this.questionBase.renderedValue = newValue;\n    };\n    SurveyQuestionDropdownBase.prototype.getValueCore = function () {\n        return this.questionBase.renderedValue;\n    };\n    SurveyQuestionDropdownBase.prototype.renderReadOnlyElement = function () {\n        return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", null, this.question.readOnlyText);\n    };\n    SurveyQuestionDropdownBase.prototype.renderSelect = function (cssClasses) {\n        var _a, _b;\n        var selectElement = null;\n        if (this.question.isReadOnly) {\n            var text = (this.question.selectedItemLocText) ? this.renderLocString(this.question.selectedItemLocText) : \"\";\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            selectElement = react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { id: this.question.inputId, className: this.question.getControlClass(), disabled: true },\n                text,\n                this.renderReadOnlyElement());\n        }\n        else {\n            if (!this.question[\"dropdownListModel\"]) {\n                this.question[\"dropdownListModel\"] = new survey_core__WEBPACK_IMPORTED_MODULE_1__[\"DropdownListModel\"](this.question);\n            }\n            selectElement = react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](react__WEBPACK_IMPORTED_MODULE_0__[\"Fragment\"], null,\n                this.renderInput(this.question[\"dropdownListModel\"]),\n                react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_components_popup_popup__WEBPACK_IMPORTED_MODULE_2__[\"Popup\"], { model: (_b = (_a = this.question) === null || _a === void 0 ? void 0 : _a.dropdownListModel) === null || _b === void 0 ? void 0 : _b.popupModel }));\n        }\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: cssClasses.selectWrapper, onClick: this.click },\n            selectElement,\n            this.createChevronButton()));\n    };\n    SurveyQuestionDropdownBase.prototype.renderValueElement = function (dropdownListModel) {\n        if (this.question.showInputFieldComponent) {\n            return _element_factory__WEBPACK_IMPORTED_MODULE_4__[\"ReactElementFactory\"].Instance.createElement(this.question.inputFieldComponentName, { item: dropdownListModel.getSelectedAction(), question: this.question });\n        }\n        else if (this.question.showSelectedItemLocText) {\n            return this.renderLocString(this.question.selectedItemLocText);\n        }\n        return null;\n    };\n    SurveyQuestionDropdownBase.prototype.renderInput = function (dropdownListModel) {\n        var _this = this;\n        var valueElement = this.renderValueElement(dropdownListModel);\n        var root = survey_core__WEBPACK_IMPORTED_MODULE_1__[\"settings\"].environment.root;\n        var onInputChange = function (e) {\n            if (e.target === root.activeElement) {\n                dropdownListModel.inputStringRendered = e.target.value;\n            }\n        };\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { id: this.question.inputId, className: this.question.getControlClass(), tabIndex: dropdownListModel.noTabIndex ? undefined : 0, \n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            disabled: this.question.isInputReadOnly, required: this.question.isRequired, onKeyDown: this.keyhandler, onBlur: this.blur, role: this.question.ariaRole, \"aria-required\": this.question.ariaRequired, \"aria-label\": this.question.ariaLabel, \"aria-invalid\": this.question.ariaInvalid, \"aria-errormessage\": this.question.ariaErrormessage, \"aria-expanded\": this.question.ariaExpanded === null ? undefined : this.question.ariaExpanded === \"true\", \"aria-controls\": dropdownListModel.listElementId, \"aria-activedescendant\": dropdownListModel.ariaActivedescendant },\n            dropdownListModel.showHintPrefix ?\n                (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.question.cssClasses.hintPrefix },\n                    react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"span\", null, dropdownListModel.hintStringPrefix))) : null,\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.question.cssClasses.controlValue },\n                dropdownListModel.showHintString ?\n                    (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.question.cssClasses.hintSuffix },\n                        react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"span\", { style: { visibility: \"hidden\" }, \"data-bind\": \"text: model.filterString\" }, dropdownListModel.inputStringRendered),\n                        react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"span\", null, dropdownListModel.hintStringSuffix))) : null,\n                valueElement,\n                react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"input\", { type: \"text\", autoComplete: \"off\", id: this.question.getInputId(), ref: function (element) { return (_this.inputElement = element); }, className: this.question.cssClasses.filterStringInput, role: dropdownListModel.filterStringEnabled ? this.question.ariaRole : undefined, \"aria-expanded\": this.question.ariaExpanded === null ? undefined : this.question.ariaExpanded === \"true\", \"aria-label\": this.question.a11y_input_ariaLabel, \"aria-labelledby\": this.question.a11y_input_ariaLabelledBy, \"aria-describedby\": this.question.a11y_input_ariaDescribedBy, \"aria-controls\": dropdownListModel.listElementId, \"aria-activedescendant\": dropdownListModel.ariaActivedescendant, placeholder: dropdownListModel.placeholderRendered, readOnly: dropdownListModel.filterReadOnly ? true : undefined, tabIndex: dropdownListModel.noTabIndex ? undefined : -1, disabled: this.question.isInputReadOnly, inputMode: dropdownListModel.inputMode, onChange: function (e) { onInputChange(e); }, onBlur: this.blur, onFocus: this.focus })),\n            this.createClearButton()));\n    };\n    SurveyQuestionDropdownBase.prototype.createClearButton = function () {\n        if (!this.question.allowClear || !this.question.cssClasses.cleanButtonIconId)\n            return null;\n        var style = { display: !this.question.showClearButton ? \"none\" : \"\" };\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.question.cssClasses.cleanButton, style: style, onClick: this.clear, \"aria-hidden\": \"true\" },\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_components_svg_icon_svg_icon__WEBPACK_IMPORTED_MODULE_3__[\"SvgIcon\"], { className: this.question.cssClasses.cleanButtonSvg, iconName: this.question.cssClasses.cleanButtonIconId, title: this.question.clearCaption, size: \"auto\" })));\n    };\n    SurveyQuestionDropdownBase.prototype.createChevronButton = function () {\n        if (!this.question.cssClasses.chevronButtonIconId)\n            return null;\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.question.cssClasses.chevronButton, \"aria-hidden\": \"true\", onPointerDown: this.chevronPointerDown },\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_components_svg_icon_svg_icon__WEBPACK_IMPORTED_MODULE_3__[\"SvgIcon\"], { className: this.question.cssClasses.chevronButtonSvg, iconName: this.question.cssClasses.chevronButtonIconId, size: \"auto\" })));\n    };\n    SurveyQuestionDropdownBase.prototype.renderOther = function (cssClasses) {\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.question.getCommentAreaCss(true) },\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_reactquestion_comment__WEBPACK_IMPORTED_MODULE_5__[\"SurveyQuestionOtherValueItem\"], { question: this.question, otherCss: cssClasses.other, cssClasses: cssClasses, isDisplayMode: this.isDisplayMode, isOther: true })));\n    };\n    SurveyQuestionDropdownBase.prototype.componentDidUpdate = function (prevProps, prevState) {\n        _super.prototype.componentDidUpdate.call(this, prevProps, prevState);\n        this.updateInputDomElement();\n    };\n    SurveyQuestionDropdownBase.prototype.componentDidMount = function () {\n        _super.prototype.componentDidMount.call(this);\n        this.updateInputDomElement();\n    };\n    SurveyQuestionDropdownBase.prototype.updateInputDomElement = function () {\n        if (!!this.inputElement) {\n            var control = this.inputElement;\n            var newValue = this.question.dropdownListModel.inputStringRendered;\n            if (!survey_core__WEBPACK_IMPORTED_MODULE_1__[\"Helpers\"].isTwoValueEquals(newValue, control.value, false, true, false)) {\n                control.value = this.question.dropdownListModel.inputStringRendered;\n            }\n        }\n    };\n    return SurveyQuestionDropdownBase;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_6__[\"SurveyQuestionUncontrolledElement\"]));\n\n\n\n/***/ }),\n\n/***/ \"./src/react/dropdown-item.tsx\":\n/*!*************************************!*\\\n  !*** ./src/react/dropdown-item.tsx ***!\n  \\*************************************/\n/*! exports provided: SurveyQuestionOptionItem */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_692484__) {\n\n\"use strict\";\n__nested_webpack_require_692484__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_692484__.d(__nested_webpack_exports__, \"SurveyQuestionOptionItem\", function() { return SurveyQuestionOptionItem; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_692484__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_692484__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _reactquestion_element__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_692484__(/*! ./reactquestion_element */ \"./src/react/reactquestion_element.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\nvar SurveyQuestionOptionItem = /** @class */ (function (_super) {\n    __extends(SurveyQuestionOptionItem, _super);\n    function SurveyQuestionOptionItem(props) {\n        var _this = _super.call(this, props) || this;\n        _this.state = { changed: 0 };\n        _this.setupModel();\n        return _this;\n    }\n    SurveyQuestionOptionItem.prototype.componentDidUpdate = function (prevProps, prevState) {\n        _super.prototype.componentDidUpdate.call(this, prevProps, prevState);\n        this.setupModel();\n    };\n    SurveyQuestionOptionItem.prototype.componentWillUnmount = function () {\n        _super.prototype.componentWillUnmount.call(this);\n        if (!!this.item) {\n            this.item.locText.onChanged = function () { };\n        }\n    };\n    SurveyQuestionOptionItem.prototype.setupModel = function () {\n        if (!this.item.locText)\n            return;\n        var self = this;\n        this.item.locText.onChanged = function () {\n            self.setState({ changed: self.state.changed + 1 });\n        };\n    };\n    SurveyQuestionOptionItem.prototype.getStateElement = function () {\n        return this.item;\n    };\n    Object.defineProperty(SurveyQuestionOptionItem.prototype, \"item\", {\n        get: function () {\n            return this.props.item;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionOptionItem.prototype.canRender = function () {\n        return !!this.item;\n    };\n    SurveyQuestionOptionItem.prototype.renderElement = function () {\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"option\", { value: this.item.value, disabled: !this.item.isEnabled }, this.item.text));\n    };\n    return SurveyQuestionOptionItem;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_1__[\"ReactSurveyElement\"]));\n\n\n\n/***/ }),\n\n/***/ \"./src/react/dropdown-select.tsx\":\n/*!***************************************!*\\\n  !*** ./src/react/dropdown-select.tsx ***!\n  \\***************************************/\n/*! exports provided: SurveyQuestionDropdownSelect */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_695990__) {\n\n\"use strict\";\n__nested_webpack_require_695990__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_695990__.d(__nested_webpack_exports__, \"SurveyQuestionDropdownSelect\", function() { return SurveyQuestionDropdownSelect; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_695990__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_695990__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var survey_core__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_695990__(/*! survey-core */ \"survey-core\");\n/* harmony import */ var survey_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__nested_webpack_require_695990__.n(survey_core__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _reactquestion_factory__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_695990__(/*! ./reactquestion_factory */ \"./src/react/reactquestion_factory.tsx\");\n/* harmony import */ var _reactquestion_dropdown__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_695990__(/*! ./reactquestion_dropdown */ \"./src/react/reactquestion_dropdown.tsx\");\n/* harmony import */ var _dropdown_item__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_695990__(/*! ./dropdown-item */ \"./src/react/dropdown-item.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\nvar SurveyQuestionDropdownSelect = /** @class */ (function (_super) {\n    __extends(SurveyQuestionDropdownSelect, _super);\n    function SurveyQuestionDropdownSelect(props) {\n        return _super.call(this, props) || this;\n    }\n    SurveyQuestionDropdownSelect.prototype.renderSelect = function (cssClasses) {\n        var _this = this;\n        var click = function (event) {\n            _this.question.onClick(event);\n        };\n        var keyup = function (event) {\n            _this.question.onKeyUp(event);\n        };\n        var selectElement = this.isDisplayMode ? (\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { id: this.question.inputId, className: this.question.getControlClass(), disabled: true }, this.question.readOnlyText)) :\n            (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"select\", { id: this.question.inputId, className: this.question.getControlClass(), ref: function (select) { return (_this.setControl(select)); }, autoComplete: this.question.autocomplete, onChange: this.updateValueOnEvent, onInput: this.updateValueOnEvent, onClick: click, onKeyUp: keyup, \"aria-required\": this.question.ariaRequired, \"aria-label\": this.question.ariaLabel, \"aria-invalid\": this.question.ariaInvalid, \"aria-errormessage\": this.question.ariaErrormessage, required: this.question.isRequired },\n                this.question.allowClear ? (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"option\", { value: \"\" }, this.question.placeholder)) : null,\n                this.question.visibleChoices.map(function (item, i) { return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_dropdown_item__WEBPACK_IMPORTED_MODULE_4__[\"SurveyQuestionOptionItem\"], { key: \"item\" + i, item: item }); })));\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: cssClasses.selectWrapper },\n            selectElement,\n            this.createChevronButton()));\n    };\n    return SurveyQuestionDropdownSelect;\n}(_reactquestion_dropdown__WEBPACK_IMPORTED_MODULE_3__[\"SurveyQuestionDropdown\"]));\n\n_reactquestion_factory__WEBPACK_IMPORTED_MODULE_2__[\"ReactQuestionFactory\"].Instance.registerQuestion(\"sv-dropdown-select\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](SurveyQuestionDropdownSelect, props);\n});\nsurvey_core__WEBPACK_IMPORTED_MODULE_1__[\"RendererFactory\"].Instance.registerRenderer(\"dropdown\", \"select\", \"sv-dropdown-select\");\n\n\n/***/ }),\n\n/***/ \"./src/react/element-factory.tsx\":\n/*!***************************************!*\\\n  !*** ./src/react/element-factory.tsx ***!\n  \\***************************************/\n/*! exports provided: ReactElementFactory */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_700830__) {\n\n\"use strict\";\n__nested_webpack_require_700830__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_700830__.d(__nested_webpack_exports__, \"ReactElementFactory\", function() { return ReactElementFactory; });\nvar ReactElementFactory = /** @class */ (function () {\n    function ReactElementFactory() {\n        this.creatorHash = {};\n    }\n    ReactElementFactory.prototype.registerElement = function (elementType, elementCreator) {\n        this.creatorHash[elementType] = elementCreator;\n    };\n    ReactElementFactory.prototype.getAllTypes = function () {\n        var result = new Array();\n        for (var key in this.creatorHash) {\n            result.push(key);\n        }\n        return result.sort();\n    };\n    ReactElementFactory.prototype.isElementRegistered = function (elementType) {\n        return !!this.creatorHash[elementType];\n    };\n    ReactElementFactory.prototype.createElement = function (elementType, params) {\n        var creator = this.creatorHash[elementType];\n        if (creator == null)\n            return null;\n        return creator(params);\n    };\n    ReactElementFactory.Instance = new ReactElementFactory();\n    return ReactElementFactory;\n}());\n\n\n\n/***/ }),\n\n/***/ \"./src/react/element-header.tsx\":\n/*!**************************************!*\\\n  !*** ./src/react/element-header.tsx ***!\n  \\**************************************/\n/*! exports provided: SurveyElementHeader */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_702296__) {\n\n\"use strict\";\n__nested_webpack_require_702296__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_702296__.d(__nested_webpack_exports__, \"SurveyElementHeader\", function() { return SurveyElementHeader; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_702296__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_702296__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _components_action_bar_action_bar__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_702296__(/*! ./components/action-bar/action-bar */ \"./src/react/components/action-bar/action-bar.tsx\");\n/* harmony import */ var _components_title_title_element__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_702296__(/*! ./components/title/title-element */ \"./src/react/components/title/title-element.tsx\");\n/* harmony import */ var _reactquestion_element__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_702296__(/*! ./reactquestion_element */ \"./src/react/reactquestion_element.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\nvar SurveyElementHeader = /** @class */ (function (_super) {\n    __extends(SurveyElementHeader, _super);\n    function SurveyElementHeader() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(SurveyElementHeader.prototype, \"element\", {\n        get: function () {\n            return this.props.element;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyElementHeader.prototype.render = function () {\n        var element = this.element;\n        var title = element.hasTitle ? (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_components_title_title_element__WEBPACK_IMPORTED_MODULE_2__[\"TitleElement\"], { element: element })) : null;\n        var description = element.hasDescriptionUnderTitle\n            ? _reactquestion_element__WEBPACK_IMPORTED_MODULE_3__[\"SurveyElementBase\"].renderQuestionDescription(this.element)\n            : null;\n        var additionalTitleToolbarElement = !!element.additionalTitleToolbar ? react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_components_action_bar_action_bar__WEBPACK_IMPORTED_MODULE_1__[\"SurveyActionBar\"], { model: element.additionalTitleToolbar }) : null;\n        return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", { className: element.cssHeader, onClick: function (e) { return element.clickTitleFunction && element.clickTitleFunction(e.nativeEvent); } },\n            title,\n            description,\n            additionalTitleToolbarElement));\n    };\n    return SurveyElementHeader;\n}(react__WEBPACK_IMPORTED_MODULE_0___default.a.Component));\n\n\n\n/***/ }),\n\n/***/ \"./src/react/element.tsx\":\n/*!*******************************!*\\\n  !*** ./src/react/element.tsx ***!\n  \\*******************************/\n/*! exports provided: SurveyRowElement */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_705984__) {\n\n\"use strict\";\n__nested_webpack_require_705984__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_705984__.d(__nested_webpack_exports__, \"SurveyRowElement\", function() { return SurveyRowElement; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_705984__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_705984__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _reactquestion_element__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_705984__(/*! ./reactquestion_element */ \"./src/react/reactquestion_element.tsx\");\n/* harmony import */ var _element_factory__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_705984__(/*! ./element-factory */ \"./src/react/element-factory.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar SurveyRowElement = /** @class */ (function (_super) {\n    __extends(SurveyRowElement, _super);\n    function SurveyRowElement(props) {\n        var _this = _super.call(this, props) || this;\n        _this.element.cssClasses;\n        _this.rootRef = react__WEBPACK_IMPORTED_MODULE_0__[\"createRef\"]();\n        return _this;\n    }\n    SurveyRowElement.prototype.getStateElement = function () {\n        return this.element;\n    };\n    Object.defineProperty(SurveyRowElement.prototype, \"element\", {\n        get: function () {\n            return this.props.element;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyRowElement.prototype, \"index\", {\n        get: function () {\n            return this.props.index;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyRowElement.prototype, \"row\", {\n        get: function () {\n            return this.props.row;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyRowElement.prototype, \"survey\", {\n        get: function () {\n            return this.props.survey;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyRowElement.prototype, \"creator\", {\n        get: function () {\n            return this.props.creator;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyRowElement.prototype, \"css\", {\n        get: function () {\n            return this.props.css;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyRowElement.prototype.componentDidMount = function () {\n        _super.prototype.componentDidMount.call(this);\n        if (this.rootRef.current) {\n            (this.element).setWrapperElement(this.rootRef.current);\n        }\n    };\n    SurveyRowElement.prototype.componentWillUnmount = function () {\n        _super.prototype.componentWillUnmount.call(this);\n        this.element.setWrapperElement(undefined);\n    };\n    SurveyRowElement.prototype.shouldComponentUpdate = function (nextProps, nextState) {\n        if (!_super.prototype.shouldComponentUpdate.call(this, nextProps, nextState))\n            return false;\n        if (nextProps.element !== this.element) {\n            if (nextProps.element) {\n                nextProps.element.setWrapperElement(this.rootRef.current);\n            }\n            if (this.element) {\n                this.element.setWrapperElement(undefined);\n            }\n        }\n        this.element.cssClasses;\n        return true;\n    };\n    SurveyRowElement.prototype.renderElement = function () {\n        var element = this.element;\n        var innerElement = this.createElement(element, this.index);\n        var css = element.cssClassesValue;\n        var focusIn = function () {\n            var el = element;\n            if (el && el.isQuestion) {\n                el.focusIn();\n            }\n        };\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: css.questionWrapper, style: element.rootStyle, \"data-key\": innerElement.key, key: innerElement.key, onFocus: focusIn, ref: this.rootRef }, this.row.isNeedRender ? innerElement : _element_factory__WEBPACK_IMPORTED_MODULE_2__[\"ReactElementFactory\"].Instance.createElement(element.skeletonComponentName, { element: element, css: this.css, })));\n    };\n    SurveyRowElement.prototype.createElement = function (element, elementIndex) {\n        var index = elementIndex ? \"-\" + elementIndex : 0;\n        var elementType = element.getType();\n        if (!_element_factory__WEBPACK_IMPORTED_MODULE_2__[\"ReactElementFactory\"].Instance.isElementRegistered(elementType)) {\n            elementType = \"question\";\n        }\n        return _element_factory__WEBPACK_IMPORTED_MODULE_2__[\"ReactElementFactory\"].Instance.createElement(elementType, {\n            key: element.name + index,\n            element: element,\n            creator: this.creator,\n            survey: this.survey,\n            css: this.css,\n        });\n    };\n    return SurveyRowElement;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_1__[\"SurveyElementBase\"]));\n\n\n\n/***/ }),\n\n/***/ \"./src/react/flow-panel.tsx\":\n/*!**********************************!*\\\n  !*** ./src/react/flow-panel.tsx ***!\n  \\**********************************/\n/*! exports provided: SurveyFlowPanel */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_712004__) {\n\n\"use strict\";\n__nested_webpack_require_712004__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_712004__.d(__nested_webpack_exports__, \"SurveyFlowPanel\", function() { return SurveyFlowPanel; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_712004__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_712004__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _element_factory__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_712004__(/*! ./element-factory */ \"./src/react/element-factory.tsx\");\n/* harmony import */ var _panel__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_712004__(/*! ./panel */ \"./src/react/panel.tsx\");\n/* harmony import */ var _reactquestion__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_712004__(/*! ./reactquestion */ \"./src/react/reactquestion.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\nvar SurveyFlowPanel = /** @class */ (function (_super) {\n    __extends(SurveyFlowPanel, _super);\n    function SurveyFlowPanel(props) {\n        return _super.call(this, props) || this;\n    }\n    Object.defineProperty(SurveyFlowPanel.prototype, \"flowPanel\", {\n        get: function () {\n            return this.panel;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyFlowPanel.prototype.componentDidMount = function () {\n        _super.prototype.componentDidMount.call(this);\n        if (!!this.flowPanel) {\n            this.flowPanel.onCustomHtmlProducing = function () {\n                return \"\";\n            };\n            this.flowPanel.onGetHtmlForQuestion = this.renderQuestion;\n        }\n    };\n    SurveyFlowPanel.prototype.componentWillUnmount = function () {\n        _super.prototype.componentWillUnmount.call(this);\n        if (!!this.flowPanel) {\n            this.flowPanel.onCustomHtmlProducing = null;\n            this.flowPanel.onGetHtmlForQuestion = null;\n        }\n    };\n    SurveyFlowPanel.prototype.getQuestion = function (name) {\n        return this.flowPanel.getQuestionByName(name);\n    };\n    SurveyFlowPanel.prototype.renderQuestion = function (question) {\n        return \"<question>\" + question.name + \"</question>\";\n    };\n    SurveyFlowPanel.prototype.renderRows = function () {\n        var result = this.renderHtml();\n        if (!!result) {\n            return [result];\n        }\n        else {\n            return [];\n        }\n    };\n    SurveyFlowPanel.prototype.getNodeIndex = function () {\n        return this.renderedIndex++;\n    };\n    SurveyFlowPanel.prototype.renderHtml = function () {\n        if (!this.flowPanel)\n            return null;\n        var html = \"<span>\" + this.flowPanel.produceHtml() + \"</span>\";\n        if (!DOMParser) {\n            var htmlValue = { __html: html };\n            return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { dangerouslySetInnerHTML: htmlValue });\n        }\n        var doc = new DOMParser().parseFromString(html, \"text/xml\");\n        this.renderedIndex = 0;\n        return this.renderParentNode(doc);\n    };\n    SurveyFlowPanel.prototype.renderNodes = function (domNodes) {\n        var nodes = [];\n        for (var i = 0; i < domNodes.length; i++) {\n            var node = this.renderNode(domNodes[i]);\n            if (!!node) {\n                nodes.push(node);\n            }\n        }\n        return nodes;\n    };\n    SurveyFlowPanel.prototype.getStyle = function (nodeType) {\n        var style = {};\n        if (nodeType.toLowerCase() === \"b\") {\n            style.fontWeight = \"bold\";\n        }\n        if (nodeType.toLowerCase() === \"i\") {\n            style.fontStyle = \"italic\";\n        }\n        if (nodeType.toLowerCase() === \"u\") {\n            style.textDecoration = \"underline\";\n        }\n        return style;\n    };\n    SurveyFlowPanel.prototype.renderParentNode = function (node) {\n        var nodeType = node.nodeName.toLowerCase();\n        var children = this.renderNodes(this.getChildDomNodes(node));\n        if (nodeType === \"div\")\n            return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { key: this.getNodeIndex() }, children);\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"span\", { key: this.getNodeIndex(), style: this.getStyle(nodeType) }, children));\n    };\n    SurveyFlowPanel.prototype.renderNode = function (node) {\n        if (!this.hasTextChildNodesOnly(node)) {\n            return this.renderParentNode(node);\n        }\n        var nodeType = node.nodeName.toLowerCase();\n        if (nodeType === \"question\") {\n            var question = this.flowPanel.getQuestionByName(node.textContent);\n            if (!question)\n                return null;\n            var questionBody = (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_reactquestion__WEBPACK_IMPORTED_MODULE_3__[\"SurveyQuestion\"], { key: question.name, element: question, creator: this.creator, css: this.css }));\n            return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"span\", { key: this.getNodeIndex() }, questionBody);\n        }\n        if (nodeType === \"div\") {\n            return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { key: this.getNodeIndex() }, node.textContent);\n        }\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"span\", { key: this.getNodeIndex(), style: this.getStyle(nodeType) }, node.textContent));\n    };\n    SurveyFlowPanel.prototype.getChildDomNodes = function (node) {\n        var domNodes = [];\n        for (var i = 0; i < node.childNodes.length; i++) {\n            domNodes.push(node.childNodes[i]);\n        }\n        return domNodes;\n    };\n    SurveyFlowPanel.prototype.hasTextChildNodesOnly = function (node) {\n        var nodes = node.childNodes;\n        for (var i = 0; i < nodes.length; i++) {\n            if (nodes[i].nodeName.toLowerCase() !== \"#text\")\n                return false;\n        }\n        return true;\n    };\n    SurveyFlowPanel.prototype.renderContent = function (style, rows) {\n        return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"f-panel\", { style: style }, rows);\n    };\n    return SurveyFlowPanel;\n}(_panel__WEBPACK_IMPORTED_MODULE_2__[\"SurveyPanel\"]));\n\n_element_factory__WEBPACK_IMPORTED_MODULE_1__[\"ReactElementFactory\"].Instance.registerElement(\"flowpanel\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](SurveyFlowPanel, props);\n});\n\n\n/***/ }),\n\n/***/ \"./src/react/image.tsx\":\n/*!*****************************!*\\\n  !*** ./src/react/image.tsx ***!\n  \\*****************************/\n/*! exports provided: SurveyQuestionImage */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_719367__) {\n\n\"use strict\";\n__nested_webpack_require_719367__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_719367__.d(__nested_webpack_exports__, \"SurveyQuestionImage\", function() { return SurveyQuestionImage; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_719367__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_719367__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _reactquestion_element__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_719367__(/*! ./reactquestion_element */ \"./src/react/reactquestion_element.tsx\");\n/* harmony import */ var _reactquestion_factory__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_719367__(/*! ./reactquestion_factory */ \"./src/react/reactquestion_factory.tsx\");\n/* harmony import */ var _components_svg_icon_svg_icon__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_719367__(/*! ./components/svg-icon/svg-icon */ \"./src/react/components/svg-icon/svg-icon.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\nvar SurveyQuestionImage = /** @class */ (function (_super) {\n    __extends(SurveyQuestionImage, _super);\n    function SurveyQuestionImage(props) {\n        return _super.call(this, props) || this;\n    }\n    SurveyQuestionImage.prototype.componentDidMount = function () {\n        var _this = this;\n        _super.prototype.componentDidMount.call(this);\n        this.question.locImageLink.onChanged = function () {\n            _this.forceUpdate();\n        };\n    };\n    SurveyQuestionImage.prototype.componentWillUnmount = function () {\n        _super.prototype.componentWillUnmount.call(this);\n        this.question.locImageLink.onChanged = function () { };\n    };\n    Object.defineProperty(SurveyQuestionImage.prototype, \"question\", {\n        get: function () {\n            return this.questionBase;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionImage.prototype.renderElement = function () {\n        var _this = this;\n        var cssClasses = this.question.getImageCss();\n        var style = { objectFit: this.question.imageFit, width: this.question.renderedStyleWidth, height: this.question.renderedStyleHeight };\n        if (!this.question.imageLink || this.question.contentNotLoaded) {\n            style[\"display\"] = \"none\";\n        }\n        var control = null;\n        if (this.question.renderedMode === \"image\") {\n            control = (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"img\", { className: cssClasses, src: this.question.locImageLink.renderedHtml, alt: this.question.altText || this.question.title, width: this.question.renderedWidth, height: this.question.renderedHeight, \n                //alt={item.text || item.value}\n                style: style, onLoad: function (event) { _this.question.onLoadHandler(); }, onError: function (event) { _this.question.onErrorHandler(); } }));\n        }\n        if (this.question.renderedMode === \"video\") {\n            control = (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"video\", { controls: true, className: cssClasses, src: this.question.locImageLink.renderedHtml, width: this.question.renderedWidth, height: this.question.renderedHeight, style: style, onLoadedMetadata: function (event) { _this.question.onLoadHandler(); }, onError: function (event) { _this.question.onErrorHandler(); } }));\n        }\n        if (this.question.renderedMode === \"youtube\") {\n            control = (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"iframe\", { className: cssClasses, src: this.question.locImageLink.renderedHtml, width: this.question.renderedWidth, height: this.question.renderedHeight, style: style }));\n        }\n        var noImage = null;\n        if (!this.question.imageLink || this.question.contentNotLoaded) {\n            noImage = (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.question.cssClasses.noImage },\n                react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_components_svg_icon_svg_icon__WEBPACK_IMPORTED_MODULE_3__[\"SvgIcon\"], { iconName: this.question.cssClasses.noImageSvgIconId, size: 48 })));\n        }\n        return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.question.cssClasses.root },\n            control,\n            noImage);\n    };\n    return SurveyQuestionImage;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_1__[\"SurveyQuestionElementBase\"]));\n\n_reactquestion_factory__WEBPACK_IMPORTED_MODULE_2__[\"ReactQuestionFactory\"].Instance.registerQuestion(\"image\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](SurveyQuestionImage, props);\n});\n\n\n/***/ }),\n\n/***/ \"./src/react/imagepicker.tsx\":\n/*!***********************************!*\\\n  !*** ./src/react/imagepicker.tsx ***!\n  \\***********************************/\n/*! exports provided: SurveyQuestionImagePicker, SurveyQuestionImagePickerItem */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_725056__) {\n\n\"use strict\";\n__nested_webpack_require_725056__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_725056__.d(__nested_webpack_exports__, \"SurveyQuestionImagePicker\", function() { return SurveyQuestionImagePicker; });\n/* harmony export (binding) */ __nested_webpack_require_725056__.d(__nested_webpack_exports__, \"SurveyQuestionImagePickerItem\", function() { return SurveyQuestionImagePickerItem; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_725056__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_725056__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _reactquestion_element__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_725056__(/*! ./reactquestion_element */ \"./src/react/reactquestion_element.tsx\");\n/* harmony import */ var _reactquestion_factory__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_725056__(/*! ./reactquestion_factory */ \"./src/react/reactquestion_factory.tsx\");\n/* harmony import */ var _reactsurveymodel__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_725056__(/*! ./reactsurveymodel */ \"./src/react/reactsurveymodel.tsx\");\n/* harmony import */ var _components_svg_icon_svg_icon__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_725056__(/*! ./components/svg-icon/svg-icon */ \"./src/react/components/svg-icon/svg-icon.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\nvar SurveyQuestionImagePicker = /** @class */ (function (_super) {\n    __extends(SurveyQuestionImagePicker, _super);\n    function SurveyQuestionImagePicker(props) {\n        return _super.call(this, props) || this;\n    }\n    Object.defineProperty(SurveyQuestionImagePicker.prototype, \"question\", {\n        get: function () {\n            return this.questionBase;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionImagePicker.prototype.renderElement = function () {\n        var cssClasses = this.question.cssClasses;\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"fieldset\", { className: this.question.getSelectBaseRootCss() },\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"legend\", { className: \"sv-hidden\" }, this.question.locTitle.renderedHtml),\n            this.question.hasColumns ? this.getColumns(cssClasses) : this.getItems(cssClasses)));\n    };\n    SurveyQuestionImagePicker.prototype.getColumns = function (cssClasses) {\n        var _this = this;\n        return this.question.columns.map(function (column, ci) {\n            var items = column.map(function (item, ii) {\n                return _this.renderItem(\"item\" + ii, item, cssClasses);\n            });\n            return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { key: \"column\" + ci, className: _this.question.getColumnClass(), role: \"presentation\" }, items));\n        });\n    };\n    SurveyQuestionImagePicker.prototype.getItems = function (cssClasses) {\n        var items = [];\n        for (var i = 0; i < this.question.visibleChoices.length; i++) {\n            var item = this.question.visibleChoices[i];\n            var key = \"item\" + i;\n            items.push(this.renderItem(key, item, cssClasses));\n        }\n        return items;\n    };\n    Object.defineProperty(SurveyQuestionImagePicker.prototype, \"textStyle\", {\n        get: function () {\n            return { marginLeft: \"3px\", display: \"inline\", position: \"static\" };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionImagePicker.prototype.renderItem = function (key, item, cssClasses) {\n        var renderedItem = react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](SurveyQuestionImagePickerItem, { key: key, question: this.question, item: item, cssClasses: cssClasses });\n        var survey = this.question.survey;\n        var wrappedItem = null;\n        if (!!survey) {\n            wrappedItem = _reactsurveymodel__WEBPACK_IMPORTED_MODULE_3__[\"ReactSurveyElementsWrapper\"].wrapItemValue(survey, renderedItem, this.question, item);\n        }\n        return wrappedItem !== null && wrappedItem !== void 0 ? wrappedItem : renderedItem;\n    };\n    return SurveyQuestionImagePicker;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_1__[\"SurveyQuestionElementBase\"]));\n\nvar SurveyQuestionImagePickerItem = /** @class */ (function (_super) {\n    __extends(SurveyQuestionImagePickerItem, _super);\n    function SurveyQuestionImagePickerItem(props) {\n        var _this = _super.call(this, props) || this;\n        _this.handleOnChange = _this.handleOnChange.bind(_this);\n        return _this;\n    }\n    SurveyQuestionImagePickerItem.prototype.getStateElement = function () {\n        return this.item;\n    };\n    SurveyQuestionImagePickerItem.prototype.componentDidMount = function () {\n        _super.prototype.componentDidMount.call(this);\n        this.reactOnStrChanged();\n    };\n    SurveyQuestionImagePickerItem.prototype.componentWillUnmount = function () {\n        _super.prototype.componentWillUnmount.call(this);\n        this.item.locImageLink.onChanged = function () { };\n    };\n    SurveyQuestionImagePickerItem.prototype.componentDidUpdate = function (prevProps, prevState) {\n        _super.prototype.componentDidUpdate.call(this, prevProps, prevState);\n        this.reactOnStrChanged();\n    };\n    SurveyQuestionImagePickerItem.prototype.reactOnStrChanged = function () {\n        var _this = this;\n        this.item.locImageLink.onChanged = function () {\n            _this.setState({ locImageLinkchanged: !!_this.state && _this.state.locImageLink ? _this.state.locImageLink + 1 : 1 });\n        };\n    };\n    Object.defineProperty(SurveyQuestionImagePickerItem.prototype, \"cssClasses\", {\n        get: function () {\n            return this.props.cssClasses;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionImagePickerItem.prototype, \"item\", {\n        get: function () {\n            return this.props.item;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionImagePickerItem.prototype, \"question\", {\n        get: function () {\n            return this.props.question;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionImagePickerItem.prototype.handleOnChange = function (event) {\n        if (this.question.multiSelect) {\n            if (event.target.checked) {\n                this.question.value = this.question.value.concat(event.target.value);\n            }\n            else {\n                var currValue = this.question.value;\n                currValue.splice(this.question.value.indexOf(event.target.value), 1);\n                this.question.value = currValue;\n            }\n        }\n        else {\n            this.question.value = event.target.value;\n        }\n        this.setState({ value: this.question.value });\n    };\n    SurveyQuestionImagePickerItem.prototype.renderElement = function () {\n        var _this = this;\n        var item = this.item;\n        var question = this.question;\n        var cssClasses = this.cssClasses;\n        var isChecked = question.isItemSelected(item);\n        var itemClass = question.getItemClass(item);\n        var text = null;\n        if (question.showLabel) {\n            text = (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"span\", { className: question.cssClasses.itemText }, item.text ? _reactquestion_element__WEBPACK_IMPORTED_MODULE_1__[\"SurveyElementBase\"].renderLocString(item.locText) : item.value));\n        }\n        var style = { objectFit: this.question.imageFit };\n        var control = null;\n        if (item.locImageLink.renderedHtml && this.question.contentMode === \"image\") {\n            control = (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"img\", { className: cssClasses.image, src: item.locImageLink.renderedHtml, width: this.question.renderedImageWidth, height: this.question.renderedImageHeight, alt: item.locText.renderedHtml, style: style, onLoad: function (event) { _this.question[\"onContentLoaded\"](item, event.nativeEvent); }, onError: function (event) { item.onErrorHandler(item, event.nativeEvent); } }));\n        }\n        if (item.locImageLink.renderedHtml && this.question.contentMode === \"video\") {\n            control = (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"video\", { controls: true, className: cssClasses.image, src: item.locImageLink.renderedHtml, width: this.question.renderedImageWidth, height: this.question.renderedImageHeight, style: style, onLoadedMetadata: function (event) { _this.question[\"onContentLoaded\"](item, event.nativeEvent); }, onError: function (event) { item.onErrorHandler(item, event.nativeEvent); } }));\n        }\n        if (!item.locImageLink.renderedHtml || item.contentNotLoaded) {\n            var style_1 = {\n                width: this.question.renderedImageWidth,\n                height: this.question.renderedImageHeight,\n                objectFit: this.question.imageFit\n            };\n            control = (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: cssClasses.itemNoImage, style: style_1 }, cssClasses.itemNoImageSvgIcon ?\n                react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_components_svg_icon_svg_icon__WEBPACK_IMPORTED_MODULE_4__[\"SvgIcon\"], { className: cssClasses.itemNoImageSvgIcon, iconName: this.question.cssClasses.itemNoImageSvgIconId, size: 48 }) :\n                null));\n        }\n        var renderedItem = (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: itemClass },\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"label\", { className: cssClasses.label },\n                react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"input\", { className: cssClasses.itemControl, id: this.question.getItemId(item), type: this.question.inputType, name: this.question.questionName, checked: isChecked, value: item.value, disabled: !this.question.getItemEnabled(item), onChange: this.handleOnChange, \"aria-required\": this.question.ariaRequired, \"aria-label\": this.question.ariaLabel, \"aria-invalid\": this.question.ariaInvalid, \"aria-errormessage\": this.question.ariaErrormessage }),\n                react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.question.cssClasses.itemDecorator },\n                    react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.question.cssClasses.imageContainer },\n                        !!this.question.cssClasses.checkedItemDecorator ?\n                            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"span\", { className: this.question.cssClasses.checkedItemDecorator }, !!this.question.cssClasses.checkedItemSvgIconId ? react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_components_svg_icon_svg_icon__WEBPACK_IMPORTED_MODULE_4__[\"SvgIcon\"], { size: \"auto\", className: this.question.cssClasses.checkedItemSvgIcon, iconName: this.question.cssClasses.checkedItemSvgIconId }) : null) : null,\n                        control),\n                    text))));\n        return renderedItem;\n    };\n    return SurveyQuestionImagePickerItem;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_1__[\"ReactSurveyElement\"]));\n\n_reactquestion_factory__WEBPACK_IMPORTED_MODULE_2__[\"ReactQuestionFactory\"].Instance.registerQuestion(\"imagepicker\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](SurveyQuestionImagePicker, props);\n});\n\n\n/***/ }),\n\n/***/ \"./src/react/page.tsx\":\n/*!****************************!*\\\n  !*** ./src/react/page.tsx ***!\n  \\****************************/\n/*! exports provided: SurveyPage */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_737428__) {\n\n\"use strict\";\n__nested_webpack_require_737428__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_737428__.d(__nested_webpack_exports__, \"SurveyPage\", function() { return SurveyPage; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_737428__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_737428__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _reactquestion_element__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_737428__(/*! ./reactquestion_element */ \"./src/react/reactquestion_element.tsx\");\n/* harmony import */ var _panel_base__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_737428__(/*! ./panel-base */ \"./src/react/panel-base.tsx\");\n/* harmony import */ var _components_title_title_element__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_737428__(/*! ./components/title/title-element */ \"./src/react/components/title/title-element.tsx\");\n/* harmony import */ var _reactquestion__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_737428__(/*! ./reactquestion */ \"./src/react/reactquestion.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\nvar SurveyPage = /** @class */ (function (_super) {\n    __extends(SurveyPage, _super);\n    function SurveyPage(props) {\n        return _super.call(this, props) || this;\n    }\n    SurveyPage.prototype.getPanelBase = function () {\n        return this.props.page;\n    };\n    Object.defineProperty(SurveyPage.prototype, \"page\", {\n        get: function () {\n            return this.panelBase;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    // shouldComponentUpdate(nextProps: any, nextState: any): boolean {\n    //   if(!super.shouldComponentUpdate(nextProps, nextState)) return false;\n    //   return true;\n    // }\n    SurveyPage.prototype.renderElement = function () {\n        var title = this.renderTitle();\n        var description = this.renderDescription();\n        var rows = this.renderRows(this.panelBase.cssClasses);\n        var errors = (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_reactquestion__WEBPACK_IMPORTED_MODULE_4__[\"SurveyElementErrors\"], { element: this.panelBase, cssClasses: this.panelBase.cssClasses, creator: this.creator }));\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { ref: this.rootRef, className: this.page.cssRoot },\n            title,\n            description,\n            errors,\n            rows));\n    };\n    SurveyPage.prototype.renderTitle = function () {\n        return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_components_title_title_element__WEBPACK_IMPORTED_MODULE_3__[\"TitleElement\"], { element: this.page });\n    };\n    SurveyPage.prototype.renderDescription = function () {\n        if (!this.page._showDescription)\n            return null;\n        var text = _reactquestion_element__WEBPACK_IMPORTED_MODULE_1__[\"SurveyElementBase\"].renderLocString(this.page.locDescription);\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.panelBase.cssClasses.page.description }, text));\n    };\n    return SurveyPage;\n}(_panel_base__WEBPACK_IMPORTED_MODULE_2__[\"SurveyPanelBase\"]));\n\n\n\n/***/ }),\n\n/***/ \"./src/react/panel-base.tsx\":\n/*!**********************************!*\\\n  !*** ./src/react/panel-base.tsx ***!\n  \\**********************************/\n/*! exports provided: SurveyPanelBase */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_741605__) {\n\n\"use strict\";\n__nested_webpack_require_741605__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_741605__.d(__nested_webpack_exports__, \"SurveyPanelBase\", function() { return SurveyPanelBase; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_741605__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_741605__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _reactquestion_element__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_741605__(/*! ./reactquestion_element */ \"./src/react/reactquestion_element.tsx\");\n/* harmony import */ var _row__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_741605__(/*! ./row */ \"./src/react/row.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar SurveyPanelBase = /** @class */ (function (_super) {\n    __extends(SurveyPanelBase, _super);\n    function SurveyPanelBase(props) {\n        var _this = _super.call(this, props) || this;\n        _this.rootRef = react__WEBPACK_IMPORTED_MODULE_0__[\"createRef\"]();\n        return _this;\n    }\n    SurveyPanelBase.prototype.getStateElement = function () {\n        return this.panelBase;\n    };\n    SurveyPanelBase.prototype.canUsePropInState = function (key) {\n        return key !== \"elements\" && _super.prototype.canUsePropInState.call(this, key);\n    };\n    Object.defineProperty(SurveyPanelBase.prototype, \"survey\", {\n        get: function () {\n            return this.getSurvey();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyPanelBase.prototype, \"creator\", {\n        get: function () {\n            return this.props.creator;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyPanelBase.prototype, \"css\", {\n        get: function () {\n            return this.getCss();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyPanelBase.prototype, \"panelBase\", {\n        get: function () {\n            return this.getPanelBase();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyPanelBase.prototype.getPanelBase = function () {\n        return this.props.element || this.props.question;\n    };\n    SurveyPanelBase.prototype.getSurvey = function () {\n        return (this.props.survey || (!!this.panelBase ? this.panelBase.survey : null));\n    };\n    SurveyPanelBase.prototype.getCss = function () {\n        return this.props.css;\n    };\n    SurveyPanelBase.prototype.componentDidMount = function () {\n        _super.prototype.componentDidMount.call(this);\n        this.doAfterRender();\n    };\n    SurveyPanelBase.prototype.componentWillUnmount = function () {\n        _super.prototype.componentWillUnmount.call(this);\n        var el = this.rootRef.current;\n        if (!!el) {\n            el.removeAttribute(\"data-rendered\");\n        }\n    };\n    SurveyPanelBase.prototype.componentDidUpdate = function (prevProps, prevState) {\n        _super.prototype.componentDidUpdate.call(this, prevProps, prevState);\n        if (!!prevProps.page &&\n            !!this.survey &&\n            !!this.survey.activePage &&\n            prevProps.page.id === this.survey.activePage.id)\n            return;\n        this.doAfterRender();\n    };\n    SurveyPanelBase.prototype.doAfterRender = function () {\n        var el = this.rootRef.current;\n        if (el && this.survey) {\n            if (this.panelBase.isPanel) {\n                this.survey.afterRenderPanel(this.panelBase, el);\n            }\n            else {\n                this.survey.afterRenderPage(el);\n            }\n        }\n    };\n    SurveyPanelBase.prototype.getIsVisible = function () {\n        return this.panelBase.isVisible;\n    };\n    SurveyPanelBase.prototype.canRender = function () {\n        return (_super.prototype.canRender.call(this) && !!this.survey && !!this.panelBase && !!this.panelBase.survey && this.getIsVisible());\n    };\n    SurveyPanelBase.prototype.renderRows = function (css) {\n        var _this = this;\n        return this.panelBase.visibleRows.map(function (row) { return _this.createRow(row, css); });\n    };\n    SurveyPanelBase.prototype.createRow = function (row, css) {\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_row__WEBPACK_IMPORTED_MODULE_2__[\"SurveyRow\"], { key: row.id, row: row, survey: this.survey, creator: this.creator, css: css }));\n    };\n    return SurveyPanelBase;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_1__[\"SurveyElementBase\"]));\n\n\n\n/***/ }),\n\n/***/ \"./src/react/panel.tsx\":\n/*!*****************************!*\\\n  !*** ./src/react/panel.tsx ***!\n  \\*****************************/\n/*! exports provided: SurveyPanel */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_747122__) {\n\n\"use strict\";\n__nested_webpack_require_747122__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_747122__.d(__nested_webpack_exports__, \"SurveyPanel\", function() { return SurveyPanel; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_747122__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_747122__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _reactquestion__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_747122__(/*! ./reactquestion */ \"./src/react/reactquestion.tsx\");\n/* harmony import */ var _reactquestion_element__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_747122__(/*! ./reactquestion_element */ \"./src/react/reactquestion_element.tsx\");\n/* harmony import */ var _element_factory__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_747122__(/*! ./element-factory */ \"./src/react/element-factory.tsx\");\n/* harmony import */ var _panel_base__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_747122__(/*! ./panel-base */ \"./src/react/panel-base.tsx\");\n/* harmony import */ var _reactsurveymodel__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_747122__(/*! ./reactsurveymodel */ \"./src/react/reactsurveymodel.tsx\");\n/* harmony import */ var _components_action_bar_action_bar__WEBPACK_IMPORTED_MODULE_6__ = __nested_webpack_require_747122__(/*! ./components/action-bar/action-bar */ \"./src/react/components/action-bar/action-bar.tsx\");\n/* harmony import */ var _components_title_title_element__WEBPACK_IMPORTED_MODULE_7__ = __nested_webpack_require_747122__(/*! ./components/title/title-element */ \"./src/react/components/title/title-element.tsx\");\n/* harmony import */ var _element_header__WEBPACK_IMPORTED_MODULE_8__ = __nested_webpack_require_747122__(/*! ./element-header */ \"./src/react/element-header.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\n\n\n\n\nvar SurveyPanel = /** @class */ (function (_super) {\n    __extends(SurveyPanel, _super);\n    function SurveyPanel(props) {\n        var _this = _super.call(this, props) || this;\n        _this.hasBeenExpanded = false;\n        return _this;\n    }\n    Object.defineProperty(SurveyPanel.prototype, \"panel\", {\n        get: function () {\n            return this.panelBase;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyPanel.prototype.renderElement = function () {\n        var _this = this;\n        var header = this.renderHeader();\n        var errors = (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_reactquestion__WEBPACK_IMPORTED_MODULE_1__[\"SurveyElementErrors\"], { element: this.panelBase, cssClasses: this.panelBase.cssClasses, creator: this.creator }));\n        var style = {\n            paddingLeft: this.panel.innerPaddingLeft,\n            display: this.panel.renderedIsExpanded ? undefined : \"none\",\n        };\n        var content = null;\n        if (this.panel.renderedIsExpanded) {\n            // this.hasBeenExpanded = true;\n            var rows = this.renderRows(this.panelBase.cssClasses);\n            var className = this.panelBase.cssClasses.panel.content;\n            content = this.renderContent(style, rows, className);\n        }\n        var focusIn = function () {\n            if (_this.panelBase)\n                _this.panelBase.focusIn();\n        };\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { ref: this.rootRef, className: this.panelBase.getContainerCss(), onFocus: focusIn, id: this.panelBase.id },\n            this.panel.showErrorsAbovePanel ? errors : null,\n            header,\n            this.panel.showErrorsAbovePanel ? null : errors,\n            content));\n    };\n    SurveyPanel.prototype.renderHeader = function () {\n        if (!this.panel.hasTitle && !this.panel.hasDescription) {\n            return null;\n        }\n        return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_element_header__WEBPACK_IMPORTED_MODULE_8__[\"SurveyElementHeader\"], { element: this.panel });\n    };\n    SurveyPanel.prototype.wrapElement = function (element) {\n        var survey = this.panel.survey;\n        var wrapper = null;\n        if (survey) {\n            wrapper = _reactsurveymodel__WEBPACK_IMPORTED_MODULE_5__[\"ReactSurveyElementsWrapper\"].wrapElement(survey, element, this.panel);\n        }\n        return wrapper !== null && wrapper !== void 0 ? wrapper : element;\n    };\n    SurveyPanel.prototype.renderContent = function (style, rows, className) {\n        var bottom = this.renderBottom();\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { style: style, className: className, id: this.panel.contentId },\n            rows,\n            bottom));\n    };\n    SurveyPanel.prototype.renderTitle = function () {\n        if (!this.panelBase.title)\n            return null;\n        return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_components_title_title_element__WEBPACK_IMPORTED_MODULE_7__[\"TitleElement\"], { element: this.panelBase });\n    };\n    SurveyPanel.prototype.renderDescription = function () {\n        if (!this.panelBase.description)\n            return null;\n        var text = _reactquestion_element__WEBPACK_IMPORTED_MODULE_2__[\"SurveyElementBase\"].renderLocString(this.panelBase.locDescription);\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.panel.cssClasses.panel.description }, text));\n    };\n    SurveyPanel.prototype.renderBottom = function () {\n        var footerToolbar = this.panel.getFooterToolbar();\n        if (!footerToolbar.hasActions)\n            return null;\n        return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_components_action_bar_action_bar__WEBPACK_IMPORTED_MODULE_6__[\"SurveyActionBar\"], { model: footerToolbar });\n    };\n    SurveyPanel.prototype.getIsVisible = function () {\n        return this.panelBase.getIsContentVisible();\n    };\n    return SurveyPanel;\n}(_panel_base__WEBPACK_IMPORTED_MODULE_4__[\"SurveyPanelBase\"]));\n\n_element_factory__WEBPACK_IMPORTED_MODULE_3__[\"ReactElementFactory\"].Instance.registerElement(\"panel\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](SurveyPanel, props);\n});\n\n\n/***/ }),\n\n/***/ \"./src/react/progress.tsx\":\n/*!********************************!*\\\n  !*** ./src/react/progress.tsx ***!\n  \\********************************/\n/*! exports provided: SurveyProgress */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_754197__) {\n\n\"use strict\";\n__nested_webpack_require_754197__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_754197__.d(__nested_webpack_exports__, \"SurveyProgress\", function() { return SurveyProgress; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_754197__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_754197__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var survey_core__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_754197__(/*! survey-core */ \"survey-core\");\n/* harmony import */ var survey_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__nested_webpack_require_754197__.n(survey_core__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _reactSurveyNavigationBase__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_754197__(/*! ./reactSurveyNavigationBase */ \"./src/react/reactSurveyNavigationBase.tsx\");\n/* harmony import */ var _element_factory__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_754197__(/*! ./element-factory */ \"./src/react/element-factory.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\nvar SurveyProgress = /** @class */ (function (_super) {\n    __extends(SurveyProgress, _super);\n    function SurveyProgress(props) {\n        return _super.call(this, props) || this;\n    }\n    Object.defineProperty(SurveyProgress.prototype, \"isTop\", {\n        get: function () {\n            return this.props.isTop;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyProgress.prototype, \"progress\", {\n        get: function () {\n            return this.survey.progressValue;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyProgress.prototype, \"progressText\", {\n        get: function () {\n            return this.survey.progressText;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyProgress.prototype.render = function () {\n        var progressStyle = {\n            width: this.progress + \"%\",\n        };\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.survey.getProgressCssClasses(this.props.container) },\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { style: progressStyle, className: this.css.progressBar, role: \"progressbar\", \"aria-valuemin\": 0, \"aria-valuemax\": 100, \"aria-label\": \"progress\" },\n                react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"span\", { className: survey_core__WEBPACK_IMPORTED_MODULE_1__[\"SurveyProgressModel\"].getProgressTextInBarCss(this.css) }, this.progressText)),\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"span\", { className: survey_core__WEBPACK_IMPORTED_MODULE_1__[\"SurveyProgressModel\"].getProgressTextUnderBarCss(this.css) }, this.progressText)));\n    };\n    return SurveyProgress;\n}(_reactSurveyNavigationBase__WEBPACK_IMPORTED_MODULE_2__[\"SurveyNavigationBase\"]));\n\n_element_factory__WEBPACK_IMPORTED_MODULE_3__[\"ReactElementFactory\"].Instance.registerElement(\"sv-progress-pages\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](SurveyProgress, props);\n});\n_element_factory__WEBPACK_IMPORTED_MODULE_3__[\"ReactElementFactory\"].Instance.registerElement(\"sv-progress-questions\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](SurveyProgress, props);\n});\n_element_factory__WEBPACK_IMPORTED_MODULE_3__[\"ReactElementFactory\"].Instance.registerElement(\"sv-progress-correctquestions\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](SurveyProgress, props);\n});\n_element_factory__WEBPACK_IMPORTED_MODULE_3__[\"ReactElementFactory\"].Instance.registerElement(\"sv-progress-requiredquestions\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](SurveyProgress, props);\n});\n\n\n/***/ }),\n\n/***/ \"./src/react/progressButtons.tsx\":\n/*!***************************************!*\\\n  !*** ./src/react/progressButtons.tsx ***!\n  \\***************************************/\n/*! exports provided: SurveyProgressButtons */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_759112__) {\n\n\"use strict\";\n__nested_webpack_require_759112__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_759112__.d(__nested_webpack_exports__, \"SurveyProgressButtons\", function() { return SurveyProgressButtons; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_759112__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_759112__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var survey_core__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_759112__(/*! survey-core */ \"survey-core\");\n/* harmony import */ var survey_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__nested_webpack_require_759112__.n(survey_core__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _reactSurveyNavigationBase__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_759112__(/*! ./reactSurveyNavigationBase */ \"./src/react/reactSurveyNavigationBase.tsx\");\n/* harmony import */ var _element_factory__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_759112__(/*! ./element-factory */ \"./src/react/element-factory.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\nvar SurveyProgressButtons = /** @class */ (function (_super) {\n    __extends(SurveyProgressButtons, _super);\n    function SurveyProgressButtons(props) {\n        var _this = _super.call(this, props) || this;\n        _this.listContainerRef = react__WEBPACK_IMPORTED_MODULE_0__[\"createRef\"]();\n        return _this;\n    }\n    Object.defineProperty(SurveyProgressButtons.prototype, \"model\", {\n        get: function () {\n            return this.props.model;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyProgressButtons.prototype, \"container\", {\n        get: function () {\n            return this.props.container;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyProgressButtons.prototype.onResize = function (canShowItemTitles) {\n        this.setState({ canShowItemTitles: canShowItemTitles });\n        this.setState({ canShowHeader: !canShowItemTitles });\n    };\n    SurveyProgressButtons.prototype.onUpdateScroller = function (hasScroller) {\n        this.setState({ hasScroller: hasScroller });\n    };\n    SurveyProgressButtons.prototype.onUpdateSettings = function () {\n        this.setState({ canShowItemTitles: this.model.showItemTitles });\n        this.setState({ canShowFooter: !this.model.showItemTitles });\n    };\n    SurveyProgressButtons.prototype.render = function () {\n        var _this = this;\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.model.getRootCss(this.props.container), style: { \"maxWidth\": this.model.progressWidth }, role: \"progressbar\", \"aria-valuemin\": 0, \"aria-valuemax\": 100, \"aria-label\": \"progress\" },\n            this.state.canShowHeader ? react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.css.progressButtonsHeader },\n                react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.css.progressButtonsPageTitle, title: this.model.headerText }, this.model.headerText)) : null,\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.css.progressButtonsContainer },\n                react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.model.getScrollButtonCss(this.state.hasScroller, true), role: \"button\", onClick: function () {\n                        return _this.clickScrollButton(_this.listContainerRef.current, true);\n                    } }),\n                react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.css.progressButtonsListContainer, ref: this.listContainerRef },\n                    react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"ul\", { className: this.css.progressButtonsList }, this.getListElements())),\n                react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.model.getScrollButtonCss(this.state.hasScroller, false), role: \"button\", onClick: function () {\n                        return _this.clickScrollButton(_this.listContainerRef.current, false);\n                    } })),\n            this.state.canShowFooter ? react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.css.progressButtonsFooter },\n                react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.css.progressButtonsPageTitle, title: this.model.footerText }, this.model.footerText)) : null));\n    };\n    SurveyProgressButtons.prototype.getListElements = function () {\n        var _this = this;\n        var buttons = [];\n        this.survey.visiblePages.forEach(function (page, index) {\n            buttons.push(_this.renderListElement(page, index));\n        });\n        return buttons;\n    };\n    SurveyProgressButtons.prototype.renderListElement = function (page, index) {\n        var _this = this;\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"li\", { key: \"listelement\" + index, className: this.model.getListElementCss(index), onClick: this.model.isListElementClickable(index)\n                ? function () { return _this.model.clickListElement(page); }\n                : undefined, \"data-page-number\": this.model.getItemNumber(page) },\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.css.progressButtonsConnector }),\n            this.state.canShowItemTitles ? react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](react__WEBPACK_IMPORTED_MODULE_0__[\"Fragment\"], null,\n                react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.css.progressButtonsPageTitle, title: page.renderedNavigationTitle }, page.renderedNavigationTitle),\n                react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.css.progressButtonsPageDescription, title: page.navigationDescription }, page.navigationDescription)) : null,\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.css.progressButtonsButton },\n                react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.css.progressButtonsButtonBackground }),\n                react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.css.progressButtonsButtonContent }),\n                react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"span\", null, this.model.getItemNumber(page)))));\n    };\n    SurveyProgressButtons.prototype.clickScrollButton = function (listContainerElement, isLeftScroll) {\n        if (!!listContainerElement) {\n            listContainerElement.scrollLeft += (isLeftScroll ? -1 : 1) * 70;\n        }\n    };\n    SurveyProgressButtons.prototype.componentDidMount = function () {\n        var _this = this;\n        _super.prototype.componentDidMount.call(this);\n        setTimeout(function () {\n            _this.respManager = new survey_core__WEBPACK_IMPORTED_MODULE_1__[\"ProgressButtonsResponsivityManager\"](_this.model, _this.listContainerRef.current, _this);\n        }, 10);\n    };\n    SurveyProgressButtons.prototype.componentWillUnmount = function () {\n        if (!!this.respManager) {\n            this.respManager.dispose();\n        }\n        _super.prototype.componentWillUnmount.call(this);\n    };\n    return SurveyProgressButtons;\n}(_reactSurveyNavigationBase__WEBPACK_IMPORTED_MODULE_2__[\"SurveyNavigationBase\"]));\n\n_element_factory__WEBPACK_IMPORTED_MODULE_3__[\"ReactElementFactory\"].Instance.registerElement(\"sv-progress-buttons\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](SurveyProgressButtons, props);\n});\n\n\n/***/ }),\n\n/***/ \"./src/react/progressToc.tsx\":\n/*!***********************************!*\\\n  !*** ./src/react/progressToc.tsx ***!\n  \\***********************************/\n/*! exports provided: SurveyProgressToc */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_767750__) {\n\n\"use strict\";\n__nested_webpack_require_767750__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_767750__.d(__nested_webpack_exports__, \"SurveyProgressToc\", function() { return SurveyProgressToc; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_767750__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_767750__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _reactSurveyNavigationBase__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_767750__(/*! ./reactSurveyNavigationBase */ \"./src/react/reactSurveyNavigationBase.tsx\");\n/* harmony import */ var _element_factory__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_767750__(/*! ./element-factory */ \"./src/react/element-factory.tsx\");\n/* harmony import */ var _components_list_list__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_767750__(/*! ./components/list/list */ \"./src/react/components/list/list.tsx\");\n/* harmony import */ var _components_popup_popup__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_767750__(/*! ./components/popup/popup */ \"./src/react/components/popup/popup.tsx\");\n/* harmony import */ var _components_svg_icon_svg_icon__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_767750__(/*! ./components/svg-icon/svg-icon */ \"./src/react/components/svg-icon/svg-icon.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\n\nvar SurveyProgressToc = /** @class */ (function (_super) {\n    __extends(SurveyProgressToc, _super);\n    function SurveyProgressToc() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SurveyProgressToc.prototype.render = function () {\n        var tocModel = this.props.model;\n        var content;\n        if (tocModel.isMobile) {\n            content = react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { onClick: tocModel.togglePopup },\n                react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_components_svg_icon_svg_icon__WEBPACK_IMPORTED_MODULE_5__[\"SvgIcon\"], { iconName: tocModel.icon, size: 24 }),\n                react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_components_popup_popup__WEBPACK_IMPORTED_MODULE_4__[\"Popup\"], { model: tocModel.popupModel }));\n        }\n        else {\n            content = react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_components_list_list__WEBPACK_IMPORTED_MODULE_3__[\"List\"], { model: tocModel.listModel });\n        }\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: tocModel.containerCss }, content));\n    };\n    return SurveyProgressToc;\n}(_reactSurveyNavigationBase__WEBPACK_IMPORTED_MODULE_1__[\"SurveyNavigationBase\"]));\n\n_element_factory__WEBPACK_IMPORTED_MODULE_2__[\"ReactElementFactory\"].Instance.registerElement(\"sv-navigation-toc\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](SurveyProgressToc, props);\n});\n\n\n/***/ }),\n\n/***/ \"./src/react/rating-dropdown.tsx\":\n/*!***************************************!*\\\n  !*** ./src/react/rating-dropdown.tsx ***!\n  \\***************************************/\n/*! exports provided: RatingDropdownItem, SurveyQuestionRatingDropdown */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_771679__) {\n\n\"use strict\";\n__nested_webpack_require_771679__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_771679__.d(__nested_webpack_exports__, \"SurveyQuestionRatingDropdown\", function() { return SurveyQuestionRatingDropdown; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_771679__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_771679__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var survey_core__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_771679__(/*! survey-core */ \"survey-core\");\n/* harmony import */ var survey_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__nested_webpack_require_771679__.n(survey_core__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _dropdown_base__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_771679__(/*! ./dropdown-base */ \"./src/react/dropdown-base.tsx\");\n/* harmony import */ var _reactquestion_factory__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_771679__(/*! ./reactquestion_factory */ \"./src/react/reactquestion_factory.tsx\");\n/* harmony import */ var _components_rating_rating_dropdown_item__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_771679__(/*! ./components/rating/rating-dropdown-item */ \"./src/react/components/rating/rating-dropdown-item.tsx\");\n/* harmony reexport (safe) */ __nested_webpack_require_771679__.d(__nested_webpack_exports__, \"RatingDropdownItem\", function() { return _components_rating_rating_dropdown_item__WEBPACK_IMPORTED_MODULE_4__[\"RatingDropdownItem\"]; });\n\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\nvar SurveyQuestionRatingDropdown = /** @class */ (function (_super) {\n    __extends(SurveyQuestionRatingDropdown, _super);\n    function SurveyQuestionRatingDropdown(props) {\n        return _super.call(this, props) || this;\n    }\n    SurveyQuestionRatingDropdown.prototype.renderElement = function () {\n        var cssClasses = this.question.cssClasses;\n        var select = this.renderSelect(cssClasses);\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.question.cssClasses.rootDropdown }, select));\n    };\n    return SurveyQuestionRatingDropdown;\n}(_dropdown_base__WEBPACK_IMPORTED_MODULE_2__[\"SurveyQuestionDropdownBase\"]));\n\n_reactquestion_factory__WEBPACK_IMPORTED_MODULE_3__[\"ReactQuestionFactory\"].Instance.registerQuestion(\"sv-rating-dropdown\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](SurveyQuestionRatingDropdown, props);\n});\nsurvey_core__WEBPACK_IMPORTED_MODULE_1__[\"RendererFactory\"].Instance.registerRenderer(\"rating\", \"dropdown\", \"sv-rating-dropdown\");\n\n\n/***/ }),\n\n/***/ \"./src/react/react-popup-survey.tsx\":\n/*!******************************************!*\\\n  !*** ./src/react/react-popup-survey.tsx ***!\n  \\******************************************/\n/*! exports provided: PopupSurvey, SurveyWindow */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_775325__) {\n\n\"use strict\";\n__nested_webpack_require_775325__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_775325__.d(__nested_webpack_exports__, \"PopupSurvey\", function() { return PopupSurvey; });\n/* harmony export (binding) */ __nested_webpack_require_775325__.d(__nested_webpack_exports__, \"SurveyWindow\", function() { return SurveyWindow; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_775325__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_775325__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var survey_core__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_775325__(/*! survey-core */ \"survey-core\");\n/* harmony import */ var survey_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__nested_webpack_require_775325__.n(survey_core__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _reactSurvey__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_775325__(/*! ./reactSurvey */ \"./src/react/reactSurvey.tsx\");\n/* harmony import */ var _components_svg_icon_svg_icon__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_775325__(/*! ./components/svg-icon/svg-icon */ \"./src/react/components/svg-icon/svg-icon.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\nvar PopupSurvey = /** @class */ (function (_super) {\n    __extends(PopupSurvey, _super);\n    function PopupSurvey(props) {\n        var _this = _super.call(this, props) || this;\n        _this.handleOnExpanded = _this.handleOnExpanded.bind(_this);\n        return _this;\n    }\n    PopupSurvey.prototype.getStateElements = function () {\n        return [this.popup, this.popup.survey];\n    };\n    PopupSurvey.prototype.handleOnExpanded = function (event) {\n        this.popup.changeExpandCollapse();\n    };\n    PopupSurvey.prototype.canRender = function () {\n        return _super.prototype.canRender.call(this) && this.popup.isShowing;\n    };\n    PopupSurvey.prototype.renderElement = function () {\n        var _this = this;\n        var header = this.renderWindowHeader();\n        var body = this.renderBody();\n        var style = {};\n        if (!!this.popup.renderedWidth) {\n            style.width = this.popup.renderedWidth;\n            style.maxWidth = this.popup.renderedWidth;\n        }\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.popup.cssRoot, style: style, onScroll: function () { return _this.popup.onScroll(); } },\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.popup.cssRootContent },\n                header,\n                body)));\n    };\n    PopupSurvey.prototype.renderWindowHeader = function () {\n        var popup = this.popup;\n        var headerCss = popup.cssHeaderRoot;\n        var titleCollapsed = null;\n        var expandCollapseIcon;\n        var closeButton = null;\n        var allowFullScreenButon = null;\n        if (popup.isCollapsed) {\n            headerCss += \" \" + popup.cssRootCollapsedMod;\n            titleCollapsed = this.renderTitleCollapsed(popup);\n            expandCollapseIcon = this.renderExpandIcon();\n        }\n        else {\n            expandCollapseIcon = this.renderCollapseIcon();\n        }\n        if (popup.allowClose) {\n            closeButton = this.renderCloseButton(this.popup);\n        }\n        if (popup.allowFullScreen) {\n            allowFullScreenButon = this.renderAllowFullScreenButon(this.popup);\n        }\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: popup.cssHeaderRoot },\n            titleCollapsed,\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: popup.cssHeaderButtonsContainer },\n                allowFullScreenButon,\n                react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: popup.cssHeaderCollapseButton, onClick: this.handleOnExpanded }, expandCollapseIcon),\n                closeButton)));\n    };\n    PopupSurvey.prototype.renderTitleCollapsed = function (popup) {\n        if (!popup.locTitle)\n            return null;\n        return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: popup.cssHeaderTitleCollapsed }, popup.locTitle.renderedHtml);\n    };\n    PopupSurvey.prototype.renderExpandIcon = function () {\n        return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_components_svg_icon_svg_icon__WEBPACK_IMPORTED_MODULE_3__[\"SvgIcon\"], { iconName: \"icon-restore_16x16\", size: 16 });\n    };\n    PopupSurvey.prototype.renderCollapseIcon = function () {\n        return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_components_svg_icon_svg_icon__WEBPACK_IMPORTED_MODULE_3__[\"SvgIcon\"], { iconName: \"icon-minimize_16x16\", size: 16 });\n    };\n    PopupSurvey.prototype.renderCloseButton = function (popup) {\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: popup.cssHeaderCloseButton, onClick: function () { popup.hide(); } },\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_components_svg_icon_svg_icon__WEBPACK_IMPORTED_MODULE_3__[\"SvgIcon\"], { iconName: \"icon-close_16x16\", size: 16 })));\n    };\n    PopupSurvey.prototype.renderAllowFullScreenButon = function (popup) {\n        var Icon;\n        if (popup.isFullScreen) {\n            Icon = react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_components_svg_icon_svg_icon__WEBPACK_IMPORTED_MODULE_3__[\"SvgIcon\"], { iconName: \"icon-back-to-panel_16x16\", size: 16 });\n        }\n        else {\n            Icon = react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_components_svg_icon_svg_icon__WEBPACK_IMPORTED_MODULE_3__[\"SvgIcon\"], { iconName: \"icon-full-screen_16x16\", size: 16 });\n        }\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: popup.cssHeaderFullScreenButton, onClick: function () { popup.toggleFullScreen(); } }, Icon));\n    };\n    PopupSurvey.prototype.renderBody = function () {\n        return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.popup.cssBody }, this.doRender());\n    };\n    PopupSurvey.prototype.createSurvey = function (newProps) {\n        if (!newProps)\n            newProps = {};\n        _super.prototype.createSurvey.call(this, newProps);\n        this.popup = new survey_core__WEBPACK_IMPORTED_MODULE_1__[\"PopupSurveyModel\"](null, this.survey);\n        if (newProps.closeOnCompleteTimeout) {\n            this.popup.closeOnCompleteTimeout = newProps.closeOnCompleteTimeout;\n        }\n        this.popup.allowClose = newProps.allowClose;\n        this.popup.allowFullScreen = newProps.allowFullScreen;\n        this.popup.isShowing = true;\n        if (!this.popup.isExpanded && (newProps.expanded || newProps.isExpanded))\n            this.popup.expand();\n    };\n    return PopupSurvey;\n}(_reactSurvey__WEBPACK_IMPORTED_MODULE_2__[\"Survey\"]));\n\n/**\n * Obsolete. Please use PopupSurvey\n */\nvar SurveyWindow = /** @class */ (function (_super) {\n    __extends(SurveyWindow, _super);\n    function SurveyWindow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return SurveyWindow;\n}(PopupSurvey));\n\n\n\n/***/ }),\n\n/***/ \"./src/react/reactSurvey.tsx\":\n/*!***********************************!*\\\n  !*** ./src/react/reactSurvey.tsx ***!\n  \\***********************************/\n/*! exports provided: Survey, attachKey2click */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_783412__) {\n\n\"use strict\";\n__nested_webpack_require_783412__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_783412__.d(__nested_webpack_exports__, \"Survey\", function() { return Survey; });\n/* harmony export (binding) */ __nested_webpack_require_783412__.d(__nested_webpack_exports__, \"attachKey2click\", function() { return attachKey2click; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_783412__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_783412__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var survey_core__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_783412__(/*! survey-core */ \"survey-core\");\n/* harmony import */ var survey_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__nested_webpack_require_783412__.n(survey_core__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _page__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_783412__(/*! ./page */ \"./src/react/page.tsx\");\n/* harmony import */ var _reactquestion_element__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_783412__(/*! ./reactquestion_element */ \"./src/react/reactquestion_element.tsx\");\n/* harmony import */ var _string_viewer__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_783412__(/*! ./string-viewer */ \"./src/react/string-viewer.tsx\");\n/* harmony import */ var _components_survey_header_survey_header__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_783412__(/*! ./components/survey-header/survey-header */ \"./src/react/components/survey-header/survey-header.tsx\");\n/* harmony import */ var _reactquestion_factory__WEBPACK_IMPORTED_MODULE_6__ = __nested_webpack_require_783412__(/*! ./reactquestion_factory */ \"./src/react/reactquestion_factory.tsx\");\n/* harmony import */ var _element_factory__WEBPACK_IMPORTED_MODULE_7__ = __nested_webpack_require_783412__(/*! ./element-factory */ \"./src/react/element-factory.tsx\");\n/* harmony import */ var _components_brand_info__WEBPACK_IMPORTED_MODULE_8__ = __nested_webpack_require_783412__(/*! ./components/brand-info */ \"./src/react/components/brand-info.tsx\");\n/* harmony import */ var _components_notifier__WEBPACK_IMPORTED_MODULE_9__ = __nested_webpack_require_783412__(/*! ./components/notifier */ \"./src/react/components/notifier.tsx\");\n/* harmony import */ var _components_components_container__WEBPACK_IMPORTED_MODULE_10__ = __nested_webpack_require_783412__(/*! ./components/components-container */ \"./src/react/components/components-container.tsx\");\n/* harmony import */ var _svgbundle__WEBPACK_IMPORTED_MODULE_11__ = __nested_webpack_require_783412__(/*! ./svgbundle */ \"./src/react/svgbundle.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = ( false) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n\n\n\n\n\n\n\n\n\n\n\n\nvar Survey = /** @class */ (function (_super) {\n    __extends(Survey, _super);\n    function Survey(props) {\n        var _this = _super.call(this, props) || this;\n        _this.previousJSON = {};\n        _this.isSurveyUpdated = false;\n        _this.createSurvey(props);\n        _this.updateSurvey(props, {});\n        _this.rootRef = react__WEBPACK_IMPORTED_MODULE_0__[\"createRef\"]();\n        _this.rootNodeId = props.id || null;\n        _this.rootNodeClassName = props.className || \"\";\n        return _this;\n    }\n    Object.defineProperty(Survey, \"cssType\", {\n        get: function () {\n            return survey_core__WEBPACK_IMPORTED_MODULE_1__[\"surveyCss\"].currentType;\n        },\n        set: function (value) {\n            survey_core__WEBPACK_IMPORTED_MODULE_1__[\"StylesManager\"].applyTheme(value);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Survey.prototype.getStateElement = function () {\n        return this.survey;\n    };\n    Survey.prototype.onSurveyUpdated = function () {\n        if (!!this.survey) {\n            var el = this.rootRef.current;\n            if (!!el)\n                this.survey.afterRenderSurvey(el);\n            this.survey.startTimerFromUI();\n        }\n    };\n    Survey.prototype.shouldComponentUpdate = function (nextProps, nextState) {\n        if (!_super.prototype.shouldComponentUpdate.call(this, nextProps, nextState))\n            return false;\n        if (this.isModelJSONChanged(nextProps)) {\n            this.destroySurvey();\n            this.createSurvey(nextProps);\n            this.updateSurvey(nextProps, {});\n            this.isSurveyUpdated = true;\n        }\n        return true;\n    };\n    Survey.prototype.componentDidUpdate = function (prevProps, prevState) {\n        _super.prototype.componentDidUpdate.call(this, prevProps, prevState);\n        this.updateSurvey(this.props, prevProps);\n        if (this.isSurveyUpdated) {\n            this.onSurveyUpdated();\n            this.isSurveyUpdated = false;\n        }\n    };\n    Survey.prototype.componentDidMount = function () {\n        _super.prototype.componentDidMount.call(this);\n        this.onSurveyUpdated();\n    };\n    Survey.prototype.destroySurvey = function () {\n        if (this.survey) {\n            this.survey.renderCallback = undefined;\n            this.survey.onPartialSend.clear();\n            this.survey.stopTimer();\n            this.survey.destroyResizeObserver();\n        }\n    };\n    Survey.prototype.componentWillUnmount = function () {\n        _super.prototype.componentWillUnmount.call(this);\n        this.destroySurvey();\n    };\n    Survey.prototype.doRender = function () {\n        var renderResult;\n        if (this.survey.state == \"completed\") {\n            renderResult = this.renderCompleted();\n        }\n        else if (this.survey.state == \"completedbefore\") {\n            renderResult = this.renderCompletedBefore();\n        }\n        else if (this.survey.state == \"loading\") {\n            renderResult = this.renderLoading();\n        }\n        else if (this.survey.state == \"empty\") {\n            renderResult = this.renderEmptySurvey();\n        }\n        else {\n            renderResult = this.renderSurvey();\n        }\n        var backgroundImage = !!this.survey.backgroundImage ? react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.css.rootBackgroundImage, style: this.survey.backgroundImageStyle }) : null;\n        var header = this.survey.headerView === \"basic\" ? react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_components_survey_header_survey_header__WEBPACK_IMPORTED_MODULE_5__[\"SurveyHeader\"], { survey: this.survey }) : null;\n        var onSubmit = function (event) {\n            event.preventDefault();\n        };\n        var customHeader = react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: \"sv_custom_header\" });\n        if (this.survey.hasLogo) {\n            customHeader = null;\n        }\n        var rootCss = this.survey.getRootCss();\n        var cssClasses = this.rootNodeClassName ? this.rootNodeClassName + \" \" + rootCss : rootCss;\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { id: this.rootNodeId, ref: this.rootRef, className: cssClasses, style: this.survey.themeVariables },\n            this.survey.needRenderIcons ? react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_svgbundle__WEBPACK_IMPORTED_MODULE_11__[\"SvgBundleComponent\"], null) : null,\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.survey.wrapperFormCss },\n                backgroundImage,\n                react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"form\", { onSubmit: onSubmit },\n                    customHeader,\n                    react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.css.container },\n                        header,\n                        react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_components_components_container__WEBPACK_IMPORTED_MODULE_10__[\"ComponentsContainer\"], { survey: this.survey, container: \"header\", needRenderWrapper: false }),\n                        renderResult,\n                        react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_components_components_container__WEBPACK_IMPORTED_MODULE_10__[\"ComponentsContainer\"], { survey: this.survey, container: \"footer\", needRenderWrapper: false }))),\n                this.survey.showBrandInfo ? react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_components_brand_info__WEBPACK_IMPORTED_MODULE_8__[\"BrandInfo\"], null) : null,\n                react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_components_notifier__WEBPACK_IMPORTED_MODULE_9__[\"NotifierComponent\"], { notifier: this.survey.notifier }))));\n    };\n    Survey.prototype.renderElement = function () {\n        return this.doRender();\n    };\n    Object.defineProperty(Survey.prototype, \"css\", {\n        get: function () {\n            return this.survey.css;\n        },\n        set: function (value) {\n            this.survey.css = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Survey.prototype.renderCompleted = function () {\n        if (!this.survey.showCompletedPage)\n            return null;\n        var htmlValue = { __html: this.survey.processedCompletedHtml };\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](react__WEBPACK_IMPORTED_MODULE_0__[\"Fragment\"], null,\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { dangerouslySetInnerHTML: htmlValue, className: this.survey.completedCss }),\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_components_components_container__WEBPACK_IMPORTED_MODULE_10__[\"ComponentsContainer\"], { survey: this.survey, container: \"completePage\", needRenderWrapper: false })));\n    };\n    Survey.prototype.renderCompletedBefore = function () {\n        var htmlValue = { __html: this.survey.processedCompletedBeforeHtml };\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { dangerouslySetInnerHTML: htmlValue, className: this.survey.completedBeforeCss }));\n    };\n    Survey.prototype.renderLoading = function () {\n        var htmlValue = { __html: this.survey.processedLoadingHtml };\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { dangerouslySetInnerHTML: htmlValue, className: this.survey.loadingBodyCss }));\n    };\n    Survey.prototype.renderSurvey = function () {\n        var activePage = this.survey.activePage\n            ? this.renderPage(this.survey.activePage)\n            : null;\n        var isStaring = this.survey.isShowStartingPage;\n        var pageId = this.survey.activePage ? this.survey.activePage.id : \"\";\n        var className = this.survey.bodyCss;\n        var style = {};\n        if (!!this.survey.renderedWidth) {\n            style.maxWidth = this.survey.renderedWidth;\n        }\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.survey.bodyContainerCss },\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_components_components_container__WEBPACK_IMPORTED_MODULE_10__[\"ComponentsContainer\"], { survey: this.survey, container: \"left\" }),\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: \"sv-components-column sv-components-column--expandable\" },\n                react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_components_components_container__WEBPACK_IMPORTED_MODULE_10__[\"ComponentsContainer\"], { survey: this.survey, container: \"center\" }),\n                react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { id: pageId, className: className, style: style },\n                    react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_components_components_container__WEBPACK_IMPORTED_MODULE_10__[\"ComponentsContainer\"], { survey: this.survey, container: \"contentTop\" }),\n                    activePage,\n                    react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_components_components_container__WEBPACK_IMPORTED_MODULE_10__[\"ComponentsContainer\"], { survey: this.survey, container: \"contentBottom\" }))),\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_components_components_container__WEBPACK_IMPORTED_MODULE_10__[\"ComponentsContainer\"], { survey: this.survey, container: \"right\" })));\n    };\n    Survey.prototype.renderPage = function (page) {\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_page__WEBPACK_IMPORTED_MODULE_2__[\"SurveyPage\"], { survey: this.survey, page: page, css: this.css, creator: this }));\n    };\n    Survey.prototype.renderEmptySurvey = function () {\n        return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.css.bodyEmpty }, this.survey.emptySurveyText);\n    };\n    Survey.prototype.createSurvey = function (newProps) {\n        if (!newProps)\n            newProps = {};\n        this.previousJSON = {};\n        if (newProps) {\n            if (newProps.model) {\n                this.survey = newProps.model;\n            }\n            else {\n                if (newProps.json) {\n                    this.previousJSON = newProps.json;\n                    this.survey = new survey_core__WEBPACK_IMPORTED_MODULE_1__[\"SurveyModel\"](newProps.json);\n                }\n            }\n        }\n        else {\n            this.survey = new survey_core__WEBPACK_IMPORTED_MODULE_1__[\"SurveyModel\"]();\n        }\n        if (!!newProps.css) {\n            this.survey.css = this.css;\n        }\n        this.setSurveyEvents();\n    };\n    Survey.prototype.isModelJSONChanged = function (newProps) {\n        if (!!newProps[\"model\"]) {\n            return this.survey !== newProps[\"model\"];\n        }\n        if (!!newProps[\"json\"]) {\n            return !survey_core__WEBPACK_IMPORTED_MODULE_1__[\"Helpers\"].isTwoValueEquals(newProps[\"json\"], this.previousJSON);\n        }\n        return false;\n    };\n    Survey.prototype.updateSurvey = function (newProps, oldProps) {\n        if (!newProps)\n            return;\n        oldProps = oldProps || {};\n        for (var key in newProps) {\n            if (key == \"model\" || key == \"children\" || key == \"json\") {\n                continue;\n            }\n            if (key == \"css\") {\n                this.survey.mergeValues(newProps.css, this.survey.getCss());\n                this.survey[\"updateNavigationCss\"]();\n                this.survey[\"updateElementCss\"]();\n                continue;\n            }\n            if (newProps[key] === oldProps[key])\n                continue;\n            if (key.indexOf(\"on\") == 0 && this.survey[key] && this.survey[key].add) {\n                if (!!oldProps[key]) {\n                    this.survey[key].remove(oldProps[key]);\n                }\n                this.survey[key].add(newProps[key]);\n            }\n            else {\n                this.survey[key] = newProps[key];\n            }\n        }\n    };\n    Survey.prototype.setSurveyEvents = function () {\n        var self = this;\n        this.survey.renderCallback = function () {\n            var counter = !!self.state && !!self.state.modelChanged ? self.state.modelChanged : 0;\n            self.setState({ modelChanged: counter + 1 });\n        };\n        this.survey.onPartialSend.add(function (sender) {\n            if (!!self.state) {\n                self.setState(self.state);\n            }\n        });\n    };\n    //ISurveyCreator\n    Survey.prototype.createQuestionElement = function (question) {\n        return _reactquestion_factory__WEBPACK_IMPORTED_MODULE_6__[\"ReactQuestionFactory\"].Instance.createQuestion(question.isDefaultRendering() ? question.getTemplate() : question.getComponentName(), {\n            question: question,\n            isDisplayMode: question.isInputReadOnly,\n            creator: this,\n        });\n    };\n    Survey.prototype.renderError = function (key, error, cssClasses) {\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { key: key },\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"span\", { className: cssClasses.error.icon || undefined, \"aria-hidden\": \"true\" }),\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"span\", { className: cssClasses.error.item || undefined },\n                react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_string_viewer__WEBPACK_IMPORTED_MODULE_4__[\"SurveyLocStringViewer\"], { locStr: error.locText }))));\n    };\n    Survey.prototype.questionTitleLocation = function () {\n        return this.survey.questionTitleLocation;\n    };\n    Survey.prototype.questionErrorLocation = function () {\n        return this.survey.questionErrorLocation;\n    };\n    return Survey;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_3__[\"SurveyElementBase\"]));\n\n_element_factory__WEBPACK_IMPORTED_MODULE_7__[\"ReactElementFactory\"].Instance.registerElement(\"survey\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](Survey, props);\n});\nfunction attachKey2click(element, viewModel, options) {\n    if (options === void 0) { options = { processEsc: true, disableTabStop: false }; }\n    if ((!!viewModel && viewModel.disableTabStop) || (!!options && options.disableTabStop)) {\n        return react__WEBPACK_IMPORTED_MODULE_0__[\"cloneElement\"](element, { tabIndex: -1 });\n    }\n    options = __assign({}, options);\n    return react__WEBPACK_IMPORTED_MODULE_0__[\"cloneElement\"](element, {\n        tabIndex: 0,\n        onKeyUp: function (evt) {\n            evt.preventDefault();\n            evt.stopPropagation();\n            Object(survey_core__WEBPACK_IMPORTED_MODULE_1__[\"doKey2ClickUp\"])(evt, options);\n            return false;\n        },\n        onKeyDown: function (evt) { return Object(survey_core__WEBPACK_IMPORTED_MODULE_1__[\"doKey2ClickDown\"])(evt, options); },\n        onBlur: function (evt) { return Object(survey_core__WEBPACK_IMPORTED_MODULE_1__[\"doKey2ClickBlur\"])(evt); }\n    });\n}\n\n\n/***/ }),\n\n/***/ \"./src/react/reactSurveyNavigationBase.tsx\":\n/*!*************************************************!*\\\n  !*** ./src/react/reactSurveyNavigationBase.tsx ***!\n  \\*************************************************/\n/*! exports provided: SurveyNavigationBase */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_802277__) {\n\n\"use strict\";\n__nested_webpack_require_802277__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_802277__.d(__nested_webpack_exports__, \"SurveyNavigationBase\", function() { return SurveyNavigationBase; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_802277__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_802277__.n(react__WEBPACK_IMPORTED_MODULE_0__);\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\nvar SurveyNavigationBase = /** @class */ (function (_super) {\n    __extends(SurveyNavigationBase, _super);\n    function SurveyNavigationBase(props) {\n        var _this = _super.call(this, props) || this;\n        _this.updateStateFunction = null;\n        _this.state = { update: 0 };\n        return _this;\n    }\n    Object.defineProperty(SurveyNavigationBase.prototype, \"survey\", {\n        get: function () {\n            return this.props.survey;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyNavigationBase.prototype, \"css\", {\n        get: function () {\n            return this.props.css || this.survey.css;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyNavigationBase.prototype.componentDidMount = function () {\n        if (this.survey) {\n            var self = this;\n            this.updateStateFunction = function () {\n                self.setState({ update: self.state.update + 1 });\n            };\n            this.survey.onPageVisibleChanged.add(this.updateStateFunction);\n        }\n    };\n    SurveyNavigationBase.prototype.componentWillUnmount = function () {\n        if (this.survey && this.updateStateFunction) {\n            this.survey.onPageVisibleChanged.remove(this.updateStateFunction);\n            this.updateStateFunction = null;\n        }\n    };\n    return SurveyNavigationBase;\n}(react__WEBPACK_IMPORTED_MODULE_0__[\"Component\"]));\n\n\n\n/***/ }),\n\n/***/ \"./src/react/reactquestion.tsx\":\n/*!*************************************!*\\\n  !*** ./src/react/reactquestion.tsx ***!\n  \\*************************************/\n/*! exports provided: SurveyQuestion, SurveyElementErrors, SurveyQuestionAndErrorsWrapped, SurveyQuestionAndErrorsCell, SurveyQuestionErrorCell */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_805343__) {\n\n\"use strict\";\n__nested_webpack_require_805343__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_805343__.d(__nested_webpack_exports__, \"SurveyQuestion\", function() { return SurveyQuestion; });\n/* harmony export (binding) */ __nested_webpack_require_805343__.d(__nested_webpack_exports__, \"SurveyElementErrors\", function() { return SurveyElementErrors; });\n/* harmony export (binding) */ __nested_webpack_require_805343__.d(__nested_webpack_exports__, \"SurveyQuestionAndErrorsWrapped\", function() { return SurveyQuestionAndErrorsWrapped; });\n/* harmony export (binding) */ __nested_webpack_require_805343__.d(__nested_webpack_exports__, \"SurveyQuestionAndErrorsCell\", function() { return SurveyQuestionAndErrorsCell; });\n/* harmony export (binding) */ __nested_webpack_require_805343__.d(__nested_webpack_exports__, \"SurveyQuestionErrorCell\", function() { return SurveyQuestionErrorCell; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_805343__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_805343__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _reactsurveymodel__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_805343__(/*! ./reactsurveymodel */ \"./src/react/reactsurveymodel.tsx\");\n/* harmony import */ var _element_factory__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_805343__(/*! ./element-factory */ \"./src/react/element-factory.tsx\");\n/* harmony import */ var _reactquestion_element__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_805343__(/*! ./reactquestion_element */ \"./src/react/reactquestion_element.tsx\");\n/* harmony import */ var _reactquestion_comment__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_805343__(/*! ./reactquestion_comment */ \"./src/react/reactquestion_comment.tsx\");\n/* harmony import */ var _custom_widget__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_805343__(/*! ./custom-widget */ \"./src/react/custom-widget.tsx\");\n/* harmony import */ var _element_header__WEBPACK_IMPORTED_MODULE_6__ = __nested_webpack_require_805343__(/*! ./element-header */ \"./src/react/element-header.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\n\n\nvar SurveyQuestion = /** @class */ (function (_super) {\n    __extends(SurveyQuestion, _super);\n    function SurveyQuestion(props) {\n        var _this = _super.call(this, props) || this;\n        _this.isNeedFocus = false;\n        _this.rootRef = react__WEBPACK_IMPORTED_MODULE_0__[\"createRef\"]();\n        return _this;\n    }\n    SurveyQuestion.renderQuestionBody = function (creator, question) {\n        // if (!question.isVisible) return null;\n        var customWidget = question.customWidget;\n        if (!customWidget) {\n            return creator.createQuestionElement(question);\n        }\n        return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_custom_widget__WEBPACK_IMPORTED_MODULE_5__[\"SurveyCustomWidget\"], { creator: creator, question: question });\n    };\n    SurveyQuestion.prototype.getStateElement = function () {\n        return this.question;\n    };\n    Object.defineProperty(SurveyQuestion.prototype, \"question\", {\n        get: function () {\n            return this.props.element;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestion.prototype, \"creator\", {\n        get: function () {\n            return this.props.creator;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestion.prototype.componentDidMount = function () {\n        _super.prototype.componentDidMount.call(this);\n        if (!!this.question) {\n            this.question[\"react\"] = this;\n        }\n        this.doAfterRender();\n    };\n    SurveyQuestion.prototype.componentWillUnmount = function () {\n        _super.prototype.componentWillUnmount.call(this);\n        if (!!this.question) {\n            this.question[\"react\"] = null;\n        }\n        var el = this.rootRef.current;\n        if (!!el) {\n            el.removeAttribute(\"data-rendered\");\n        }\n    };\n    SurveyQuestion.prototype.componentDidUpdate = function (prevProps, prevState) {\n        _super.prototype.componentDidUpdate.call(this, prevProps, prevState);\n        this.doAfterRender();\n    };\n    SurveyQuestion.prototype.doAfterRender = function () {\n        if (this.isNeedFocus) {\n            if (!this.question.isCollapsed) {\n                this.question.clickTitleFunction();\n            }\n            this.isNeedFocus = false;\n        }\n        if (this.question) {\n            var el = this.rootRef.current;\n            if (el && el.getAttribute(\"data-rendered\") !== \"r\") {\n                el.setAttribute(\"data-rendered\", \"r\");\n                el.setAttribute(\"data-name\", this.question.name);\n                if (this.question.afterRender) {\n                    this.question.afterRender(el);\n                }\n            }\n        }\n    };\n    SurveyQuestion.prototype.canRender = function () {\n        return (_super.prototype.canRender.call(this) &&\n            !!this.question &&\n            !!this.creator);\n    };\n    SurveyQuestion.prototype.renderQuestionContent = function () {\n        var question = this.question;\n        var contentStyle = {\n            display: this.question.renderedIsExpanded ? \"\" : \"none\",\n        };\n        var cssClasses = question.cssClasses;\n        var questionRender = this.renderQuestion();\n        var errorsTop = this.question.showErrorOnTop\n            ? this.renderErrors(cssClasses, \"top\")\n            : null;\n        var errorsBottom = this.question.showErrorOnBottom\n            ? this.renderErrors(cssClasses, \"bottom\")\n            : null;\n        var comment = question && question.hasComment ? this.renderComment(cssClasses) : null;\n        var descriptionUnderInput = question.hasDescriptionUnderInput\n            ? this.renderDescription()\n            : null;\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: question.cssContent || undefined, style: contentStyle, role: \"presentation\" },\n            errorsTop,\n            questionRender,\n            comment,\n            errorsBottom,\n            descriptionUnderInput));\n    };\n    SurveyQuestion.prototype.renderElement = function () {\n        var question = this.question;\n        var cssClasses = question.cssClasses;\n        var header = this.renderHeader(question);\n        var headerTop = question.hasTitleOnLeftTop ? header : null;\n        var headerBottom = question.hasTitleOnBottom ? header : null;\n        var errorsAboveQuestion = this.question.showErrorsAboveQuestion\n            ? this.renderErrors(cssClasses, \"\")\n            : null;\n        var errorsBelowQuestion = this.question.showErrorsBelowQuestion\n            ? this.renderErrors(cssClasses, \"\")\n            : null;\n        var rootStyle = question.getRootStyle();\n        var questionContent = this.wrapQuestionContent(this.renderQuestionContent());\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](react__WEBPACK_IMPORTED_MODULE_0__[\"Fragment\"], null,\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { ref: this.rootRef, id: question.id, className: question.getRootCss(), style: rootStyle, role: question.ariaRole, \"aria-required\": this.question.ariaRequired, \"aria-invalid\": this.question.ariaInvalid, \"aria-labelledby\": question.ariaLabelledBy, \"aria-describedby\": question.ariaDescribedBy, \"aria-expanded\": question.ariaExpanded === null ? undefined : question.ariaExpanded === \"true\" },\n                errorsAboveQuestion,\n                headerTop,\n                questionContent,\n                headerBottom,\n                errorsBelowQuestion)));\n    };\n    SurveyQuestion.prototype.wrapElement = function (element) {\n        var survey = this.question.survey;\n        var wrapper = null;\n        if (survey) {\n            wrapper = _reactsurveymodel__WEBPACK_IMPORTED_MODULE_1__[\"ReactSurveyElementsWrapper\"].wrapElement(survey, element, this.question);\n        }\n        return wrapper !== null && wrapper !== void 0 ? wrapper : element;\n    };\n    SurveyQuestion.prototype.wrapQuestionContent = function (element) {\n        var survey = this.question.survey;\n        var wrapper = null;\n        if (survey) {\n            wrapper = _reactsurveymodel__WEBPACK_IMPORTED_MODULE_1__[\"ReactSurveyElementsWrapper\"].wrapQuestionContent(survey, element, this.question);\n        }\n        return wrapper !== null && wrapper !== void 0 ? wrapper : element;\n    };\n    SurveyQuestion.prototype.renderQuestion = function () {\n        return SurveyQuestion.renderQuestionBody(this.creator, this.question);\n    };\n    SurveyQuestion.prototype.renderDescription = function () {\n        return _reactquestion_element__WEBPACK_IMPORTED_MODULE_3__[\"SurveyElementBase\"].renderQuestionDescription(this.question);\n    };\n    SurveyQuestion.prototype.renderComment = function (cssClasses) {\n        var commentText = _reactquestion_element__WEBPACK_IMPORTED_MODULE_3__[\"SurveyElementBase\"].renderLocString(this.question.locCommentText);\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.question.getCommentAreaCss() },\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", null, commentText),\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_reactquestion_comment__WEBPACK_IMPORTED_MODULE_4__[\"SurveyQuestionCommentItem\"], { question: this.question, cssClasses: cssClasses, otherCss: cssClasses.other, isDisplayMode: this.question.isInputReadOnly })));\n    };\n    SurveyQuestion.prototype.renderHeader = function (question) {\n        return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_element_header__WEBPACK_IMPORTED_MODULE_6__[\"SurveyElementHeader\"], { element: question });\n    };\n    SurveyQuestion.prototype.renderErrors = function (cssClasses, location) {\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](SurveyElementErrors, { element: this.question, cssClasses: cssClasses, creator: this.creator, location: location, id: this.question.id + \"_errors\" }));\n    };\n    return SurveyQuestion;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_3__[\"SurveyElementBase\"]));\n\n_element_factory__WEBPACK_IMPORTED_MODULE_2__[\"ReactElementFactory\"].Instance.registerElement(\"question\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](SurveyQuestion, props);\n});\nvar SurveyElementErrors = /** @class */ (function (_super) {\n    __extends(SurveyElementErrors, _super);\n    function SurveyElementErrors(props) {\n        var _this = _super.call(this, props) || this;\n        _this.state = _this.getState();\n        return _this;\n    }\n    Object.defineProperty(SurveyElementErrors.prototype, \"id\", {\n        get: function () {\n            return this.props.element.id + \"_errors\";\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyElementErrors.prototype, \"element\", {\n        get: function () {\n            return this.props.element;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyElementErrors.prototype, \"creator\", {\n        get: function () {\n            return this.props.creator;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyElementErrors.prototype, \"location\", {\n        get: function () {\n            return this.props.location;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyElementErrors.prototype.getState = function (prevState) {\n        if (prevState === void 0) { prevState = null; }\n        return !prevState ? { error: 0 } : { error: prevState.error + 1 };\n    };\n    SurveyElementErrors.prototype.canRender = function () {\n        return !!this.element && this.element.hasVisibleErrors;\n    };\n    SurveyElementErrors.prototype.componentWillUnmount = function () {\n    };\n    SurveyElementErrors.prototype.renderElement = function () {\n        var errors = [];\n        for (var i = 0; i < this.element.errors.length; i++) {\n            var key = \"error\" + i;\n            errors.push(this.creator.renderError(key, this.element.errors[i], this.cssClasses));\n        }\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { role: \"alert\", \"aria-live\": \"polite\", className: this.element.cssError, id: this.id }, errors));\n    };\n    return SurveyElementErrors;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_3__[\"ReactSurveyElement\"]));\n\nvar SurveyQuestionAndErrorsWrapped = /** @class */ (function (_super) {\n    __extends(SurveyQuestionAndErrorsWrapped, _super);\n    function SurveyQuestionAndErrorsWrapped(props) {\n        return _super.call(this, props) || this;\n    }\n    SurveyQuestionAndErrorsWrapped.prototype.getStateElement = function () {\n        return this.question;\n    };\n    Object.defineProperty(SurveyQuestionAndErrorsWrapped.prototype, \"question\", {\n        get: function () {\n            return this.getQuestion();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionAndErrorsWrapped.prototype, \"creator\", {\n        get: function () {\n            return this.props.creator;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionAndErrorsWrapped.prototype.getQuestion = function () {\n        return this.props.question;\n    };\n    Object.defineProperty(SurveyQuestionAndErrorsWrapped.prototype, \"itemCss\", {\n        get: function () {\n            return this.props.itemCss;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionAndErrorsWrapped.prototype.componentDidMount = function () {\n        _super.prototype.componentDidMount.call(this);\n        this.doAfterRender();\n    };\n    SurveyQuestionAndErrorsWrapped.prototype.componentDidUpdate = function (prevProps, prevState) {\n        _super.prototype.componentDidUpdate.call(this, prevProps, prevState);\n        this.doAfterRender();\n    };\n    SurveyQuestionAndErrorsWrapped.prototype.doAfterRender = function () { };\n    SurveyQuestionAndErrorsWrapped.prototype.canRender = function () {\n        return !!this.question;\n    };\n    SurveyQuestionAndErrorsWrapped.prototype.renderContent = function () {\n        var renderedQuestion = this.renderQuestion();\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](react__WEBPACK_IMPORTED_MODULE_0__[\"Fragment\"], null, renderedQuestion));\n    };\n    SurveyQuestionAndErrorsWrapped.prototype.getShowErrors = function () {\n        return this.question.isVisible;\n    };\n    SurveyQuestionAndErrorsWrapped.prototype.renderQuestion = function () {\n        return SurveyQuestion.renderQuestionBody(this.creator, this.question);\n    };\n    return SurveyQuestionAndErrorsWrapped;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_3__[\"ReactSurveyElement\"]));\n\nvar SurveyQuestionAndErrorsCell = /** @class */ (function (_super) {\n    __extends(SurveyQuestionAndErrorsCell, _super);\n    function SurveyQuestionAndErrorsCell(props) {\n        var _this = _super.call(this, props) || this;\n        _this.cellRef = react__WEBPACK_IMPORTED_MODULE_0__[\"createRef\"]();\n        return _this;\n    }\n    SurveyQuestionAndErrorsCell.prototype.componentWillUnmount = function () {\n        _super.prototype.componentWillUnmount.call(this);\n        if (this.question) {\n            var el = this.cellRef.current;\n            if (!!el) {\n                el.removeAttribute(\"data-rendered\");\n            }\n        }\n    };\n    SurveyQuestionAndErrorsCell.prototype.renderElement = function () {\n        var style = this.getCellStyle();\n        var cell = this.props.cell;\n        var focusIn = function () { cell.focusIn(); };\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"td\", { ref: this.cellRef, className: this.itemCss, colSpan: cell.colSpans, \"data-responsive-title\": this.getHeaderText(), title: cell.getTitle(), style: style, onFocus: focusIn }, this.wrapCell(this.props.cell, (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.props.cell.cellQuestionWrapperClassName }, this.renderQuestion())))));\n    };\n    SurveyQuestionAndErrorsCell.prototype.getCellStyle = function () {\n        return null;\n    };\n    SurveyQuestionAndErrorsCell.prototype.getHeaderText = function () {\n        return \"\";\n    };\n    SurveyQuestionAndErrorsCell.prototype.wrapCell = function (cell, element) {\n        if (!cell) {\n            return element;\n        }\n        var survey = this.question.survey;\n        var wrapper = null;\n        if (survey) {\n            wrapper = _reactsurveymodel__WEBPACK_IMPORTED_MODULE_1__[\"ReactSurveyElementsWrapper\"].wrapMatrixCell(survey, element, cell, this.props.reason);\n        }\n        return wrapper !== null && wrapper !== void 0 ? wrapper : element;\n    };\n    return SurveyQuestionAndErrorsCell;\n}(SurveyQuestionAndErrorsWrapped));\n\nvar SurveyQuestionErrorCell = /** @class */ (function (_super) {\n    __extends(SurveyQuestionErrorCell, _super);\n    function SurveyQuestionErrorCell(props) {\n        var _this = _super.call(this, props) || this;\n        _this.state = {\n            changed: 0\n        };\n        if (_this.question) {\n            _this.registerCallback(_this.question);\n        }\n        return _this;\n    }\n    Object.defineProperty(SurveyQuestionErrorCell.prototype, \"question\", {\n        get: function () {\n            return this.props.question;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionErrorCell.prototype.update = function () {\n        this.setState({ changed: this.state.changed + 1 });\n    };\n    SurveyQuestionErrorCell.prototype.registerCallback = function (question) {\n        var _this = this;\n        question.registerFunctionOnPropertyValueChanged(\"errors\", function () {\n            _this.update();\n        }, \"__reactSubscription\");\n    };\n    SurveyQuestionErrorCell.prototype.unRegisterCallback = function (question) {\n        question.unRegisterFunctionOnPropertyValueChanged(\"errors\", \"__reactSubscription\");\n    };\n    SurveyQuestionErrorCell.prototype.componentDidUpdate = function (prevProps) {\n        if (prevProps.question && prevProps.question !== this.question) {\n            this.unRegisterCallback(prevProps.cell);\n        }\n        if (this.question) {\n            this.registerCallback(this.question);\n        }\n    };\n    SurveyQuestionErrorCell.prototype.componentWillUnmount = function () {\n        if (this.question) {\n            this.unRegisterCallback(this.question);\n        }\n    };\n    SurveyQuestionErrorCell.prototype.render = function () {\n        return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](SurveyElementErrors, { element: this.question, creator: this.props.creator, cssClasses: this.question.cssClasses });\n    };\n    return SurveyQuestionErrorCell;\n}(react__WEBPACK_IMPORTED_MODULE_0__[\"Component\"]));\n\n\n\n/***/ }),\n\n/***/ \"./src/react/reactquestion_buttongroup.tsx\":\n/*!*************************************************!*\\\n  !*** ./src/react/reactquestion_buttongroup.tsx ***!\n  \\*************************************************/\n/*! exports provided: SurveyQuestionButtonGroup, SurveyButtonGroupItem */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_825263__) {\n\n\"use strict\";\n__nested_webpack_require_825263__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_825263__.d(__nested_webpack_exports__, \"SurveyQuestionButtonGroup\", function() { return SurveyQuestionButtonGroup; });\n/* harmony export (binding) */ __nested_webpack_require_825263__.d(__nested_webpack_exports__, \"SurveyButtonGroupItem\", function() { return SurveyButtonGroupItem; });\n/* harmony import */ var _reactquestion_element__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_825263__(/*! ./reactquestion_element */ \"./src/react/reactquestion_element.tsx\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_825263__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__nested_webpack_require_825263__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _components_svg_icon_svg_icon__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_825263__(/*! ./components/svg-icon/svg-icon */ \"./src/react/components/svg-icon/svg-icon.tsx\");\n/* harmony import */ var survey_core__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_825263__(/*! survey-core */ \"survey-core\");\n/* harmony import */ var survey_core__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__nested_webpack_require_825263__.n(survey_core__WEBPACK_IMPORTED_MODULE_3__);\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\nvar SurveyQuestionButtonGroup = /** @class */ (function (_super) {\n    __extends(SurveyQuestionButtonGroup, _super);\n    function SurveyQuestionButtonGroup(props) {\n        return _super.call(this, props) || this;\n    }\n    Object.defineProperty(SurveyQuestionButtonGroup.prototype, \"question\", {\n        get: function () {\n            return this.questionBase;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionButtonGroup.prototype.getStateElement = function () {\n        return this.question;\n    };\n    SurveyQuestionButtonGroup.prototype.renderElement = function () {\n        var items = this.renderItems();\n        return react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(\"div\", { className: this.question.cssClasses.root }, items);\n    };\n    SurveyQuestionButtonGroup.prototype.renderItems = function () {\n        var _this = this;\n        return this.question.visibleChoices.map(function (item, index) {\n            return (react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(SurveyButtonGroupItem, { key: _this.question.inputId + \"_\" + index, item: item, question: _this.question, index: index }));\n        });\n    };\n    return SurveyQuestionButtonGroup;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_0__[\"SurveyQuestionElementBase\"]));\n\nvar SurveyButtonGroupItem = /** @class */ (function (_super) {\n    __extends(SurveyButtonGroupItem, _super);\n    function SurveyButtonGroupItem(props) {\n        return _super.call(this, props) || this;\n    }\n    Object.defineProperty(SurveyButtonGroupItem.prototype, \"index\", {\n        get: function () {\n            return this.props.index;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyButtonGroupItem.prototype, \"question\", {\n        get: function () {\n            return this.props.question;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyButtonGroupItem.prototype, \"item\", {\n        get: function () {\n            return this.props.item;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyButtonGroupItem.prototype.getStateElement = function () {\n        return this.item;\n    };\n    SurveyButtonGroupItem.prototype.renderElement = function () {\n        this.model = new survey_core__WEBPACK_IMPORTED_MODULE_3__[\"ButtonGroupItemModel\"](this.question, this.item, this.index);\n        var icon = this.renderIcon();\n        var input = this.renderInput();\n        var caption = this.renderCaption();\n        return (react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(\"label\", { role: \"radio\", className: this.model.css.label, title: this.model.caption.renderedHtml },\n            input,\n            react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(\"div\", { className: this.model.css.decorator },\n                icon,\n                caption)));\n    };\n    SurveyButtonGroupItem.prototype.renderIcon = function () {\n        if (!!this.model.iconName) {\n            return (react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_components_svg_icon_svg_icon__WEBPACK_IMPORTED_MODULE_2__[\"SvgIcon\"], { className: this.model.css.icon, iconName: this.model.iconName, size: this.model.iconSize || 24 }));\n        }\n        return null;\n    };\n    SurveyButtonGroupItem.prototype.renderInput = function () {\n        var _this = this;\n        return (react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(\"input\", { className: this.model.css.control, id: this.model.id, type: \"radio\", name: this.model.name, checked: this.model.selected, value: this.model.value, disabled: this.model.readOnly, onChange: function () {\n                _this.model.onChange();\n            }, \"aria-required\": this.model.isRequired, \"aria-label\": this.model.caption.renderedHtml, \"aria-invalid\": this.model.hasErrors, \"aria-errormessage\": this.model.describedBy, role: \"radio\" }));\n    };\n    SurveyButtonGroupItem.prototype.renderCaption = function () {\n        if (!this.model.showCaption)\n            return null;\n        var caption = this.renderLocString(this.model.caption);\n        return (react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(\"span\", { className: this.model.css.caption, title: this.model.caption.renderedHtml }, caption));\n    };\n    return SurveyButtonGroupItem;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_0__[\"SurveyElementBase\"]));\n\n// ReactQuestionFactory.Instance.registerQuestion(\"buttongroup\", props => {\n//   return React.createElement(SurveyQuestionButtonGroup, props);\n// });\n\n\n/***/ }),\n\n/***/ \"./src/react/reactquestion_checkbox.tsx\":\n/*!**********************************************!*\\\n  !*** ./src/react/reactquestion_checkbox.tsx ***!\n  \\**********************************************/\n/*! exports provided: SurveyQuestionCheckbox, SurveyQuestionCheckboxItem */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_832235__) {\n\n\"use strict\";\n__nested_webpack_require_832235__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_832235__.d(__nested_webpack_exports__, \"SurveyQuestionCheckbox\", function() { return SurveyQuestionCheckbox; });\n/* harmony export (binding) */ __nested_webpack_require_832235__.d(__nested_webpack_exports__, \"SurveyQuestionCheckboxItem\", function() { return SurveyQuestionCheckboxItem; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_832235__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_832235__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _reactquestion_element__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_832235__(/*! ./reactquestion_element */ \"./src/react/reactquestion_element.tsx\");\n/* harmony import */ var _reactquestion_comment__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_832235__(/*! ./reactquestion_comment */ \"./src/react/reactquestion_comment.tsx\");\n/* harmony import */ var _reactquestion_factory__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_832235__(/*! ./reactquestion_factory */ \"./src/react/reactquestion_factory.tsx\");\n/* harmony import */ var _reactsurveymodel__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_832235__(/*! ./reactsurveymodel */ \"./src/react/reactsurveymodel.tsx\");\n/* harmony import */ var _element_factory__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_832235__(/*! ./element-factory */ \"./src/react/element-factory.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\n\nvar SurveyQuestionCheckbox = /** @class */ (function (_super) {\n    __extends(SurveyQuestionCheckbox, _super);\n    function SurveyQuestionCheckbox(props) {\n        return _super.call(this, props) || this;\n    }\n    Object.defineProperty(SurveyQuestionCheckbox.prototype, \"question\", {\n        get: function () {\n            return this.questionBase;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionCheckbox.prototype.renderElement = function () {\n        var _this = this;\n        var cssClasses = this.question.cssClasses;\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"fieldset\", { className: this.question.getSelectBaseRootCss(), ref: function (fieldset) { return (_this.setControl(fieldset)); }, role: this.question.a11y_input_ariaRole, \"aria-required\": this.question.a11y_input_ariaRequired, \"aria-label\": this.question.a11y_input_ariaLabel, \"aria-labelledby\": this.question.a11y_input_ariaLabelledBy, \"aria-describedby\": this.question.a11y_input_ariaDescribedBy, \"aria-invalid\": this.question.a11y_input_ariaInvalid, \"aria-errormessage\": this.question.a11y_input_ariaErrormessage },\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"legend\", { className: \"sv-hidden\" }, this.question.locTitle.renderedHtml),\n            this.getHeader(),\n            this.question.hasColumns\n                ? this.getColumnedBody(cssClasses)\n                : this.getBody(cssClasses),\n            this.getFooter(),\n            this.question.isOtherSelected ? this.renderOther() : null));\n    };\n    SurveyQuestionCheckbox.prototype.getHeader = function () {\n        var _this = this;\n        if (this.question.hasHeadItems) {\n            return this.question.headItems.map(function (item, ii) {\n                return _this.renderItem(\"item_h\" + ii, item, false, _this.question.cssClasses);\n            });\n        }\n    };\n    SurveyQuestionCheckbox.prototype.getFooter = function () {\n        var _this = this;\n        if (this.question.hasFootItems) {\n            return this.question.footItems.map(function (item, ii) {\n                return _this.renderItem(\"item_f\" + ii, item, false, _this.question.cssClasses);\n            });\n        }\n    };\n    SurveyQuestionCheckbox.prototype.getColumnedBody = function (cssClasses) {\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: cssClasses.rootMultiColumn }, this.getColumns(cssClasses)));\n    };\n    SurveyQuestionCheckbox.prototype.getColumns = function (cssClasses) {\n        var _this = this;\n        return this.question.columns.map(function (column, ci) {\n            var items = column.map(function (item, ii) {\n                return _this.renderItem(\"item\" + ii, item, ci === 0 && ii === 0, cssClasses, \"\" + ci + ii);\n            });\n            return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { key: \"column\" + ci, className: _this.question.getColumnClass(), role: \"presentation\" }, items));\n        });\n    };\n    SurveyQuestionCheckbox.prototype.getBody = function (cssClasses) {\n        if (this.question.blockedRow) {\n            return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: cssClasses.rootRow }, this.getItems(cssClasses, this.question.dataChoices));\n        }\n        else\n            return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](react__WEBPACK_IMPORTED_MODULE_0__[\"Fragment\"], null, this.getItems(cssClasses, this.question.bodyItems));\n    };\n    SurveyQuestionCheckbox.prototype.getItems = function (cssClasses, choices) {\n        var renderedItems = [];\n        for (var i = 0; i < choices.length; i++) {\n            var item = choices[i];\n            var key = \"item\" + i;\n            var renderedItem = this.renderItem(key, item, i == 0, cssClasses, \"\" + i);\n            if (!!renderedItem) {\n                renderedItems.push(renderedItem);\n            }\n        }\n        return renderedItems;\n    };\n    Object.defineProperty(SurveyQuestionCheckbox.prototype, \"textStyle\", {\n        get: function () {\n            return null;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionCheckbox.prototype.renderOther = function () {\n        var cssClasses = this.question.cssClasses;\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.question.getCommentAreaCss(true) },\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_reactquestion_comment__WEBPACK_IMPORTED_MODULE_2__[\"SurveyQuestionOtherValueItem\"], { question: this.question, otherCss: cssClasses.other, cssClasses: cssClasses, isDisplayMode: this.isDisplayMode })));\n    };\n    SurveyQuestionCheckbox.prototype.renderItem = function (key, item, isFirst, cssClasses, index) {\n        var renderedItem = _element_factory__WEBPACK_IMPORTED_MODULE_5__[\"ReactElementFactory\"].Instance.createElement(this.question.itemComponent, {\n            key: key,\n            question: this.question,\n            cssClasses: cssClasses,\n            isDisplayMode: this.isDisplayMode,\n            item: item,\n            textStyle: this.textStyle,\n            index: index,\n            isFirst: isFirst,\n        });\n        var survey = this.question.survey;\n        var wrappedItem = null;\n        if (!!survey && !!renderedItem) {\n            wrappedItem = _reactsurveymodel__WEBPACK_IMPORTED_MODULE_4__[\"ReactSurveyElementsWrapper\"].wrapItemValue(survey, renderedItem, this.question, item);\n        }\n        return wrappedItem !== null && wrappedItem !== void 0 ? wrappedItem : renderedItem;\n    };\n    return SurveyQuestionCheckbox;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_1__[\"SurveyQuestionElementBase\"]));\n\nvar SurveyQuestionCheckboxItem = /** @class */ (function (_super) {\n    __extends(SurveyQuestionCheckboxItem, _super);\n    function SurveyQuestionCheckboxItem(props) {\n        var _this = _super.call(this, props) || this;\n        _this.handleOnChange = function (event) {\n            _this.question.clickItemHandler(_this.item, event.target.checked);\n        };\n        return _this;\n    }\n    SurveyQuestionCheckboxItem.prototype.getStateElement = function () {\n        return this.item;\n    };\n    Object.defineProperty(SurveyQuestionCheckboxItem.prototype, \"question\", {\n        get: function () {\n            return this.props.question;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionCheckboxItem.prototype, \"item\", {\n        get: function () {\n            return this.props.item;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionCheckboxItem.prototype, \"textStyle\", {\n        get: function () {\n            return this.props.textStyle;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionCheckboxItem.prototype, \"isFirst\", {\n        get: function () {\n            return this.props.isFirst;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionCheckboxItem.prototype, \"index\", {\n        get: function () {\n            return this.props.index;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionCheckboxItem.prototype, \"hideCaption\", {\n        get: function () {\n            return this.props.hideCaption === true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionCheckboxItem.prototype.shouldComponentUpdate = function (nextProps, nextState) {\n        if (!_super.prototype.shouldComponentUpdate.call(this, nextProps, nextState))\n            return false;\n        if (!this.question)\n            return false;\n        return (!this.question.customWidget ||\n            !!this.question.customWidgetData.isNeedRender ||\n            !!this.question.customWidget.widgetJson.isDefaultRender ||\n            !!this.question.customWidget.widgetJson.render);\n    };\n    SurveyQuestionCheckboxItem.prototype.canRender = function () {\n        return !!this.item && !!this.question;\n    };\n    SurveyQuestionCheckboxItem.prototype.renderElement = function () {\n        var isChecked = this.question.isItemSelected(this.item);\n        return this.renderCheckbox(isChecked, null);\n    };\n    Object.defineProperty(SurveyQuestionCheckboxItem.prototype, \"inputStyle\", {\n        get: function () {\n            return null; //{ marginRight: \"3px\" };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionCheckboxItem.prototype.renderCheckbox = function (isChecked, otherItem) {\n        var id = this.question.getItemId(this.item);\n        var itemClass = this.question.getItemClass(this.item);\n        var labelClass = this.question.getLabelClass(this.item);\n        var itemLabel = !this.hideCaption ? react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"span\", { className: this.cssClasses.controlLabel }, this.renderLocString(this.item.locText, this.textStyle)) : null;\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: itemClass, role: \"presentation\" },\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"label\", { className: labelClass },\n                react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"input\", { className: this.cssClasses.itemControl, type: \"checkbox\", role: \"option\", name: this.question.name + this.item.id, value: this.item.value, id: id, style: this.inputStyle, disabled: !this.question.getItemEnabled(this.item), checked: isChecked, onChange: this.handleOnChange }),\n                this.cssClasses.materialDecorator ?\n                    react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"span\", { className: this.cssClasses.materialDecorator }, this.question.itemSvgIcon ?\n                        react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"svg\", { className: this.cssClasses.itemDecorator },\n                            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"use\", { xlinkHref: this.question.itemSvgIcon })) :\n                        null) :\n                    null,\n                itemLabel),\n            otherItem));\n    };\n    return SurveyQuestionCheckboxItem;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_1__[\"ReactSurveyElement\"]));\n\n_element_factory__WEBPACK_IMPORTED_MODULE_5__[\"ReactElementFactory\"].Instance.registerElement(\"survey-checkbox-item\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](SurveyQuestionCheckboxItem, props);\n});\n_reactquestion_factory__WEBPACK_IMPORTED_MODULE_3__[\"ReactQuestionFactory\"].Instance.registerQuestion(\"checkbox\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](SurveyQuestionCheckbox, props);\n});\n\n\n/***/ }),\n\n/***/ \"./src/react/reactquestion_comment.tsx\":\n/*!*********************************************!*\\\n  !*** ./src/react/reactquestion_comment.tsx ***!\n  \\*********************************************/\n/*! exports provided: SurveyQuestionComment, SurveyQuestionCommentItem, SurveyQuestionOtherValueItem */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_845653__) {\n\n\"use strict\";\n__nested_webpack_require_845653__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_845653__.d(__nested_webpack_exports__, \"SurveyQuestionComment\", function() { return SurveyQuestionComment; });\n/* harmony export (binding) */ __nested_webpack_require_845653__.d(__nested_webpack_exports__, \"SurveyQuestionCommentItem\", function() { return SurveyQuestionCommentItem; });\n/* harmony export (binding) */ __nested_webpack_require_845653__.d(__nested_webpack_exports__, \"SurveyQuestionOtherValueItem\", function() { return SurveyQuestionOtherValueItem; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_845653__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_845653__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _reactquestion_element__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_845653__(/*! ./reactquestion_element */ \"./src/react/reactquestion_element.tsx\");\n/* harmony import */ var survey_core__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_845653__(/*! survey-core */ \"survey-core\");\n/* harmony import */ var survey_core__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__nested_webpack_require_845653__.n(survey_core__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _reactquestion_factory__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_845653__(/*! ./reactquestion_factory */ \"./src/react/reactquestion_factory.tsx\");\n/* harmony import */ var _components_character_counter__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_845653__(/*! ./components/character-counter */ \"./src/react/components/character-counter.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\nvar SurveyQuestionComment = /** @class */ (function (_super) {\n    __extends(SurveyQuestionComment, _super);\n    function SurveyQuestionComment(props) {\n        return _super.call(this, props) || this;\n    }\n    SurveyQuestionComment.prototype.renderElement = function () {\n        var _this = this;\n        var onBlur = !this.question.isInputTextUpdate ? this.updateValueOnEvent : undefined;\n        var onInput = function (event) {\n            if (_this.question.isInputTextUpdate) {\n                _this.updateValueOnEvent(event);\n            }\n            else {\n                _this.question.updateElement();\n            }\n            var newValue = event.target.value;\n            _this.question.updateRemainingCharacterCounter(newValue);\n        };\n        var placeholder = this.question.renderedPlaceholder;\n        if (this.question.isReadOnlyRenderDiv()) {\n            return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", null, this.question.value);\n        }\n        var counter = !!this.question.getMaxLength() ? (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_components_character_counter__WEBPACK_IMPORTED_MODULE_4__[\"CharacterCounterComponent\"], { counter: this.question.characterCounter, remainingCharacterCounter: this.question.cssClasses.remainingCharacterCounter })) : null;\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](react__WEBPACK_IMPORTED_MODULE_0__[\"Fragment\"], null,\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"textarea\", { id: this.question.inputId, className: this.question.className, disabled: this.question.isInputReadOnly, readOnly: this.question.isInputReadOnly, ref: function (textarea) { return (_this.setControl(textarea)); }, maxLength: this.question.getMaxLength(), placeholder: placeholder, onBlur: onBlur, onInput: onInput, onKeyDown: function (event) { _this.question.onKeyDown(event); }, cols: this.question.cols, rows: this.question.rows, \"aria-required\": this.question.a11y_input_ariaRequired, \"aria-label\": this.question.a11y_input_ariaLabel, \"aria-labelledby\": this.question.a11y_input_ariaLabelledBy, \"aria-describedby\": this.question.a11y_input_ariaDescribedBy, \"aria-invalid\": this.question.a11y_input_ariaInvalid, \"aria-errormessage\": this.question.a11y_input_ariaErrormessage, style: { resize: this.question.resizeStyle } }),\n            counter));\n    };\n    return SurveyQuestionComment;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_1__[\"SurveyQuestionUncontrolledElement\"]));\n\nvar SurveyQuestionCommentItem = /** @class */ (function (_super) {\n    __extends(SurveyQuestionCommentItem, _super);\n    function SurveyQuestionCommentItem(props) {\n        var _this = _super.call(this, props) || this;\n        _this.state = { comment: _this.getComment() || \"\" };\n        return _this;\n    }\n    SurveyQuestionCommentItem.prototype.componentDidUpdate = function (prevProps, prevState) {\n        _super.prototype.componentDidUpdate.call(this, prevProps, prevState);\n        this.updateDomElement();\n    };\n    SurveyQuestionCommentItem.prototype.componentDidMount = function () {\n        _super.prototype.componentDidMount.call(this);\n        this.updateDomElement();\n    };\n    SurveyQuestionCommentItem.prototype.updateDomElement = function () {\n        if (!!this.control) {\n            var control = this.control;\n            var newValue = this.getComment() || \"\";\n            if (!survey_core__WEBPACK_IMPORTED_MODULE_2__[\"Helpers\"].isTwoValueEquals(newValue, control.value, false, true, false)) {\n                control.value = newValue;\n            }\n        }\n    };\n    SurveyQuestionCommentItem.prototype.setControl = function (element) {\n        if (!!element) {\n            this.control = element;\n        }\n    };\n    SurveyQuestionCommentItem.prototype.canRender = function () {\n        return !!this.props.question;\n    };\n    SurveyQuestionCommentItem.prototype.onCommentChange = function (event) {\n        this.props.question.onCommentChange(event);\n    };\n    SurveyQuestionCommentItem.prototype.onCommentInput = function (event) {\n        this.props.question.onCommentInput(event);\n    };\n    SurveyQuestionCommentItem.prototype.getComment = function () {\n        return this.props.question.comment;\n    };\n    SurveyQuestionCommentItem.prototype.setComment = function (value) {\n        this.props.question.comment = value;\n    };\n    SurveyQuestionCommentItem.prototype.getId = function () {\n        return this.props.question.commentId;\n    };\n    SurveyQuestionCommentItem.prototype.getPlaceholder = function () {\n        return this.props.question.renderedCommentPlaceholder;\n    };\n    SurveyQuestionCommentItem.prototype.renderElement = function () {\n        var _this = this;\n        var question = this.props.question;\n        var className = this.props.otherCss || this.cssClasses.comment;\n        if (question.isReadOnlyRenderDiv()) {\n            var comment = this.getComment() || \"\";\n            return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", null, comment);\n        }\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"textarea\", { id: this.getId(), className: className, ref: function (textarea) { return (_this.setControl(textarea)); }, disabled: this.isDisplayMode, maxLength: question.getOthersMaxLength(), placeholder: this.getPlaceholder(), onBlur: function (e) { _this.onCommentChange(e); }, onInput: function (e) { return _this.onCommentInput(e); }, \"aria-required\": question.isRequired || question.a11y_input_ariaRequired, \"aria-label\": question.ariaLabel || question.a11y_input_ariaLabel, style: { resize: question.resizeStyle } }));\n    };\n    return SurveyQuestionCommentItem;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_1__[\"ReactSurveyElement\"]));\n\nvar SurveyQuestionOtherValueItem = /** @class */ (function (_super) {\n    __extends(SurveyQuestionOtherValueItem, _super);\n    function SurveyQuestionOtherValueItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SurveyQuestionOtherValueItem.prototype.onCommentChange = function (event) {\n        this.props.question.onOtherValueChange(event);\n    };\n    SurveyQuestionOtherValueItem.prototype.onCommentInput = function (event) {\n        this.props.question.onOtherValueInput(event);\n    };\n    SurveyQuestionOtherValueItem.prototype.getComment = function () {\n        return this.props.question.otherValue;\n    };\n    SurveyQuestionOtherValueItem.prototype.setComment = function (value) {\n        this.props.question.otherValue = value;\n    };\n    SurveyQuestionOtherValueItem.prototype.getId = function () {\n        return this.props.question.otherId;\n    };\n    SurveyQuestionOtherValueItem.prototype.getPlaceholder = function () {\n        return this.props.question.otherPlaceholder;\n    };\n    return SurveyQuestionOtherValueItem;\n}(SurveyQuestionCommentItem));\n\n_reactquestion_factory__WEBPACK_IMPORTED_MODULE_3__[\"ReactQuestionFactory\"].Instance.registerQuestion(\"comment\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](SurveyQuestionComment, props);\n});\n\n\n/***/ }),\n\n/***/ \"./src/react/reactquestion_custom.tsx\":\n/*!********************************************!*\\\n  !*** ./src/react/reactquestion_custom.tsx ***!\n  \\********************************************/\n/*! exports provided: SurveyQuestionCustom, SurveyQuestionComposite */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_855451__) {\n\n\"use strict\";\n__nested_webpack_require_855451__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_855451__.d(__nested_webpack_exports__, \"SurveyQuestionCustom\", function() { return SurveyQuestionCustom; });\n/* harmony export (binding) */ __nested_webpack_require_855451__.d(__nested_webpack_exports__, \"SurveyQuestionComposite\", function() { return SurveyQuestionComposite; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_855451__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_855451__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _reactquestion_element__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_855451__(/*! ./reactquestion_element */ \"./src/react/reactquestion_element.tsx\");\n/* harmony import */ var _reactquestion__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_855451__(/*! ./reactquestion */ \"./src/react/reactquestion.tsx\");\n/* harmony import */ var _reactquestion_factory__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_855451__(/*! ./reactquestion_factory */ \"./src/react/reactquestion_factory.tsx\");\n/* harmony import */ var _panel__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_855451__(/*! ./panel */ \"./src/react/panel.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\nvar SurveyQuestionCustom = /** @class */ (function (_super) {\n    __extends(SurveyQuestionCustom, _super);\n    function SurveyQuestionCustom(props) {\n        return _super.call(this, props) || this;\n    }\n    SurveyQuestionCustom.prototype.getStateElements = function () {\n        var res = _super.prototype.getStateElements.call(this);\n        if (!!this.question.contentQuestion) {\n            res.push(this.question.contentQuestion);\n        }\n        return res;\n    };\n    SurveyQuestionCustom.prototype.renderElement = function () {\n        return _reactquestion__WEBPACK_IMPORTED_MODULE_2__[\"SurveyQuestion\"].renderQuestionBody(this.creator, this.question.contentQuestion);\n    };\n    return SurveyQuestionCustom;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_1__[\"SurveyQuestionUncontrolledElement\"]));\n\nvar SurveyQuestionComposite = /** @class */ (function (_super) {\n    __extends(SurveyQuestionComposite, _super);\n    function SurveyQuestionComposite(props) {\n        return _super.call(this, props) || this;\n    }\n    SurveyQuestionComposite.prototype.canRender = function () {\n        return !!this.question.contentPanel;\n    };\n    SurveyQuestionComposite.prototype.renderElement = function () {\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_panel__WEBPACK_IMPORTED_MODULE_4__[\"SurveyPanel\"], { element: this.question.contentPanel, creator: this.creator, survey: this.question.survey }));\n    };\n    return SurveyQuestionComposite;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_1__[\"SurveyQuestionUncontrolledElement\"]));\n\n_reactquestion_factory__WEBPACK_IMPORTED_MODULE_3__[\"ReactQuestionFactory\"].Instance.registerQuestion(\"custom\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](SurveyQuestionCustom, props);\n});\n_reactquestion_factory__WEBPACK_IMPORTED_MODULE_3__[\"ReactQuestionFactory\"].Instance.registerQuestion(\"composite\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](SurveyQuestionComposite, props);\n});\n\n\n/***/ }),\n\n/***/ \"./src/react/reactquestion_dropdown.tsx\":\n/*!**********************************************!*\\\n  !*** ./src/react/reactquestion_dropdown.tsx ***!\n  \\**********************************************/\n/*! exports provided: SurveyQuestionDropdown */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_859807__) {\n\n\"use strict\";\n__nested_webpack_require_859807__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_859807__.d(__nested_webpack_exports__, \"SurveyQuestionDropdown\", function() { return SurveyQuestionDropdown; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_859807__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_859807__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _reactquestion_factory__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_859807__(/*! ./reactquestion_factory */ \"./src/react/reactquestion_factory.tsx\");\n/* harmony import */ var _dropdown_base__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_859807__(/*! ./dropdown-base */ \"./src/react/dropdown-base.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar SurveyQuestionDropdown = /** @class */ (function (_super) {\n    __extends(SurveyQuestionDropdown, _super);\n    function SurveyQuestionDropdown(props) {\n        return _super.call(this, props) || this;\n    }\n    SurveyQuestionDropdown.prototype.renderElement = function () {\n        var cssClasses = this.question.cssClasses;\n        var comment = this.question.isOtherSelected ? this.renderOther(cssClasses) : null;\n        var select = this.renderSelect(cssClasses);\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.question.renderCssRoot },\n            select,\n            comment));\n    };\n    return SurveyQuestionDropdown;\n}(_dropdown_base__WEBPACK_IMPORTED_MODULE_2__[\"SurveyQuestionDropdownBase\"]));\n\n_reactquestion_factory__WEBPACK_IMPORTED_MODULE_1__[\"ReactQuestionFactory\"].Instance.registerQuestion(\"dropdown\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](SurveyQuestionDropdown, props);\n});\n\n\n/***/ }),\n\n/***/ \"./src/react/reactquestion_element.tsx\":\n/*!*********************************************!*\\\n  !*** ./src/react/reactquestion_element.tsx ***!\n  \\*********************************************/\n/*! exports provided: SurveyElementBase, ReactSurveyElement, SurveyQuestionElementBase, SurveyQuestionUncontrolledElement */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_862750__) {\n\n\"use strict\";\n__nested_webpack_require_862750__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_862750__.d(__nested_webpack_exports__, \"SurveyElementBase\", function() { return SurveyElementBase; });\n/* harmony export (binding) */ __nested_webpack_require_862750__.d(__nested_webpack_exports__, \"ReactSurveyElement\", function() { return ReactSurveyElement; });\n/* harmony export (binding) */ __nested_webpack_require_862750__.d(__nested_webpack_exports__, \"SurveyQuestionElementBase\", function() { return SurveyQuestionElementBase; });\n/* harmony export (binding) */ __nested_webpack_require_862750__.d(__nested_webpack_exports__, \"SurveyQuestionUncontrolledElement\", function() { return SurveyQuestionUncontrolledElement; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_862750__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_862750__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var survey_core__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_862750__(/*! survey-core */ \"survey-core\");\n/* harmony import */ var survey_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__nested_webpack_require_862750__.n(survey_core__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _element_factory__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_862750__(/*! ./element-factory */ \"./src/react/element-factory.tsx\");\n/* harmony import */ var _reactsurveymodel__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_862750__(/*! ./reactsurveymodel */ \"./src/react/reactsurveymodel.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\nvar SurveyElementBase = /** @class */ (function (_super) {\n    __extends(SurveyElementBase, _super);\n    function SurveyElementBase(props) {\n        var _this = _super.call(this, props) || this;\n        _this._allowComponentUpdate = true;\n        return _this;\n    }\n    SurveyElementBase.renderLocString = function (locStr, style, key) {\n        if (style === void 0) { style = null; }\n        return _element_factory__WEBPACK_IMPORTED_MODULE_2__[\"ReactElementFactory\"].Instance.createElement(locStr.renderAs, {\n            locStr: locStr.renderAsData,\n            style: style,\n            key: key,\n        });\n    };\n    SurveyElementBase.renderQuestionDescription = function (question) {\n        var descriptionText = SurveyElementBase.renderLocString(question.locDescription);\n        return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { style: question.hasDescription ? undefined : { display: \"none\" }, id: question.ariaDescriptionId, className: question.cssDescription }, descriptionText);\n    };\n    SurveyElementBase.prototype.componentDidMount = function () {\n        this.makeBaseElementsReact();\n    };\n    SurveyElementBase.prototype.componentWillUnmount = function () {\n        this.unMakeBaseElementsReact();\n    };\n    SurveyElementBase.prototype.componentDidUpdate = function (prevProps, prevState) {\n        this.makeBaseElementsReact();\n    };\n    SurveyElementBase.prototype.allowComponentUpdate = function () {\n        this._allowComponentUpdate = true;\n        this.forceUpdate();\n    };\n    SurveyElementBase.prototype.denyComponentUpdate = function () {\n        this._allowComponentUpdate = false;\n    };\n    SurveyElementBase.prototype.shouldComponentUpdate = function (nextProps, nextState) {\n        if (this._allowComponentUpdate) {\n            this.unMakeBaseElementsReact();\n        }\n        return this._allowComponentUpdate;\n    };\n    SurveyElementBase.prototype.render = function () {\n        if (!this.canRender()) {\n            return null;\n        }\n        this.startEndRendering(1);\n        var res = this.renderElement();\n        this.startEndRendering(-1);\n        if (!!res) {\n            res = this.wrapElement(res);\n        }\n        this.changedStatePropNameValue = undefined;\n        return res;\n    };\n    SurveyElementBase.prototype.wrapElement = function (element) {\n        return element;\n    };\n    Object.defineProperty(SurveyElementBase.prototype, \"isRendering\", {\n        get: function () {\n            var stateEls = this.getRenderedElements();\n            for (var _i = 0, stateEls_1 = stateEls; _i < stateEls_1.length; _i++) {\n                var stateEl = stateEls_1[_i];\n                if (stateEl.reactRendering > 0)\n                    return true;\n            }\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyElementBase.prototype.getRenderedElements = function () {\n        return this.getStateElements();\n    };\n    SurveyElementBase.prototype.startEndRendering = function (val) {\n        var stateEls = this.getRenderedElements();\n        for (var _i = 0, stateEls_2 = stateEls; _i < stateEls_2.length; _i++) {\n            var stateEl = stateEls_2[_i];\n            if (!stateEl.reactRendering)\n                stateEl.reactRendering = 0;\n            stateEl.reactRendering += val;\n        }\n    };\n    SurveyElementBase.prototype.canRender = function () {\n        return true;\n    };\n    SurveyElementBase.prototype.renderElement = function () {\n        return null;\n    };\n    Object.defineProperty(SurveyElementBase.prototype, \"changedStatePropName\", {\n        get: function () {\n            return this.changedStatePropNameValue;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyElementBase.prototype.makeBaseElementsReact = function () {\n        var els = this.getStateElements();\n        for (var i = 0; i < els.length; i++) {\n            this.makeBaseElementReact(els[i]);\n        }\n    };\n    SurveyElementBase.prototype.unMakeBaseElementsReact = function () {\n        var els = this.getStateElements();\n        for (var i = 0; i < els.length; i++) {\n            this.unMakeBaseElementReact(els[i]);\n        }\n    };\n    SurveyElementBase.prototype.getStateElements = function () {\n        var el = this.getStateElement();\n        return !!el ? [el] : [];\n    };\n    SurveyElementBase.prototype.getStateElement = function () {\n        return null;\n    };\n    Object.defineProperty(SurveyElementBase.prototype, \"isDisplayMode\", {\n        get: function () {\n            var props = this.props;\n            return props.isDisplayMode || false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyElementBase.prototype.renderLocString = function (locStr, style, key) {\n        if (style === void 0) { style = null; }\n        return SurveyElementBase.renderLocString(locStr, style, key);\n    };\n    SurveyElementBase.prototype.canMakeReact = function (stateElement) {\n        return !!stateElement && !!stateElement.iteratePropertiesHash;\n    };\n    SurveyElementBase.prototype.makeBaseElementReact = function (stateElement) {\n        var _this = this;\n        if (!this.canMakeReact(stateElement))\n            return;\n        stateElement.iteratePropertiesHash(function (hash, key) {\n            if (!_this.canUsePropInState(key))\n                return;\n            var val = hash[key];\n            if (Array.isArray(val)) {\n                var val = val;\n                val[\"onArrayChanged\"] = function (arrayChanges) {\n                    if (_this.isRendering)\n                        return;\n                    _this.changedStatePropNameValue = key;\n                    _this.setState(function (state) {\n                        var newState = {};\n                        newState[key] = val;\n                        return newState;\n                    });\n                };\n            }\n        });\n        stateElement.setPropertyValueCoreHandler = function (hash, key, val) {\n            if (hash[key] !== val) {\n                hash[key] = val;\n                if (!_this.canUsePropInState(key))\n                    return;\n                if (_this.isRendering)\n                    return;\n                _this.changedStatePropNameValue = key;\n                _this.setState(function (state) {\n                    var newState = {};\n                    newState[key] = val;\n                    return newState;\n                });\n            }\n        };\n    };\n    SurveyElementBase.prototype.canUsePropInState = function (key) {\n        return true;\n    };\n    SurveyElementBase.prototype.unMakeBaseElementReact = function (stateElement) {\n        if (!this.canMakeReact(stateElement))\n            return;\n        stateElement.setPropertyValueCoreHandler = undefined;\n        stateElement.iteratePropertiesHash(function (hash, key) {\n            var val = hash[key];\n            if (Array.isArray(val)) {\n                var val = val;\n                val[\"onArrayChanged\"] = function () { };\n            }\n        });\n    };\n    return SurveyElementBase;\n}(react__WEBPACK_IMPORTED_MODULE_0__[\"Component\"]));\n\nvar ReactSurveyElement = /** @class */ (function (_super) {\n    __extends(ReactSurveyElement, _super);\n    function ReactSurveyElement(props) {\n        return _super.call(this, props) || this;\n    }\n    Object.defineProperty(ReactSurveyElement.prototype, \"cssClasses\", {\n        get: function () {\n            return this.props.cssClasses;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return ReactSurveyElement;\n}(SurveyElementBase));\n\nvar SurveyQuestionElementBase = /** @class */ (function (_super) {\n    __extends(SurveyQuestionElementBase, _super);\n    function SurveyQuestionElementBase(props) {\n        return _super.call(this, props) || this;\n    }\n    SurveyQuestionElementBase.prototype.componentDidUpdate = function (prevProps, prevState) {\n        _super.prototype.componentDidUpdate.call(this, prevProps, prevState);\n        this.updateDomElement();\n    };\n    SurveyQuestionElementBase.prototype.componentDidMount = function () {\n        _super.prototype.componentDidMount.call(this);\n        this.updateDomElement();\n    };\n    SurveyQuestionElementBase.prototype.componentWillUnmount = function () {\n        _super.prototype.componentWillUnmount.call(this);\n        if (!!this.questionBase) {\n            var el = this.control;\n            this.questionBase.beforeDestroyQuestionElement(el);\n            if (!!el) {\n                el.removeAttribute(\"data-rendered\");\n            }\n        }\n    };\n    SurveyQuestionElementBase.prototype.updateDomElement = function () {\n        var el = this.control;\n        if (!!el) {\n            if (el.getAttribute(\"data-rendered\") !== \"r\") {\n                el.setAttribute(\"data-rendered\", \"r\");\n                this.questionBase.afterRenderQuestionElement(el);\n            }\n        }\n    };\n    Object.defineProperty(SurveyQuestionElementBase.prototype, \"questionBase\", {\n        get: function () {\n            return this.props.question;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionElementBase.prototype.getRenderedElements = function () {\n        return [this.questionBase];\n    };\n    Object.defineProperty(SurveyQuestionElementBase.prototype, \"creator\", {\n        get: function () {\n            return this.props.creator;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionElementBase.prototype.canRender = function () {\n        return !!this.questionBase && !!this.creator;\n    };\n    SurveyQuestionElementBase.prototype.shouldComponentUpdate = function (nextProps, nextState) {\n        if (!_super.prototype.shouldComponentUpdate.call(this, nextProps, nextState))\n            return false;\n        return (!this.questionBase.customWidget ||\n            !!this.questionBase.customWidgetData.isNeedRender ||\n            !!this.questionBase.customWidget.widgetJson.isDefaultRender ||\n            !!this.questionBase.customWidget.widgetJson.render);\n    };\n    Object.defineProperty(SurveyQuestionElementBase.prototype, \"isDisplayMode\", {\n        get: function () {\n            var props = this.props;\n            return (props.isDisplayMode ||\n                (!!this.questionBase && this.questionBase.isInputReadOnly) || false);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionElementBase.prototype.wrapCell = function (cell, element, reason) {\n        if (!reason) {\n            return element;\n        }\n        var survey = this.questionBase\n            .survey;\n        var wrapper = null;\n        if (survey) {\n            wrapper = _reactsurveymodel__WEBPACK_IMPORTED_MODULE_3__[\"ReactSurveyElementsWrapper\"].wrapMatrixCell(survey, element, cell, reason);\n        }\n        return wrapper !== null && wrapper !== void 0 ? wrapper : element;\n    };\n    SurveyQuestionElementBase.prototype.setControl = function (element) {\n        if (!!element) {\n            this.control = element;\n        }\n    };\n    return SurveyQuestionElementBase;\n}(SurveyElementBase));\n\nvar SurveyQuestionUncontrolledElement = /** @class */ (function (_super) {\n    __extends(SurveyQuestionUncontrolledElement, _super);\n    function SurveyQuestionUncontrolledElement(props) {\n        var _this = _super.call(this, props) || this;\n        _this.updateValueOnEvent = function (event) {\n            if (!survey_core__WEBPACK_IMPORTED_MODULE_1__[\"Helpers\"].isTwoValueEquals(_this.questionBase.value, event.target.value, false, true, false)) {\n                _this.setValueCore(event.target.value);\n            }\n        };\n        _this.updateValueOnEvent = _this.updateValueOnEvent.bind(_this);\n        return _this;\n    }\n    Object.defineProperty(SurveyQuestionUncontrolledElement.prototype, \"question\", {\n        get: function () {\n            return this.questionBase;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionUncontrolledElement.prototype.setValueCore = function (newValue) {\n        this.questionBase.value = newValue;\n    };\n    SurveyQuestionUncontrolledElement.prototype.getValueCore = function () {\n        return this.questionBase.value;\n    };\n    SurveyQuestionUncontrolledElement.prototype.updateDomElement = function () {\n        if (!!this.control) {\n            var control = this.control;\n            var newValue = this.getValueCore();\n            if (!survey_core__WEBPACK_IMPORTED_MODULE_1__[\"Helpers\"].isTwoValueEquals(newValue, control.value, false, true, false)) {\n                control.value = this.getValue(newValue);\n            }\n        }\n        _super.prototype.updateDomElement.call(this);\n    };\n    SurveyQuestionUncontrolledElement.prototype.getValue = function (val) {\n        if (survey_core__WEBPACK_IMPORTED_MODULE_1__[\"Helpers\"].isValueEmpty(val))\n            return \"\";\n        return val;\n    };\n    return SurveyQuestionUncontrolledElement;\n}(SurveyQuestionElementBase));\n\n\n\n/***/ }),\n\n/***/ \"./src/react/reactquestion_empty.tsx\":\n/*!*******************************************!*\\\n  !*** ./src/react/reactquestion_empty.tsx ***!\n  \\*******************************************/\n/*! exports provided: SurveyQuestionEmpty */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_878355__) {\n\n\"use strict\";\n__nested_webpack_require_878355__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_878355__.d(__nested_webpack_exports__, \"SurveyQuestionEmpty\", function() { return SurveyQuestionEmpty; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_878355__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_878355__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _reactquestion_element__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_878355__(/*! ./reactquestion_element */ \"./src/react/reactquestion_element.tsx\");\n/* harmony import */ var _reactquestion_factory__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_878355__(/*! ./reactquestion_factory */ \"./src/react/reactquestion_factory.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar SurveyQuestionEmpty = /** @class */ (function (_super) {\n    __extends(SurveyQuestionEmpty, _super);\n    function SurveyQuestionEmpty(props) {\n        var _this = _super.call(this, props) || this;\n        _this.state = { value: _this.question.value };\n        return _this;\n    }\n    Object.defineProperty(SurveyQuestionEmpty.prototype, \"question\", {\n        get: function () {\n            return this.questionBase;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionEmpty.prototype.renderElement = function () {\n        return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", null);\n    };\n    return SurveyQuestionEmpty;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_1__[\"SurveyQuestionElementBase\"]));\n\n_reactquestion_factory__WEBPACK_IMPORTED_MODULE_2__[\"ReactQuestionFactory\"].Instance.registerQuestion(\"empty\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](SurveyQuestionEmpty, props);\n});\n\n\n/***/ }),\n\n/***/ \"./src/react/reactquestion_expression.tsx\":\n/*!************************************************!*\\\n  !*** ./src/react/reactquestion_expression.tsx ***!\n  \\************************************************/\n/*! exports provided: SurveyQuestionExpression */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_881255__) {\n\n\"use strict\";\n__nested_webpack_require_881255__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_881255__.d(__nested_webpack_exports__, \"SurveyQuestionExpression\", function() { return SurveyQuestionExpression; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_881255__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_881255__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _reactquestion_element__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_881255__(/*! ./reactquestion_element */ \"./src/react/reactquestion_element.tsx\");\n/* harmony import */ var _reactquestion_factory__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_881255__(/*! ./reactquestion_factory */ \"./src/react/reactquestion_factory.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar SurveyQuestionExpression = /** @class */ (function (_super) {\n    __extends(SurveyQuestionExpression, _super);\n    function SurveyQuestionExpression(props) {\n        return _super.call(this, props) || this;\n    }\n    Object.defineProperty(SurveyQuestionExpression.prototype, \"question\", {\n        get: function () {\n            return this.questionBase;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionExpression.prototype.renderElement = function () {\n        var _this = this;\n        var cssClasses = this.question.cssClasses;\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { id: this.question.inputId, className: cssClasses.root, ref: function (div) { return (_this.setControl(div)); } }, this.question.formatedValue));\n    };\n    return SurveyQuestionExpression;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_1__[\"SurveyQuestionElementBase\"]));\n\n_reactquestion_factory__WEBPACK_IMPORTED_MODULE_2__[\"ReactQuestionFactory\"].Instance.registerQuestion(\"expression\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](SurveyQuestionExpression, props);\n});\n\n\n/***/ }),\n\n/***/ \"./src/react/reactquestion_factory.tsx\":\n/*!*********************************************!*\\\n  !*** ./src/react/reactquestion_factory.tsx ***!\n  \\*********************************************/\n/*! exports provided: ReactQuestionFactory */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_884325__) {\n\n\"use strict\";\n__nested_webpack_require_884325__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_884325__.d(__nested_webpack_exports__, \"ReactQuestionFactory\", function() { return ReactQuestionFactory; });\nvar ReactQuestionFactory = /** @class */ (function () {\n    function ReactQuestionFactory() {\n        this.creatorHash = {};\n    }\n    ReactQuestionFactory.prototype.registerQuestion = function (questionType, questionCreator) {\n        this.creatorHash[questionType] = questionCreator;\n    };\n    ReactQuestionFactory.prototype.getAllTypes = function () {\n        var result = new Array();\n        for (var key in this.creatorHash) {\n            result.push(key);\n        }\n        return result.sort();\n    };\n    ReactQuestionFactory.prototype.createQuestion = function (questionType, params) {\n        var creator = this.creatorHash[questionType];\n        if (creator == null)\n            return null;\n        return creator(params);\n    };\n    ReactQuestionFactory.Instance = new ReactQuestionFactory();\n    return ReactQuestionFactory;\n}());\n\n\n\n/***/ }),\n\n/***/ \"./src/react/reactquestion_file.tsx\":\n/*!******************************************!*\\\n  !*** ./src/react/reactquestion_file.tsx ***!\n  \\******************************************/\n/*! exports provided: SurveyQuestionFile */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_885688__) {\n\n\"use strict\";\n__nested_webpack_require_885688__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_885688__.d(__nested_webpack_exports__, \"SurveyQuestionFile\", function() { return SurveyQuestionFile; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_885688__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_885688__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _components_action_bar_action_bar__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_885688__(/*! ./components/action-bar/action-bar */ \"./src/react/components/action-bar/action-bar.tsx\");\n/* harmony import */ var _components_svg_icon_svg_icon__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_885688__(/*! ./components/svg-icon/svg-icon */ \"./src/react/components/svg-icon/svg-icon.tsx\");\n/* harmony import */ var _reactquestion_element__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_885688__(/*! ./reactquestion_element */ \"./src/react/reactquestion_element.tsx\");\n/* harmony import */ var _reactquestion_factory__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_885688__(/*! ./reactquestion_factory */ \"./src/react/reactquestion_factory.tsx\");\n/* harmony import */ var _components_loading_indicator__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_885688__(/*! ./components/loading-indicator */ \"./src/react/components/loading-indicator.tsx\");\n/* harmony import */ var _components_action_bar_action_bar_item__WEBPACK_IMPORTED_MODULE_6__ = __nested_webpack_require_885688__(/*! ./components/action-bar/action-bar-item */ \"./src/react/components/action-bar/action-bar-item.tsx\");\n/* harmony import */ var _entries_react_ui_model__WEBPACK_IMPORTED_MODULE_7__ = __nested_webpack_require_885688__(/*! ../entries/react-ui-model */ \"./src/entries/react-ui-model.ts\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\n\n\n\nvar SurveyQuestionFile = /** @class */ (function (_super) {\n    __extends(SurveyQuestionFile, _super);\n    function SurveyQuestionFile(props) {\n        return _super.call(this, props) || this;\n    }\n    Object.defineProperty(SurveyQuestionFile.prototype, \"question\", {\n        get: function () {\n            return this.questionBase;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionFile.prototype.renderElement = function () {\n        var _this = this;\n        var preview = this.question.allowShowPreview ? this.renderPreview() : null;\n        var loadingIndicator = this.question.showLoadingIndicator ? this.renderLoadingIndicator() : null;\n        var video = this.question.isPlayingVideo ? this.renderVideo() : null;\n        var fileDecorator = this.question.showFileDecorator ? this.renderFileDecorator() : null;\n        var clearButton = this.question.showRemoveButton ? this.renderClearButton(this.question.cssClasses.removeButton) : null;\n        var clearButtonBottom = this.question.showRemoveButtonBottom ? this.renderClearButton(this.question.cssClasses.removeButtonBottom) : null;\n        var fileNavigator = this.question.fileNavigatorVisible ? (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_components_action_bar_action_bar__WEBPACK_IMPORTED_MODULE_1__[\"SurveyActionBar\"], { model: this.question.fileNavigator })) : null;\n        var fileInput = (this.isDisplayMode ?\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"input\", { type: \"file\", disabled: this.isDisplayMode, className: !this.isDisplayMode ? this.question.cssClasses.fileInput : this.question.getReadOnlyFileCss(), id: this.question.inputId, ref: function (input) { return (_this.setControl(input)); }, style: !this.isDisplayMode ? {} : { color: \"transparent\" }, multiple: this.question.allowMultiple, placeholder: this.question.title, accept: this.question.acceptedTypes }) : this.question.hasFileUI ?\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"input\", { type: \"file\", disabled: this.isDisplayMode, tabIndex: -1, className: !this.isDisplayMode ? this.question.cssClasses.fileInput : this.question.getReadOnlyFileCss(), id: this.question.inputId, ref: function (input) { return (_this.setControl(input)); }, style: !this.isDisplayMode ? {} : { color: \"transparent\" }, \"aria-required\": this.question.ariaRequired, \"aria-label\": this.question.ariaLabel, \"aria-invalid\": this.question.ariaInvalid, \"aria-errormessage\": this.question.ariaErrormessage, multiple: this.question.allowMultiple, title: this.question.inputTitle, accept: this.question.acceptedTypes, capture: this.question.renderCapture }) : null);\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.question.fileRootCss },\n            fileInput,\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.question.cssClasses.dragArea, onDrop: this.question.onDrop, onDragOver: this.question.onDragOver, onDragLeave: this.question.onDragLeave, onDragEnter: this.question.onDragEnter },\n                fileDecorator,\n                loadingIndicator,\n                video,\n                clearButton,\n                preview,\n                clearButtonBottom,\n                fileNavigator)));\n    };\n    SurveyQuestionFile.prototype.renderFileDecorator = function () {\n        var chooseButton = this.question.showChooseButton ? this.renderChooseButton() : null;\n        var actionsContainer = this.question.actionsContainerVisible ? react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_components_action_bar_action_bar__WEBPACK_IMPORTED_MODULE_1__[\"SurveyActionBar\"], { model: this.question.actionsContainer }) : null;\n        var noFileChosen = this.question.isEmpty() ? (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"span\", { className: this.question.cssClasses.noFileChosen }, this.question.noFileChosenCaption)) : null;\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.question.getFileDecoratorCss() },\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"span\", { className: this.question.cssClasses.dragAreaPlaceholder }, this.renderLocString(this.question.locRenderedPlaceholder)),\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.question.cssClasses.wrapper },\n                chooseButton,\n                actionsContainer,\n                noFileChosen)));\n    };\n    SurveyQuestionFile.prototype.renderChooseButton = function () {\n        return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_entries_react_ui_model__WEBPACK_IMPORTED_MODULE_7__[\"SurveyFileChooseButton\"], { data: { question: this.question } });\n    };\n    SurveyQuestionFile.prototype.renderClearButton = function (className) {\n        return !this.question.isUploading ? (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"button\", { type: \"button\", onClick: this.question.doClean, className: className },\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"span\", null, this.question.clearButtonCaption),\n            (!!this.question.cssClasses.removeButtonIconId) ? react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_components_svg_icon_svg_icon__WEBPACK_IMPORTED_MODULE_2__[\"SvgIcon\"], { iconName: this.question.cssClasses.removeButtonIconId, size: \"auto\", title: this.question.clearButtonCaption }) : null)) : null;\n    };\n    SurveyQuestionFile.prototype.renderPreview = function () {\n        return _entries_react_ui_model__WEBPACK_IMPORTED_MODULE_7__[\"ReactElementFactory\"].Instance.createElement(\"sv-file-preview\", { question: this.question });\n    };\n    SurveyQuestionFile.prototype.renderLoadingIndicator = function () {\n        return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.question.cssClasses.loadingIndicator },\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_components_loading_indicator__WEBPACK_IMPORTED_MODULE_5__[\"LoadingIndicatorComponent\"], null));\n    };\n    SurveyQuestionFile.prototype.renderVideo = function () {\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.question.cssClasses.videoContainer },\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_components_action_bar_action_bar_item__WEBPACK_IMPORTED_MODULE_6__[\"SurveyAction\"], { item: this.question.changeCameraAction }),\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_components_action_bar_action_bar_item__WEBPACK_IMPORTED_MODULE_6__[\"SurveyAction\"], { item: this.question.closeCameraAction }),\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"video\", { autoPlay: true, playsInline: true, id: this.question.videoId, className: this.question.cssClasses.video }),\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_components_action_bar_action_bar_item__WEBPACK_IMPORTED_MODULE_6__[\"SurveyAction\"], { item: this.question.takePictureAction })));\n    };\n    return SurveyQuestionFile;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_3__[\"SurveyQuestionElementBase\"]));\n\n_reactquestion_factory__WEBPACK_IMPORTED_MODULE_4__[\"ReactQuestionFactory\"].Instance.registerQuestion(\"file\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](SurveyQuestionFile, props);\n});\n\n\n/***/ }),\n\n/***/ \"./src/react/reactquestion_html.tsx\":\n/*!******************************************!*\\\n  !*** ./src/react/reactquestion_html.tsx ***!\n  \\******************************************/\n/*! exports provided: SurveyQuestionHtml */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_895892__) {\n\n\"use strict\";\n__nested_webpack_require_895892__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_895892__.d(__nested_webpack_exports__, \"SurveyQuestionHtml\", function() { return SurveyQuestionHtml; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_895892__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_895892__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _reactquestion_element__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_895892__(/*! ./reactquestion_element */ \"./src/react/reactquestion_element.tsx\");\n/* harmony import */ var _reactquestion_factory__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_895892__(/*! ./reactquestion_factory */ \"./src/react/reactquestion_factory.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar SurveyQuestionHtml = /** @class */ (function (_super) {\n    __extends(SurveyQuestionHtml, _super);\n    function SurveyQuestionHtml(props) {\n        return _super.call(this, props) || this;\n    }\n    Object.defineProperty(SurveyQuestionHtml.prototype, \"question\", {\n        get: function () {\n            return this.questionBase;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionHtml.prototype.componentDidMount = function () {\n        this.reactOnStrChanged();\n    };\n    SurveyQuestionHtml.prototype.componentWillUnmount = function () {\n        this.question.locHtml.onChanged = function () { };\n    };\n    SurveyQuestionHtml.prototype.componentDidUpdate = function (prevProps, prevState) {\n        this.reactOnStrChanged();\n    };\n    SurveyQuestionHtml.prototype.reactOnStrChanged = function () {\n        var _this = this;\n        this.question.locHtml.onChanged = function () {\n            _this.setState({ changed: !!_this.state && _this.state.changed ? _this.state.changed + 1 : 1 });\n        };\n    };\n    SurveyQuestionHtml.prototype.canRender = function () {\n        return _super.prototype.canRender.call(this) && !!this.question.html;\n    };\n    SurveyQuestionHtml.prototype.renderElement = function () {\n        var htmlValue = { __html: this.question.locHtml.renderedHtml };\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.question.renderCssRoot, dangerouslySetInnerHTML: htmlValue }));\n    };\n    return SurveyQuestionHtml;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_1__[\"SurveyQuestionElementBase\"]));\n\n_reactquestion_factory__WEBPACK_IMPORTED_MODULE_2__[\"ReactQuestionFactory\"].Instance.registerQuestion(\"html\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](SurveyQuestionHtml, props);\n});\n\n\n/***/ }),\n\n/***/ \"./src/react/reactquestion_matrix.tsx\":\n/*!********************************************!*\\\n  !*** ./src/react/reactquestion_matrix.tsx ***!\n  \\********************************************/\n/*! exports provided: SurveyQuestionMatrix, SurveyQuestionMatrixRow, SurveyQuestionMatrixCell */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_899672__) {\n\n\"use strict\";\n__nested_webpack_require_899672__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_899672__.d(__nested_webpack_exports__, \"SurveyQuestionMatrix\", function() { return SurveyQuestionMatrix; });\n/* harmony export (binding) */ __nested_webpack_require_899672__.d(__nested_webpack_exports__, \"SurveyQuestionMatrixRow\", function() { return SurveyQuestionMatrixRow; });\n/* harmony export (binding) */ __nested_webpack_require_899672__.d(__nested_webpack_exports__, \"SurveyQuestionMatrixCell\", function() { return SurveyQuestionMatrixCell; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_899672__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_899672__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _reactquestion_element__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_899672__(/*! ./reactquestion_element */ \"./src/react/reactquestion_element.tsx\");\n/* harmony import */ var _reactquestion_factory__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_899672__(/*! ./reactquestion_factory */ \"./src/react/reactquestion_factory.tsx\");\n/* harmony import */ var _reactsurveymodel__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_899672__(/*! ./reactsurveymodel */ \"./src/react/reactsurveymodel.tsx\");\n/* harmony import */ var _element_factory__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_899672__(/*! ./element-factory */ \"./src/react/element-factory.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\nvar SurveyQuestionMatrix = /** @class */ (function (_super) {\n    __extends(SurveyQuestionMatrix, _super);\n    function SurveyQuestionMatrix(props) {\n        var _this = _super.call(this, props) || this;\n        _this.state = { rowsChanged: 0 };\n        return _this;\n    }\n    Object.defineProperty(SurveyQuestionMatrix.prototype, \"question\", {\n        get: function () {\n            return this.questionBase;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionMatrix.prototype.componentDidMount = function () {\n        _super.prototype.componentDidMount.call(this);\n        if (this.question) {\n            var self = this;\n            this.question.visibleRowsChangedCallback = function () {\n                self.setState({ rowsChanged: self.state.rowsChanged + 1 });\n            };\n        }\n    };\n    SurveyQuestionMatrix.prototype.componentWillUnmount = function () {\n        _super.prototype.componentWillUnmount.call(this);\n        if (this.question) {\n            this.question.visibleRowsChangedCallback = null;\n        }\n    };\n    SurveyQuestionMatrix.prototype.renderElement = function () {\n        var _this = this;\n        var cssClasses = this.question.cssClasses;\n        var rowsTH = this.question.hasRows ? react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"td\", null) : null;\n        var headers = [];\n        for (var i = 0; i < this.question.visibleColumns.length; i++) {\n            var column = this.question.visibleColumns[i];\n            var key = \"column\" + i;\n            var columText = this.renderLocString(column.locText);\n            var style = {};\n            if (!!this.question.columnMinWidth) {\n                style.minWidth = this.question.columnMinWidth;\n                style.width = this.question.columnMinWidth;\n            }\n            headers.push(react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"th\", { className: this.question.cssClasses.headerCell, style: style, key: key }, this.wrapCell({ column: column }, columText, \"column-header\")));\n        }\n        var rows = [];\n        var visibleRows = this.question.visibleRows;\n        for (var i = 0; i < visibleRows.length; i++) {\n            var row = visibleRows[i];\n            var key = \"row-\" + row.name + \"-\" + i;\n            rows.push(react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](SurveyQuestionMatrixRow, { key: key, question: this.question, cssClasses: cssClasses, row: row, isFirst: i == 0 }));\n        }\n        var header = !this.question.showHeader ? null : (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"thead\", null,\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"tr\", null,\n                rowsTH,\n                headers)));\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: cssClasses.tableWrapper, ref: function (root) { return (_this.setControl(root)); } },\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"fieldset\", null,\n                react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"legend\", { className: \"sv-hidden\" }, this.question.locTitle.renderedHtml),\n                react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"table\", { className: this.question.getTableCss() },\n                    header,\n                    react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"tbody\", null, rows)))));\n    };\n    return SurveyQuestionMatrix;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_1__[\"SurveyQuestionElementBase\"]));\n\nvar SurveyQuestionMatrixRow = /** @class */ (function (_super) {\n    __extends(SurveyQuestionMatrixRow, _super);\n    function SurveyQuestionMatrixRow(props) {\n        return _super.call(this, props) || this;\n    }\n    SurveyQuestionMatrixRow.prototype.getStateElement = function () {\n        if (!!this.row)\n            return this.row.item;\n        return _super.prototype.getStateElement.call(this);\n    };\n    Object.defineProperty(SurveyQuestionMatrixRow.prototype, \"question\", {\n        get: function () {\n            return this.props.question;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionMatrixRow.prototype, \"row\", {\n        get: function () {\n            return this.props.row;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionMatrixRow.prototype.wrapCell = function (cell, element, reason) {\n        if (!reason) {\n            return element;\n        }\n        var survey = this.question.survey;\n        var wrapper = null;\n        if (survey) {\n            wrapper = _reactsurveymodel__WEBPACK_IMPORTED_MODULE_3__[\"ReactSurveyElementsWrapper\"].wrapMatrixCell(survey, element, cell, reason);\n        }\n        return wrapper !== null && wrapper !== void 0 ? wrapper : element;\n    };\n    SurveyQuestionMatrixRow.prototype.canRender = function () {\n        return !!this.row;\n    };\n    SurveyQuestionMatrixRow.prototype.renderElement = function () {\n        var rowsTD = null;\n        if (this.question.hasRows) {\n            var rowText = this.renderLocString(this.row.locText);\n            var style = {};\n            if (!!this.question.rowTitleWidth) {\n                style.minWidth = this.question.rowTitleWidth;\n                style.width = this.question.rowTitleWidth;\n            }\n            rowsTD = react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"td\", { style: style, className: this.row.rowTextClasses }, this.wrapCell({ row: this.row }, rowText, \"row-header\"));\n        }\n        var tds = this.generateTds();\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"tr\", { className: this.row.rowClasses || undefined },\n            rowsTD,\n            tds));\n    };\n    SurveyQuestionMatrixRow.prototype.generateTds = function () {\n        var _this = this;\n        var tds = [];\n        var row = this.row;\n        var cellComponent = this.question.cellComponent;\n        var _loop_1 = function () {\n            var td = null;\n            var column = this_1.question.visibleColumns[i];\n            var key = \"value\" + i;\n            var itemClass = this_1.question.getItemClass(row, column);\n            if (this_1.question.hasCellText) {\n                var getHandler = function (column) { return function () { return _this.cellClick(row, column); }; };\n                td = (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"td\", { key: key, className: itemClass, onClick: getHandler ? getHandler(column) : function () { } }, this_1.renderLocString(this_1.question.getCellDisplayLocText(row.name, column))));\n            }\n            else {\n                var renderedCell = _element_factory__WEBPACK_IMPORTED_MODULE_4__[\"ReactElementFactory\"].Instance.createElement(cellComponent, {\n                    question: this_1.question,\n                    row: this_1.row,\n                    column: column,\n                    columnIndex: i,\n                    cssClasses: this_1.cssClasses,\n                    cellChanged: function () { _this.cellClick(_this.row, column); }\n                });\n                td = (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"td\", { key: key, \"data-responsive-title\": column.locText.renderedHtml, className: this_1.question.cssClasses.cell }, renderedCell));\n            }\n            tds.push(td);\n        };\n        var this_1 = this;\n        for (var i = 0; i < this.question.visibleColumns.length; i++) {\n            _loop_1();\n        }\n        return tds;\n    };\n    SurveyQuestionMatrixRow.prototype.cellClick = function (row, column) {\n        row.value = column.value;\n        this.setState({ value: this.row.value });\n    };\n    return SurveyQuestionMatrixRow;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_1__[\"ReactSurveyElement\"]));\n\nvar SurveyQuestionMatrixCell = /** @class */ (function (_super) {\n    __extends(SurveyQuestionMatrixCell, _super);\n    function SurveyQuestionMatrixCell(props) {\n        var _this = _super.call(this, props) || this;\n        _this.handleOnMouseDown = _this.handleOnMouseDown.bind(_this);\n        _this.handleOnChange = _this.handleOnChange.bind(_this);\n        return _this;\n    }\n    SurveyQuestionMatrixCell.prototype.handleOnChange = function (event) {\n        if (!!this.props.cellChanged) {\n            this.props.cellChanged();\n        }\n    };\n    SurveyQuestionMatrixCell.prototype.handleOnMouseDown = function (event) {\n        this.question.onMouseDown();\n    };\n    Object.defineProperty(SurveyQuestionMatrixCell.prototype, \"question\", {\n        get: function () {\n            return this.props.question;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionMatrixCell.prototype, \"row\", {\n        get: function () {\n            return this.props.row;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionMatrixCell.prototype, \"column\", {\n        get: function () {\n            return this.props.column;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionMatrixCell.prototype, \"columnIndex\", {\n        get: function () {\n            return this.props.columnIndex;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionMatrixCell.prototype.canRender = function () {\n        return !!this.question && !!this.row;\n    };\n    SurveyQuestionMatrixCell.prototype.renderElement = function () {\n        var isChecked = this.row.value == this.column.value;\n        var inputId = this.question.inputId + \"_\" + this.row.name + \"_\" + this.columnIndex;\n        var itemClass = this.question.getItemClass(this.row, this.column);\n        var mobileSpan = this.question.isMobile ?\n            (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"span\", { className: this.question.cssClasses.cellResponsiveTitle }, this.renderLocString(this.column.locText)))\n            : undefined;\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"label\", { onMouseDown: this.handleOnMouseDown, className: itemClass },\n            this.renderInput(inputId, isChecked),\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"span\", { className: this.question.cssClasses.materialDecorator }, this.question.itemSvgIcon ?\n                react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"svg\", { className: this.cssClasses.itemDecorator },\n                    react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"use\", { xlinkHref: this.question.itemSvgIcon })) :\n                null),\n            mobileSpan));\n    };\n    SurveyQuestionMatrixCell.prototype.renderInput = function (inputId, isChecked) {\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"input\", { id: inputId, type: \"radio\", className: this.cssClasses.itemValue, name: this.row.fullName, value: this.column.value, disabled: this.row.isReadOnly, checked: isChecked, onChange: this.handleOnChange, \"aria-required\": this.question.a11y_input_ariaRequired, \"aria-label\": this.question.getCellAriaLabel(this.row.locText.renderedHtml, this.column.locText.renderedHtml), \"aria-invalid\": this.question.a11y_input_ariaInvalid, \"aria-errormessage\": this.question.a11y_input_ariaErrormessage }));\n    };\n    return SurveyQuestionMatrixCell;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_1__[\"ReactSurveyElement\"]));\n\n_element_factory__WEBPACK_IMPORTED_MODULE_4__[\"ReactElementFactory\"].Instance.registerElement(\"survey-matrix-cell\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](SurveyQuestionMatrixCell, props);\n});\n_reactquestion_factory__WEBPACK_IMPORTED_MODULE_2__[\"ReactQuestionFactory\"].Instance.registerQuestion(\"matrix\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](SurveyQuestionMatrix, props);\n});\n\n\n/***/ }),\n\n/***/ \"./src/react/reactquestion_matrixdropdown.tsx\":\n/*!****************************************************!*\\\n  !*** ./src/react/reactquestion_matrixdropdown.tsx ***!\n  \\****************************************************/\n/*! exports provided: SurveyQuestionMatrixDropdown */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_914059__) {\n\n\"use strict\";\n__nested_webpack_require_914059__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_914059__.d(__nested_webpack_exports__, \"SurveyQuestionMatrixDropdown\", function() { return SurveyQuestionMatrixDropdown; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_914059__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_914059__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _reactquestion_matrixdropdownbase__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_914059__(/*! ./reactquestion_matrixdropdownbase */ \"./src/react/reactquestion_matrixdropdownbase.tsx\");\n/* harmony import */ var _reactquestion_factory__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_914059__(/*! ./reactquestion_factory */ \"./src/react/reactquestion_factory.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar SurveyQuestionMatrixDropdown = /** @class */ (function (_super) {\n    __extends(SurveyQuestionMatrixDropdown, _super);\n    function SurveyQuestionMatrixDropdown(props) {\n        return _super.call(this, props) || this;\n    }\n    return SurveyQuestionMatrixDropdown;\n}(_reactquestion_matrixdropdownbase__WEBPACK_IMPORTED_MODULE_1__[\"SurveyQuestionMatrixDropdownBase\"]));\n\n_reactquestion_factory__WEBPACK_IMPORTED_MODULE_2__[\"ReactQuestionFactory\"].Instance.registerQuestion(\"matrixdropdown\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](SurveyQuestionMatrixDropdown, props);\n});\n\n\n/***/ }),\n\n/***/ \"./src/react/reactquestion_matrixdropdownbase.tsx\":\n/*!********************************************************!*\\\n  !*** ./src/react/reactquestion_matrixdropdownbase.tsx ***!\n  \\********************************************************/\n/*! exports provided: SurveyQuestionMatrixDropdownBase, SurveyQuestionMatrixDropdownCell */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_916713__) {\n\n\"use strict\";\n__nested_webpack_require_916713__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_916713__.d(__nested_webpack_exports__, \"SurveyQuestionMatrixDropdownBase\", function() { return SurveyQuestionMatrixDropdownBase; });\n/* harmony export (binding) */ __nested_webpack_require_916713__.d(__nested_webpack_exports__, \"SurveyQuestionMatrixDropdownCell\", function() { return SurveyQuestionMatrixDropdownCell; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_916713__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_916713__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _reactquestion_element__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_916713__(/*! ./reactquestion_element */ \"./src/react/reactquestion_element.tsx\");\n/* harmony import */ var _reactquestion__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_916713__(/*! ./reactquestion */ \"./src/react/reactquestion.tsx\");\n/* harmony import */ var _reactquestion_checkbox__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_916713__(/*! ./reactquestion_checkbox */ \"./src/react/reactquestion_checkbox.tsx\");\n/* harmony import */ var _reactquestion_radiogroup__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_916713__(/*! ./reactquestion_radiogroup */ \"./src/react/reactquestion_radiogroup.tsx\");\n/* harmony import */ var _panel__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_916713__(/*! ./panel */ \"./src/react/panel.tsx\");\n/* harmony import */ var _components_action_bar_action_bar__WEBPACK_IMPORTED_MODULE_6__ = __nested_webpack_require_916713__(/*! ./components/action-bar/action-bar */ \"./src/react/components/action-bar/action-bar.tsx\");\n/* harmony import */ var _components_matrix_row__WEBPACK_IMPORTED_MODULE_7__ = __nested_webpack_require_916713__(/*! ./components/matrix/row */ \"./src/react/components/matrix/row.tsx\");\n/* harmony import */ var _components_matrix_actions_drag_drop_icon_drag_drop_icon__WEBPACK_IMPORTED_MODULE_8__ = __nested_webpack_require_916713__(/*! ./components/matrix-actions/drag-drop-icon/drag-drop-icon */ \"./src/react/components/matrix-actions/drag-drop-icon/drag-drop-icon.tsx\");\n/* harmony import */ var _reactquestion_comment__WEBPACK_IMPORTED_MODULE_9__ = __nested_webpack_require_916713__(/*! ./reactquestion_comment */ \"./src/react/reactquestion_comment.tsx\");\n/* harmony import */ var _element_factory__WEBPACK_IMPORTED_MODULE_10__ = __nested_webpack_require_916713__(/*! ./element-factory */ \"./src/react/element-factory.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\n\n\n\n\n\n\nvar SurveyQuestionMatrixDropdownBase = /** @class */ (function (_super) {\n    __extends(SurveyQuestionMatrixDropdownBase, _super);\n    function SurveyQuestionMatrixDropdownBase(props) {\n        var _this = _super.call(this, props) || this;\n        //Create rendered table in contructor and not on rendering\n        var table = _this.question.renderedTable;\n        _this.state = _this.getState();\n        return _this;\n    }\n    Object.defineProperty(SurveyQuestionMatrixDropdownBase.prototype, \"question\", {\n        get: function () {\n            return this.questionBase;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionMatrixDropdownBase.prototype.getState = function (prevState) {\n        if (prevState === void 0) { prevState = null; }\n        return { rowCounter: !prevState ? 0 : prevState.rowCounter + 1 };\n    };\n    SurveyQuestionMatrixDropdownBase.prototype.updateStateOnCallback = function () {\n        if (this.isRendering)\n            return;\n        this.setState(this.getState(this.state));\n    };\n    SurveyQuestionMatrixDropdownBase.prototype.componentDidMount = function () {\n        var _this = this;\n        _super.prototype.componentDidMount.call(this);\n        this.question.visibleRowsChangedCallback = function () {\n            _this.updateStateOnCallback();\n        };\n        this.question.onRenderedTableResetCallback = function () {\n            _this.question.renderedTable.renderedRowsChangedCallback = function () {\n                _this.updateStateOnCallback();\n            };\n            _this.updateStateOnCallback();\n        };\n        this.question.renderedTable.renderedRowsChangedCallback = function () {\n            _this.updateStateOnCallback();\n        };\n    };\n    SurveyQuestionMatrixDropdownBase.prototype.componentWillUnmount = function () {\n        _super.prototype.componentWillUnmount.call(this);\n        this.question.visibleRowsChangedCallback = function () { };\n        this.question.onRenderedTableResetCallback = function () { };\n        this.question.renderedTable.renderedRowsChangedCallback = function () { };\n    };\n    SurveyQuestionMatrixDropdownBase.prototype.renderElement = function () {\n        return this.renderTableDiv();\n    };\n    SurveyQuestionMatrixDropdownBase.prototype.renderTableDiv = function () {\n        var _this = this;\n        var header = this.renderHeader();\n        var footers = this.renderFooter();\n        var rows = this.renderRows();\n        var divStyle = this.question.showHorizontalScroll\n            ? { overflowX: \"scroll\" }\n            : {};\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { style: divStyle, className: this.question.cssClasses.tableWrapper, ref: function (root) { return (_this.setControl(root)); } },\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"table\", { className: this.question.getTableCss() },\n                header,\n                rows,\n                footers)));\n    };\n    SurveyQuestionMatrixDropdownBase.prototype.renderHeader = function () {\n        var table = this.question.renderedTable;\n        if (!table.showHeader)\n            return null;\n        var headers = [];\n        var cells = table.headerRow.cells;\n        for (var i = 0; i < cells.length; i++) {\n            var cell = cells[i];\n            var key = \"column\" + i;\n            var columnStyle = {};\n            if (!!cell.width) {\n                columnStyle.width = cell.width;\n            }\n            if (!!cell.minWidth) {\n                columnStyle.minWidth = cell.minWidth;\n            }\n            var cellContent = this.renderCellContent(cell, \"column-header\", {});\n            var header = cell.hasTitle ?\n                react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"th\", { className: cell.className, key: key, style: columnStyle },\n                    \" \",\n                    cellContent,\n                    \" \")\n                : react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"td\", { className: cell.className, key: key, style: columnStyle });\n            headers.push(header);\n        }\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"thead\", null,\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"tr\", null, headers)));\n    };\n    SurveyQuestionMatrixDropdownBase.prototype.renderFooter = function () {\n        var table = this.question.renderedTable;\n        if (!table.showFooter)\n            return null;\n        var row = this.renderRow(\"footer\", table.footerRow, this.question.cssClasses, \"row-footer\");\n        return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"tfoot\", null, row);\n    };\n    SurveyQuestionMatrixDropdownBase.prototype.renderRows = function () {\n        var cssClasses = this.question.cssClasses;\n        var rows = [];\n        var renderedRows = this.question.renderedTable.rows;\n        for (var i = 0; i < renderedRows.length; i++) {\n            rows.push(this.renderRow(renderedRows[i].id, renderedRows[i], cssClasses));\n        }\n        return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"tbody\", null, rows);\n    };\n    SurveyQuestionMatrixDropdownBase.prototype.renderRow = function (keyValue, row, cssClasses, reason) {\n        var matrixrow = [];\n        var cells = row.cells;\n        for (var i = 0; i < cells.length; i++) {\n            matrixrow.push(this.renderCell(cells[i], i, cssClasses, reason));\n        }\n        var key = \"row\" + keyValue;\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](react__WEBPACK_IMPORTED_MODULE_0__[\"Fragment\"], { key: key }, (reason == \"row-footer\") ? react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"tr\", null, matrixrow) : react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_components_matrix_row__WEBPACK_IMPORTED_MODULE_7__[\"MatrixRow\"], { model: row, parentMatrix: this.question }, matrixrow)));\n    };\n    SurveyQuestionMatrixDropdownBase.prototype.renderCell = function (cell, index, cssClasses, reason) {\n        var key = \"cell\" + index;\n        if (cell.hasQuestion) {\n            return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](SurveyQuestionMatrixDropdownCell, { key: key, cssClasses: cssClasses, cell: cell, creator: this.creator, reason: reason }));\n        }\n        var calcReason = reason;\n        if (!calcReason) {\n            calcReason = cell.hasTitle ? \"row-header\" : \"\";\n        }\n        var cellContent = this.renderCellContent(cell, calcReason, cssClasses);\n        var cellStyle = null;\n        if (!!cell.width || !!cell.minWidth) {\n            cellStyle = {};\n            if (!!cell.width)\n                cellStyle.width = cell.width;\n            if (!!cell.minWidth)\n                cellStyle.minWidth = cell.minWidth;\n        }\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"td\", { className: cell.className, key: key, style: cellStyle, colSpan: cell.colSpans, \"data-responsive-title\": cell.headers, title: cell.getTitle() }, cellContent));\n    };\n    SurveyQuestionMatrixDropdownBase.prototype.renderCellContent = function (cell, reason, cssClasses) {\n        var cellContent = null;\n        var cellStyle = null;\n        if (!!cell.width || !!cell.minWidth) {\n            cellStyle = {};\n            if (!!cell.width)\n                cellStyle.width = cell.width;\n            if (!!cell.minWidth)\n                cellStyle.minWidth = cell.minWidth;\n        }\n        if (cell.hasTitle) {\n            reason = \"row-header\";\n            var str = this.renderLocString(cell.locTitle);\n            var require_1 = !!cell.column ? react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](SurveyQuestionMatrixHeaderRequired, { column: cell.column, question: this.question }) : null;\n            cellContent = (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](react__WEBPACK_IMPORTED_MODULE_0__[\"Fragment\"], null,\n                str,\n                require_1));\n        }\n        if (cell.isDragHandlerCell) {\n            cellContent = (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](react__WEBPACK_IMPORTED_MODULE_0__[\"Fragment\"], null,\n                react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_components_matrix_actions_drag_drop_icon_drag_drop_icon__WEBPACK_IMPORTED_MODULE_8__[\"SurveyQuestionMatrixDynamicDragDropIcon\"], { item: { data: { row: cell.row, question: this.question } } })));\n        }\n        if (cell.isActionsCell) {\n            cellContent = (_element_factory__WEBPACK_IMPORTED_MODULE_10__[\"ReactElementFactory\"].Instance.createElement(\"sv-matrixdynamic-actions-cell\", {\n                question: this.question,\n                cssClasses: cssClasses, cell: cell,\n                model: cell.item.getData()\n            }));\n        }\n        if (cell.hasPanel) {\n            cellContent = (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_panel__WEBPACK_IMPORTED_MODULE_5__[\"SurveyPanel\"], { key: cell.panel.id, element: cell.panel, survey: this.question.survey, cssClasses: cssClasses, isDisplayMode: this.isDisplayMode, creator: this.creator }));\n        }\n        if (cell.isErrorsCell) {\n            if (cell.isErrorsCell) {\n                return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_reactquestion__WEBPACK_IMPORTED_MODULE_2__[\"SurveyQuestionErrorCell\"], { question: cell.question, creator: this.creator }));\n            }\n        }\n        if (!cellContent)\n            return null;\n        var readyCell = (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](react__WEBPACK_IMPORTED_MODULE_0__[\"Fragment\"], null, cellContent));\n        return this.wrapCell(cell, readyCell, reason);\n    };\n    return SurveyQuestionMatrixDropdownBase;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_1__[\"SurveyQuestionElementBase\"]));\n\nvar SurveyQuestionMatrixActionsCell = /** @class */ (function (_super) {\n    __extends(SurveyQuestionMatrixActionsCell, _super);\n    function SurveyQuestionMatrixActionsCell(props) {\n        return _super.call(this, props) || this;\n    }\n    Object.defineProperty(SurveyQuestionMatrixActionsCell.prototype, \"model\", {\n        get: function () {\n            return this.props.model;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionMatrixActionsCell.prototype.renderElement = function () {\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_components_action_bar_action_bar__WEBPACK_IMPORTED_MODULE_6__[\"SurveyActionBar\"], { model: this.model, handleClick: false }));\n    };\n    return SurveyQuestionMatrixActionsCell;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_1__[\"ReactSurveyElement\"]));\n_element_factory__WEBPACK_IMPORTED_MODULE_10__[\"ReactElementFactory\"].Instance.registerElement(\"sv-matrixdynamic-actions-cell\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](SurveyQuestionMatrixActionsCell, props);\n});\nvar SurveyQuestionMatrixHeaderRequired = /** @class */ (function (_super) {\n    __extends(SurveyQuestionMatrixHeaderRequired, _super);\n    function SurveyQuestionMatrixHeaderRequired(props) {\n        return _super.call(this, props) || this;\n    }\n    Object.defineProperty(SurveyQuestionMatrixHeaderRequired.prototype, \"column\", {\n        get: function () {\n            return this.props.column;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionMatrixHeaderRequired.prototype, \"question\", {\n        get: function () {\n            return this.props.question;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionMatrixHeaderRequired.prototype.getStateElement = function () {\n        return this.column;\n    };\n    SurveyQuestionMatrixHeaderRequired.prototype.renderElement = function () {\n        if (!this.column.isRenderedRequired)\n            return null;\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](react__WEBPACK_IMPORTED_MODULE_0__[\"Fragment\"], null,\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"span\", null, \"\\u00A0\"),\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"span\", { className: this.question.cssClasses.cellRequiredText }, this.column.requiredText)));\n    };\n    return SurveyQuestionMatrixHeaderRequired;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_1__[\"ReactSurveyElement\"]));\nvar SurveyQuestionMatrixDropdownCell = /** @class */ (function (_super) {\n    __extends(SurveyQuestionMatrixDropdownCell, _super);\n    function SurveyQuestionMatrixDropdownCell(props) {\n        return _super.call(this, props) || this;\n    }\n    Object.defineProperty(SurveyQuestionMatrixDropdownCell.prototype, \"cell\", {\n        get: function () {\n            return this.props.cell;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionMatrixDropdownCell.prototype, \"itemCss\", {\n        get: function () {\n            return !!this.cell ? this.cell.className : \"\";\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionMatrixDropdownCell.prototype.getQuestion = function () {\n        var q = _super.prototype.getQuestion.call(this);\n        if (!!q)\n            return q;\n        return !!this.cell ? this.cell.question : null;\n    };\n    SurveyQuestionMatrixDropdownCell.prototype.doAfterRender = function () {\n        var el = this.cellRef.current;\n        if (el &&\n            this.cell &&\n            this.question &&\n            this.question.survey &&\n            el.getAttribute(\"data-rendered\") !== \"r\") {\n            el.setAttribute(\"data-rendered\", \"r\");\n            var options = {\n                cell: this.cell,\n                cellQuestion: this.question,\n                htmlElement: el,\n                row: this.cell.row,\n                column: this.cell.cell.column,\n            };\n            this.question.survey.matrixAfterCellRender(this.question, options);\n            this.question.afterRenderCore(el);\n        }\n    };\n    SurveyQuestionMatrixDropdownCell.prototype.getShowErrors = function () {\n        return (this.question.isVisible &&\n            (!this.cell.isChoice || this.cell.isFirstChoice));\n    };\n    SurveyQuestionMatrixDropdownCell.prototype.getCellStyle = function () {\n        var res = _super.prototype.getCellStyle.call(this);\n        if (!!this.cell.width || !!this.cell.minWidth) {\n            if (!res)\n                res = {};\n            if (!!this.cell.width)\n                res.width = this.cell.width;\n            if (!!this.cell.minWidth)\n                res.minWidth = this.cell.minWidth;\n        }\n        return res;\n    };\n    SurveyQuestionMatrixDropdownCell.prototype.getHeaderText = function () {\n        return this.cell.headers;\n    };\n    SurveyQuestionMatrixDropdownCell.prototype.renderQuestion = function () {\n        if (!this.cell.isChoice)\n            return _reactquestion__WEBPACK_IMPORTED_MODULE_2__[\"SurveyQuestion\"].renderQuestionBody(this.creator, this.question);\n        if (this.cell.isOtherChoice)\n            return this.renderOtherComment();\n        if (this.cell.isCheckbox)\n            return this.renderCellCheckboxButton();\n        return this.renderCellRadiogroupButton();\n    };\n    SurveyQuestionMatrixDropdownCell.prototype.renderOtherComment = function () {\n        var question = this.cell.question;\n        var cssClasses = question.cssClasses || {};\n        return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_reactquestion_comment__WEBPACK_IMPORTED_MODULE_9__[\"SurveyQuestionOtherValueItem\"], { question: question, cssClasses: cssClasses, otherCss: cssClasses.other, isDisplayMode: question.isInputReadOnly });\n    };\n    SurveyQuestionMatrixDropdownCell.prototype.renderCellCheckboxButton = function () {\n        var key = this.cell.question.id + \"item\" + this.cell.choiceIndex;\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_reactquestion_checkbox__WEBPACK_IMPORTED_MODULE_3__[\"SurveyQuestionCheckboxItem\"], { key: key, question: this.cell.question, cssClasses: this.cell.question.cssClasses, isDisplayMode: this.cell.question.isInputReadOnly, item: this.cell.item, isFirst: this.cell.isFirstChoice, index: this.cell.choiceIndex.toString(), hideCaption: true }));\n    };\n    SurveyQuestionMatrixDropdownCell.prototype.renderCellRadiogroupButton = function () {\n        var key = this.cell.question.id + \"item\" + this.cell.choiceIndex;\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_reactquestion_radiogroup__WEBPACK_IMPORTED_MODULE_4__[\"SurveyQuestionRadioItem\"], { key: key, question: this.cell.question, cssClasses: this.cell.question.cssClasses, isDisplayMode: this.cell.question.isInputReadOnly, item: this.cell.item, index: this.cell.choiceIndex.toString(), isChecked: this.cell.question.value === this.cell.item.value, isDisabled: this.cell.question.isReadOnly || !this.cell.item.isEnabled, hideCaption: true }));\n    };\n    return SurveyQuestionMatrixDropdownCell;\n}(_reactquestion__WEBPACK_IMPORTED_MODULE_2__[\"SurveyQuestionAndErrorsCell\"]));\n\n\n\n/***/ }),\n\n/***/ \"./src/react/reactquestion_matrixdynamic.tsx\":\n/*!***************************************************!*\\\n  !*** ./src/react/reactquestion_matrixdynamic.tsx ***!\n  \\***************************************************/\n/*! exports provided: SurveyQuestionMatrixDynamic, SurveyQuestionMatrixDynamicAddButton */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_937302__) {\n\n\"use strict\";\n__nested_webpack_require_937302__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_937302__.d(__nested_webpack_exports__, \"SurveyQuestionMatrixDynamic\", function() { return SurveyQuestionMatrixDynamic; });\n/* harmony export (binding) */ __nested_webpack_require_937302__.d(__nested_webpack_exports__, \"SurveyQuestionMatrixDynamicAddButton\", function() { return SurveyQuestionMatrixDynamicAddButton; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_937302__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_937302__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _reactquestion_factory__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_937302__(/*! ./reactquestion_factory */ \"./src/react/reactquestion_factory.tsx\");\n/* harmony import */ var _reactquestion_matrixdropdownbase__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_937302__(/*! ./reactquestion_matrixdropdownbase */ \"./src/react/reactquestion_matrixdropdownbase.tsx\");\n/* harmony import */ var _element_factory__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_937302__(/*! ./element-factory */ \"./src/react/element-factory.tsx\");\n/* harmony import */ var _reactquestion_element__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_937302__(/*! ./reactquestion_element */ \"./src/react/reactquestion_element.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\nvar SurveyQuestionMatrixDynamic = /** @class */ (function (_super) {\n    __extends(SurveyQuestionMatrixDynamic, _super);\n    function SurveyQuestionMatrixDynamic(props) {\n        var _this = _super.call(this, props) || this;\n        _this.handleOnRowAddClick = _this.handleOnRowAddClick.bind(_this);\n        return _this;\n    }\n    Object.defineProperty(SurveyQuestionMatrixDynamic.prototype, \"matrix\", {\n        get: function () {\n            return this.questionBase;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionMatrixDynamic.prototype.handleOnRowAddClick = function (event) {\n        this.matrix.addRowUI();\n    };\n    SurveyQuestionMatrixDynamic.prototype.renderElement = function () {\n        var cssClasses = this.question.cssClasses;\n        var showTable = this.question.renderedTable.showTable;\n        var mainDiv = showTable\n            ? this.renderTableDiv()\n            : this.renderNoRowsContent(cssClasses);\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", null,\n            this.renderAddRowButtonOnTop(cssClasses),\n            mainDiv,\n            this.renderAddRowButtonOnBottom(cssClasses)));\n    };\n    SurveyQuestionMatrixDynamic.prototype.renderAddRowButtonOnTop = function (cssClasses) {\n        if (!this.matrix.renderedTable.showAddRowOnTop)\n            return null;\n        return this.renderAddRowButton(cssClasses);\n    };\n    SurveyQuestionMatrixDynamic.prototype.renderAddRowButtonOnBottom = function (cssClasses) {\n        if (!this.matrix.renderedTable.showAddRowOnBottom)\n            return null;\n        return this.renderAddRowButton(cssClasses);\n    };\n    SurveyQuestionMatrixDynamic.prototype.renderNoRowsContent = function (cssClasses) {\n        var text = this.renderLocString(this.matrix.locEmptyRowsText);\n        var textDiv = react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: cssClasses.emptyRowsText }, text);\n        var btn = this.matrix.renderedTable.showAddRow ? this.renderAddRowButton(cssClasses, true) : undefined;\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: cssClasses.emptyRowsSection },\n            textDiv,\n            btn));\n    };\n    SurveyQuestionMatrixDynamic.prototype.renderAddRowButton = function (cssClasses, isEmptySection) {\n        if (isEmptySection === void 0) { isEmptySection = false; }\n        return _element_factory__WEBPACK_IMPORTED_MODULE_3__[\"ReactElementFactory\"].Instance.createElement(\"sv-matrixdynamic-add-btn\", {\n            question: this.question,\n            cssClasses: cssClasses, isEmptySection: isEmptySection\n        });\n    };\n    return SurveyQuestionMatrixDynamic;\n}(_reactquestion_matrixdropdownbase__WEBPACK_IMPORTED_MODULE_2__[\"SurveyQuestionMatrixDropdownBase\"]));\n\n_reactquestion_factory__WEBPACK_IMPORTED_MODULE_1__[\"ReactQuestionFactory\"].Instance.registerQuestion(\"matrixdynamic\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](SurveyQuestionMatrixDynamic, props);\n});\nvar SurveyQuestionMatrixDynamicAddButton = /** @class */ (function (_super) {\n    __extends(SurveyQuestionMatrixDynamicAddButton, _super);\n    function SurveyQuestionMatrixDynamicAddButton(props) {\n        var _this = _super.call(this, props) || this;\n        _this.handleOnRowAddClick = _this.handleOnRowAddClick.bind(_this);\n        return _this;\n    }\n    Object.defineProperty(SurveyQuestionMatrixDynamicAddButton.prototype, \"matrix\", {\n        get: function () {\n            return this.props.question;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionMatrixDynamicAddButton.prototype.handleOnRowAddClick = function (event) {\n        this.matrix.addRowUI();\n    };\n    SurveyQuestionMatrixDynamicAddButton.prototype.renderElement = function () {\n        var addRowText = this.renderLocString(this.matrix.locAddRowText);\n        var addButton = (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"button\", { className: this.matrix.getAddRowButtonCss(this.props.isEmptySection), type: \"button\", disabled: this.matrix.isInputReadOnly, onClick: this.matrix.isDesignMode ? undefined : this.handleOnRowAddClick },\n            addRowText,\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"span\", { className: this.props.cssClasses.iconAdd })));\n        return (this.props.isEmptySection ? addButton : react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.props.cssClasses.footer }, addButton));\n    };\n    return SurveyQuestionMatrixDynamicAddButton;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_4__[\"ReactSurveyElement\"]));\n\n_element_factory__WEBPACK_IMPORTED_MODULE_3__[\"ReactElementFactory\"].Instance.registerElement(\"sv-matrixdynamic-add-btn\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](SurveyQuestionMatrixDynamicAddButton, props);\n});\n\n\n/***/ }),\n\n/***/ \"./src/react/reactquestion_multipletext.tsx\":\n/*!**************************************************!*\\\n  !*** ./src/react/reactquestion_multipletext.tsx ***!\n  \\**************************************************/\n/*! exports provided: SurveyQuestionMultipleText, SurveyMultipleTextItem, SurveyMultipleTextItemEditor */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_944740__) {\n\n\"use strict\";\n__nested_webpack_require_944740__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_944740__.d(__nested_webpack_exports__, \"SurveyQuestionMultipleText\", function() { return SurveyQuestionMultipleText; });\n/* harmony export (binding) */ __nested_webpack_require_944740__.d(__nested_webpack_exports__, \"SurveyMultipleTextItem\", function() { return SurveyMultipleTextItem; });\n/* harmony export (binding) */ __nested_webpack_require_944740__.d(__nested_webpack_exports__, \"SurveyMultipleTextItemEditor\", function() { return SurveyMultipleTextItemEditor; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_944740__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_944740__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _reactquestion_element__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_944740__(/*! ./reactquestion_element */ \"./src/react/reactquestion_element.tsx\");\n/* harmony import */ var _reactquestion__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_944740__(/*! ./reactquestion */ \"./src/react/reactquestion.tsx\");\n/* harmony import */ var _reactquestion_factory__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_944740__(/*! ./reactquestion_factory */ \"./src/react/reactquestion_factory.tsx\");\n/* harmony import */ var _components_title_title_content__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_944740__(/*! ./components/title/title-content */ \"./src/react/components/title/title-content.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\n\nvar SurveyQuestionMultipleText = /** @class */ (function (_super) {\n    __extends(SurveyQuestionMultipleText, _super);\n    function SurveyQuestionMultipleText(props) {\n        return _super.call(this, props) || this;\n    }\n    Object.defineProperty(SurveyQuestionMultipleText.prototype, \"question\", {\n        get: function () {\n            return this.questionBase;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionMultipleText.prototype.renderElement = function () {\n        var cssClasses = this.question.cssClasses;\n        var tableRows = this.question.getRows();\n        var rows = [];\n        for (var i = 0; i < tableRows.length; i++) {\n            if (tableRows[i].isVisible) {\n                rows.push(this.renderRow(i, tableRows[i].cells, cssClasses));\n            }\n        }\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"table\", { className: this.question.getQuestionRootCss() },\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"tbody\", null, rows)));\n    };\n    SurveyQuestionMultipleText.prototype.renderCell = function (cell, cssClasses, index) {\n        var cellContent;\n        var focusIn = function () { cell.item.focusIn(); };\n        if (cell.isErrorsCell) {\n            cellContent = react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_reactquestion__WEBPACK_IMPORTED_MODULE_2__[\"SurveyQuestionErrorCell\"], { question: cell.item.editor, creator: this.creator });\n        }\n        else {\n            cellContent = react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](SurveyMultipleTextItem, { question: this.question, item: cell.item, creator: this.creator, cssClasses: cssClasses });\n        }\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"td\", { key: \"item\" + index, className: cell.className, onFocus: focusIn }, cellContent));\n    };\n    SurveyQuestionMultipleText.prototype.renderRow = function (rowIndex, cells, cssClasses) {\n        var key = \"item\" + rowIndex;\n        var tds = [];\n        for (var i = 0; i < cells.length; i++) {\n            var cell = cells[i];\n            tds.push(this.renderCell(cell, cssClasses, i));\n        }\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"tr\", { key: key, className: cssClasses.row }, tds));\n    };\n    return SurveyQuestionMultipleText;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_1__[\"SurveyQuestionElementBase\"]));\n\nvar SurveyMultipleTextItem = /** @class */ (function (_super) {\n    __extends(SurveyMultipleTextItem, _super);\n    function SurveyMultipleTextItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(SurveyMultipleTextItem.prototype, \"question\", {\n        get: function () {\n            return this.props.question;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyMultipleTextItem.prototype, \"item\", {\n        get: function () {\n            return this.props.item;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyMultipleTextItem.prototype.getStateElements = function () {\n        return [this.item, this.item.editor];\n    };\n    Object.defineProperty(SurveyMultipleTextItem.prototype, \"creator\", {\n        get: function () {\n            return this.props.creator;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyMultipleTextItem.prototype.renderElement = function () {\n        var item = this.item;\n        var cssClasses = this.cssClasses;\n        var titleStyle = {};\n        if (!!this.question.itemTitleWidth) {\n            titleStyle.minWidth = this.question.itemTitleWidth;\n            titleStyle.width = this.question.itemTitleWidth;\n        }\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"label\", { className: this.question.getItemLabelCss(item) },\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"span\", { className: cssClasses.itemTitle, style: titleStyle },\n                react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_components_title_title_content__WEBPACK_IMPORTED_MODULE_4__[\"TitleContent\"], { element: item.editor, cssClasses: item.editor.cssClasses })),\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](SurveyMultipleTextItemEditor, { cssClasses: cssClasses, itemCss: this.question.getItemCss(), question: item.editor, creator: this.creator })));\n    };\n    return SurveyMultipleTextItem;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_1__[\"ReactSurveyElement\"]));\n\nvar SurveyMultipleTextItemEditor = /** @class */ (function (_super) {\n    __extends(SurveyMultipleTextItemEditor, _super);\n    function SurveyMultipleTextItemEditor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SurveyMultipleTextItemEditor.prototype.renderElement = function () {\n        return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.itemCss }, this.renderContent());\n    };\n    return SurveyMultipleTextItemEditor;\n}(_reactquestion__WEBPACK_IMPORTED_MODULE_2__[\"SurveyQuestionAndErrorsWrapped\"]));\n\n_reactquestion_factory__WEBPACK_IMPORTED_MODULE_3__[\"ReactQuestionFactory\"].Instance.registerQuestion(\"multipletext\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](SurveyQuestionMultipleText, props);\n});\n\n\n/***/ }),\n\n/***/ \"./src/react/reactquestion_paneldynamic.tsx\":\n/*!**************************************************!*\\\n  !*** ./src/react/reactquestion_paneldynamic.tsx ***!\n  \\**************************************************/\n/*! exports provided: SurveyQuestionPanelDynamic, SurveyQuestionPanelDynamicItem */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_952739__) {\n\n\"use strict\";\n__nested_webpack_require_952739__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_952739__.d(__nested_webpack_exports__, \"SurveyQuestionPanelDynamic\", function() { return SurveyQuestionPanelDynamic; });\n/* harmony export (binding) */ __nested_webpack_require_952739__.d(__nested_webpack_exports__, \"SurveyQuestionPanelDynamicItem\", function() { return SurveyQuestionPanelDynamicItem; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_952739__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_952739__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _reactquestion_element__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_952739__(/*! ./reactquestion_element */ \"./src/react/reactquestion_element.tsx\");\n/* harmony import */ var _panel__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_952739__(/*! ./panel */ \"./src/react/panel.tsx\");\n/* harmony import */ var _reactquestion_factory__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_952739__(/*! ./reactquestion_factory */ \"./src/react/reactquestion_factory.tsx\");\n/* harmony import */ var _components_action_bar_action_bar__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_952739__(/*! ./components/action-bar/action-bar */ \"./src/react/components/action-bar/action-bar.tsx\");\n/* harmony import */ var _components_paneldynamic_actions_paneldynamic_next_btn__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_952739__(/*! ./components/paneldynamic-actions/paneldynamic-next-btn */ \"./src/react/components/paneldynamic-actions/paneldynamic-next-btn.tsx\");\n/* harmony import */ var _components_paneldynamic_actions_paneldynamic_prev_btn__WEBPACK_IMPORTED_MODULE_6__ = __nested_webpack_require_952739__(/*! ./components/paneldynamic-actions/paneldynamic-prev-btn */ \"./src/react/components/paneldynamic-actions/paneldynamic-prev-btn.tsx\");\n/* harmony import */ var _components_paneldynamic_actions_paneldynamic_progress_text__WEBPACK_IMPORTED_MODULE_7__ = __nested_webpack_require_952739__(/*! ./components/paneldynamic-actions/paneldynamic-progress-text */ \"./src/react/components/paneldynamic-actions/paneldynamic-progress-text.tsx\");\n/* harmony import */ var _element_factory__WEBPACK_IMPORTED_MODULE_8__ = __nested_webpack_require_952739__(/*! ./element-factory */ \"./src/react/element-factory.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\n\n\n\n\nvar SurveyQuestionPanelDynamic = /** @class */ (function (_super) {\n    __extends(SurveyQuestionPanelDynamic, _super);\n    function SurveyQuestionPanelDynamic(props) {\n        return _super.call(this, props) || this;\n    }\n    Object.defineProperty(SurveyQuestionPanelDynamic.prototype, \"question\", {\n        get: function () {\n            return this.questionBase;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionPanelDynamic.prototype.componentDidMount = function () {\n        _super.prototype.componentDidMount.call(this);\n        this.setState({ panelCounter: 0 });\n        var self = this;\n        this.question.panelCountChangedCallback = function () {\n            self.updateQuestionRendering();\n        };\n        this.question.currentIndexChangedCallback = function () {\n            self.updateQuestionRendering();\n        };\n        this.question.renderModeChangedCallback = function () {\n            self.updateQuestionRendering();\n        };\n    };\n    SurveyQuestionPanelDynamic.prototype.componentWillUnmount = function () {\n        _super.prototype.componentWillUnmount.call(this);\n        this.question.panelCountChangedCallback = function () { };\n        this.question.currentIndexChangedCallback = function () { };\n        this.question.renderModeChangedCallback = function () { };\n    };\n    SurveyQuestionPanelDynamic.prototype.updateQuestionRendering = function () {\n        this.setState({\n            panelCounter: this.state ? this.state.panelCounter + 1 : 1,\n        });\n    };\n    SurveyQuestionPanelDynamic.prototype.renderElement = function () {\n        var panels = [];\n        if (this.question.isRenderModeList) {\n            for (var i = 0; i < this.question.panels.length; i++) {\n                var panel = this.question.panels[i];\n                panels.push(react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](SurveyQuestionPanelDynamicItem, { key: panel.id, element: panel, question: this.question, index: i, cssClasses: this.question.cssClasses, isDisplayMode: this.isDisplayMode, creator: this.creator }));\n            }\n        }\n        else {\n            if (this.question.currentPanel != null) {\n                var panel = this.question.currentPanel;\n                panels.push(react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](SurveyQuestionPanelDynamicItem, { key: this.question.currentIndex, element: panel, question: this.question, index: this.question.currentIndex, cssClasses: this.question.cssClasses, isDisplayMode: this.isDisplayMode, creator: this.creator }));\n            }\n        }\n        var btnAdd = this.question.isRenderModeList && this.question[\"showLegacyNavigation\"]\n            ? this.renderAddRowButton()\n            : null;\n        var navTop = this.question.isProgressTopShowing\n            ? this.renderNavigator()\n            : null;\n        var navBottom = this.question.isProgressBottomShowing\n            ? this.renderNavigator()\n            : null;\n        var style = {};\n        var navV2 = this.renderNavigatorV2();\n        var noEntriesPlaceholder = this.renderPlaceholder();\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.question.cssClasses.root },\n            noEntriesPlaceholder,\n            navTop,\n            panels,\n            navBottom,\n            btnAdd,\n            navV2));\n    };\n    SurveyQuestionPanelDynamic.prototype.renderNavigator = function () {\n        if (!this.question[\"showLegacyNavigation\"]) {\n            if (this.question.isRangeShowing && this.question.isProgressTopShowing) {\n                return this.renderRange();\n            }\n            else {\n                return null;\n            }\n        }\n        var range = this.question.isRangeShowing ? this.renderRange() : null;\n        var btnPrev = this.rendrerPrevButton();\n        var btnNext = this.rendrerNextButton();\n        var btnAdd = this.renderAddRowButton();\n        var progressClass = this.question.isProgressTopShowing\n            ? this.question.cssClasses.progressTop\n            : this.question.cssClasses.progressBottom;\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: progressClass },\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { style: { clear: \"both\" } },\n                react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.question.cssClasses.progressContainer },\n                    btnPrev,\n                    range,\n                    btnNext),\n                btnAdd,\n                this.renderProgressText())));\n    };\n    SurveyQuestionPanelDynamic.prototype.renderProgressText = function () {\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_components_paneldynamic_actions_paneldynamic_progress_text__WEBPACK_IMPORTED_MODULE_7__[\"SurveyQuestionPanelDynamicProgressText\"], { data: { question: this.question } }));\n    };\n    SurveyQuestionPanelDynamic.prototype.rendrerPrevButton = function () {\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_components_paneldynamic_actions_paneldynamic_prev_btn__WEBPACK_IMPORTED_MODULE_6__[\"SurveyQuestionPanelDynamicPrevButton\"], { data: { question: this.question } }));\n    };\n    SurveyQuestionPanelDynamic.prototype.rendrerNextButton = function () {\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_components_paneldynamic_actions_paneldynamic_next_btn__WEBPACK_IMPORTED_MODULE_5__[\"SurveyQuestionPanelDynamicNextButton\"], { data: { question: this.question } }));\n    };\n    SurveyQuestionPanelDynamic.prototype.renderRange = function () {\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.question.cssClasses.progress },\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.question.cssClasses.progressBar, style: { width: this.question.progress }, role: \"progressbar\" })));\n    };\n    SurveyQuestionPanelDynamic.prototype.renderAddRowButton = function () {\n        return _element_factory__WEBPACK_IMPORTED_MODULE_8__[\"ReactElementFactory\"].Instance.createElement(\"sv-paneldynamic-add-btn\", {\n            data: { question: this.question }\n        });\n    };\n    SurveyQuestionPanelDynamic.prototype.renderNavigatorV2 = function () {\n        if (!this.question.showNavigation)\n            return null;\n        var range = this.question.isRangeShowing && this.question.isProgressBottomShowing ? this.renderRange() : null;\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.question.cssClasses.footer },\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"hr\", { className: this.question.cssClasses.separator }),\n            range,\n            this.question.footerToolbar.visibleActions.length ? (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.question.cssClasses.footerButtonsContainer },\n                react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_components_action_bar_action_bar__WEBPACK_IMPORTED_MODULE_4__[\"SurveyActionBar\"], { model: this.question.footerToolbar }))) : null));\n    };\n    SurveyQuestionPanelDynamic.prototype.renderPlaceholder = function () {\n        if (this.question.getShowNoEntriesPlaceholder()) {\n            return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.question.cssClasses.noEntriesPlaceholder },\n                react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"span\", null, this.renderLocString(this.question.locNoEntriesText)),\n                this.renderAddRowButton()));\n        }\n        return null;\n    };\n    return SurveyQuestionPanelDynamic;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_1__[\"SurveyQuestionElementBase\"]));\n\nvar SurveyQuestionPanelDynamicItem = /** @class */ (function (_super) {\n    __extends(SurveyQuestionPanelDynamicItem, _super);\n    function SurveyQuestionPanelDynamicItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(SurveyQuestionPanelDynamicItem.prototype, \"question\", {\n        get: function () {\n            return this.props.question;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionPanelDynamicItem.prototype, \"index\", {\n        get: function () {\n            return this.props.index;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionPanelDynamicItem.prototype.getSurvey = function () {\n        return !!this.question ? this.question.survey : null;\n    };\n    SurveyQuestionPanelDynamicItem.prototype.getCss = function () {\n        var survey = this.getSurvey();\n        return !!survey ? survey.getCss() : {};\n    };\n    SurveyQuestionPanelDynamicItem.prototype.render = function () {\n        var panel = _super.prototype.render.call(this);\n        var removeButton = this.renderButton();\n        var separator = this.question.showSeparator(this.index) ?\n            (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"hr\", { className: this.question.cssClasses.separator })) : null;\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](react__WEBPACK_IMPORTED_MODULE_0__[\"Fragment\"], null,\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.question.getPanelWrapperCss(this.panel) },\n                panel,\n                removeButton),\n            separator));\n    };\n    SurveyQuestionPanelDynamicItem.prototype.renderButton = function () {\n        if (this.question.panelRemoveButtonLocation !== \"right\" ||\n            !this.question.canRemovePanel ||\n            (this.question.isRenderModeList && this.panel.isCollapsed)) {\n            return null;\n        }\n        return _element_factory__WEBPACK_IMPORTED_MODULE_8__[\"ReactElementFactory\"].Instance.createElement(\"sv-paneldynamic-remove-btn\", {\n            data: { question: this.question, panel: this.panel }\n        });\n    };\n    return SurveyQuestionPanelDynamicItem;\n}(_panel__WEBPACK_IMPORTED_MODULE_2__[\"SurveyPanel\"]));\n\n_reactquestion_factory__WEBPACK_IMPORTED_MODULE_3__[\"ReactQuestionFactory\"].Instance.registerQuestion(\"paneldynamic\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](SurveyQuestionPanelDynamic, props);\n});\n\n\n/***/ }),\n\n/***/ \"./src/react/reactquestion_radiogroup.tsx\":\n/*!************************************************!*\\\n  !*** ./src/react/reactquestion_radiogroup.tsx ***!\n  \\************************************************/\n/*! exports provided: SurveyQuestionRadiogroup, SurveyQuestionRadioItem */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_966493__) {\n\n\"use strict\";\n__nested_webpack_require_966493__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_966493__.d(__nested_webpack_exports__, \"SurveyQuestionRadiogroup\", function() { return SurveyQuestionRadiogroup; });\n/* harmony export (binding) */ __nested_webpack_require_966493__.d(__nested_webpack_exports__, \"SurveyQuestionRadioItem\", function() { return SurveyQuestionRadioItem; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_966493__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_966493__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _reactquestion_element__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_966493__(/*! ./reactquestion_element */ \"./src/react/reactquestion_element.tsx\");\n/* harmony import */ var _reactquestion_comment__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_966493__(/*! ./reactquestion_comment */ \"./src/react/reactquestion_comment.tsx\");\n/* harmony import */ var _reactquestion_factory__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_966493__(/*! ./reactquestion_factory */ \"./src/react/reactquestion_factory.tsx\");\n/* harmony import */ var _reactsurveymodel__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_966493__(/*! ./reactsurveymodel */ \"./src/react/reactsurveymodel.tsx\");\n/* harmony import */ var _element_factory__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_966493__(/*! ./element-factory */ \"./src/react/element-factory.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\n\nvar SurveyQuestionRadiogroup = /** @class */ (function (_super) {\n    __extends(SurveyQuestionRadiogroup, _super);\n    function SurveyQuestionRadiogroup(props) {\n        return _super.call(this, props) || this;\n    }\n    Object.defineProperty(SurveyQuestionRadiogroup.prototype, \"question\", {\n        get: function () {\n            return this.questionBase;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionRadiogroup.prototype.renderElement = function () {\n        var _this = this;\n        var cssClasses = this.question.cssClasses;\n        var clearButton = null;\n        if (this.question.showClearButtonInContent) {\n            clearButton = (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", null,\n                react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"input\", { type: \"button\", className: this.question.cssClasses.clearButton, onClick: function () { return _this.question.clearValue(); }, value: this.question.clearButtonCaption })));\n        }\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"fieldset\", { className: this.question.getSelectBaseRootCss(), ref: function (fieldset) { return (_this.setControl(fieldset)); }, role: this.question.a11y_input_ariaRole, \"aria-required\": this.question.a11y_input_ariaRequired, \"aria-label\": this.question.a11y_input_ariaLabel, \"aria-labelledby\": this.question.a11y_input_ariaLabelledBy, \"aria-describedby\": this.question.a11y_input_ariaDescribedBy, \"aria-invalid\": this.question.a11y_input_ariaInvalid, \"aria-errormessage\": this.question.a11y_input_ariaErrormessage },\n            this.question.hasColumns\n                ? this.getColumnedBody(cssClasses)\n                : this.getBody(cssClasses),\n            this.getFooter(),\n            this.question.isOtherSelected ? this.renderOther(cssClasses) : null,\n            clearButton));\n    };\n    SurveyQuestionRadiogroup.prototype.getFooter = function () {\n        var _this = this;\n        if (this.question.hasFootItems) {\n            return this.question.footItems.map(function (item, ii) {\n                return _this.renderItem(\"item_f\" + ii, item, false, _this.question.cssClasses);\n            });\n        }\n    };\n    SurveyQuestionRadiogroup.prototype.getColumnedBody = function (cssClasses) {\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: cssClasses.rootMultiColumn }, this.getColumns(cssClasses)));\n    };\n    SurveyQuestionRadiogroup.prototype.getColumns = function (cssClasses) {\n        var _this = this;\n        var value = this.getStateValue();\n        return this.question.columns.map(function (column, ci) {\n            var items = column.map(function (item, ii) {\n                return _this.renderItem(\"item\" + ci + ii, item, value, cssClasses, \"\" + ci + ii);\n            });\n            return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { key: \"column\" + ci, className: _this.question.getColumnClass(), role: \"presentation\" }, items));\n        });\n    };\n    SurveyQuestionRadiogroup.prototype.getBody = function (cssClasses) {\n        if (this.question.blockedRow) {\n            return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: cssClasses.rootRow }, this.getItems(cssClasses, this.question.dataChoices));\n        }\n        else\n            return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](react__WEBPACK_IMPORTED_MODULE_0__[\"Fragment\"], null, this.getItems(cssClasses, this.question.bodyItems));\n    };\n    SurveyQuestionRadiogroup.prototype.getItems = function (cssClasses, choices) {\n        var items = [];\n        var value = this.getStateValue();\n        for (var i = 0; i < choices.length; i++) {\n            var item = choices[i];\n            var renderedItem = this.renderItem(\"item\" + i, item, value, cssClasses, \"\" + i);\n            items.push(renderedItem);\n        }\n        return items;\n    };\n    Object.defineProperty(SurveyQuestionRadiogroup.prototype, \"textStyle\", {\n        get: function () {\n            return null; //{ display: \"inline\", position: \"static\" };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionRadiogroup.prototype.renderOther = function (cssClasses) {\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.question.getCommentAreaCss(true) },\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_reactquestion_comment__WEBPACK_IMPORTED_MODULE_2__[\"SurveyQuestionOtherValueItem\"], { question: this.question, otherCss: cssClasses.other, cssClasses: cssClasses, isDisplayMode: this.isDisplayMode })));\n    };\n    SurveyQuestionRadiogroup.prototype.renderItem = function (key, item, value, cssClasses, index) {\n        var renderedItem = _element_factory__WEBPACK_IMPORTED_MODULE_5__[\"ReactElementFactory\"].Instance.createElement(this.question.itemComponent, {\n            key: key,\n            question: this.question,\n            cssClasses: cssClasses,\n            isDisplayMode: this.isDisplayMode,\n            item: item,\n            textStyle: this.textStyle,\n            index: index,\n            isChecked: value === item.value,\n        });\n        var survey = this.question.survey;\n        var wrappedItem = null;\n        if (!!survey) {\n            wrappedItem = _reactsurveymodel__WEBPACK_IMPORTED_MODULE_4__[\"ReactSurveyElementsWrapper\"].wrapItemValue(survey, renderedItem, this.question, item);\n        }\n        return wrappedItem !== null && wrappedItem !== void 0 ? wrappedItem : renderedItem;\n    };\n    SurveyQuestionRadiogroup.prototype.getStateValue = function () {\n        return !this.question.isEmpty() ? this.question.renderedValue : \"\";\n    };\n    return SurveyQuestionRadiogroup;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_1__[\"SurveyQuestionElementBase\"]));\n\nvar SurveyQuestionRadioItem = /** @class */ (function (_super) {\n    __extends(SurveyQuestionRadioItem, _super);\n    function SurveyQuestionRadioItem(props) {\n        var _this = _super.call(this, props) || this;\n        _this.handleOnChange = _this.handleOnChange.bind(_this);\n        _this.handleOnMouseDown = _this.handleOnMouseDown.bind(_this);\n        return _this;\n    }\n    SurveyQuestionRadioItem.prototype.getStateElement = function () {\n        return this.item;\n    };\n    Object.defineProperty(SurveyQuestionRadioItem.prototype, \"question\", {\n        get: function () {\n            return this.props.question;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionRadioItem.prototype, \"item\", {\n        get: function () {\n            return this.props.item;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionRadioItem.prototype, \"textStyle\", {\n        get: function () {\n            return this.props.textStyle;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionRadioItem.prototype, \"index\", {\n        get: function () {\n            return this.props.index;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionRadioItem.prototype, \"isChecked\", {\n        get: function () {\n            return this.props.isChecked;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionRadioItem.prototype, \"hideCaption\", {\n        get: function () {\n            return this.props.hideCaption === true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionRadioItem.prototype.shouldComponentUpdate = function (nextProps, nextState) {\n        if (!_super.prototype.shouldComponentUpdate.call(this, nextProps, nextState))\n            return false;\n        if (!this.question)\n            return false;\n        return (!this.question.customWidget ||\n            !!this.question.customWidgetData.isNeedRender ||\n            !!this.question.customWidget.widgetJson.isDefaultRender ||\n            !!this.question.customWidget.widgetJson.render);\n    };\n    SurveyQuestionRadioItem.prototype.handleOnChange = function (event) {\n        this.question.clickItemHandler(this.item);\n    };\n    SurveyQuestionRadioItem.prototype.handleOnMouseDown = function (event) {\n        this.question.onMouseDown();\n    };\n    SurveyQuestionRadioItem.prototype.canRender = function () {\n        return !!this.question && !!this.item;\n    };\n    SurveyQuestionRadioItem.prototype.renderElement = function () {\n        var itemClass = this.question.getItemClass(this.item);\n        var labelClass = this.question.getLabelClass(this.item);\n        var controlLabelClass = this.question.getControlLabelClass(this.item);\n        var itemLabel = !this.hideCaption ? react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"span\", { className: controlLabelClass }, this.renderLocString(this.item.locText, this.textStyle)) : null;\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: itemClass, role: \"presentation\" },\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"label\", { onMouseDown: this.handleOnMouseDown, className: labelClass },\n                react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"input\", { \"aria-errormessage\": this.question.ariaErrormessage, className: this.cssClasses.itemControl, id: this.question.getItemId(this.item), type: \"radio\", name: this.question.questionName, checked: this.isChecked, value: this.item.value, disabled: !this.question.getItemEnabled(this.item), onChange: this.handleOnChange }),\n                this.cssClasses.materialDecorator ?\n                    react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"span\", { className: this.cssClasses.materialDecorator }, this.question.itemSvgIcon ?\n                        react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"svg\", { className: this.cssClasses.itemDecorator },\n                            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"use\", { xlinkHref: this.question.itemSvgIcon })) :\n                        null) :\n                    null,\n                itemLabel)));\n    };\n    return SurveyQuestionRadioItem;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_1__[\"ReactSurveyElement\"]));\n\n_element_factory__WEBPACK_IMPORTED_MODULE_5__[\"ReactElementFactory\"].Instance.registerElement(\"survey-radiogroup-item\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](SurveyQuestionRadioItem, props);\n});\n_reactquestion_factory__WEBPACK_IMPORTED_MODULE_3__[\"ReactQuestionFactory\"].Instance.registerQuestion(\"radiogroup\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](SurveyQuestionRadiogroup, props);\n});\n\n\n/***/ }),\n\n/***/ \"./src/react/reactquestion_ranking.tsx\":\n/*!*********************************************!*\\\n  !*** ./src/react/reactquestion_ranking.tsx ***!\n  \\*********************************************/\n/*! exports provided: SurveyQuestionRanking, SurveyQuestionRankingItem */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_979839__) {\n\n\"use strict\";\n__nested_webpack_require_979839__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_979839__.d(__nested_webpack_exports__, \"SurveyQuestionRanking\", function() { return SurveyQuestionRanking; });\n/* harmony export (binding) */ __nested_webpack_require_979839__.d(__nested_webpack_exports__, \"SurveyQuestionRankingItem\", function() { return SurveyQuestionRankingItem; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_979839__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_979839__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _reactquestion_element__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_979839__(/*! ./reactquestion_element */ \"./src/react/reactquestion_element.tsx\");\n/* harmony import */ var _reactquestion_factory__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_979839__(/*! ./reactquestion_factory */ \"./src/react/reactquestion_factory.tsx\");\n/* harmony import */ var _reactsurveymodel__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_979839__(/*! ./reactsurveymodel */ \"./src/react/reactsurveymodel.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\nvar SurveyQuestionRanking = /** @class */ (function (_super) {\n    __extends(SurveyQuestionRanking, _super);\n    function SurveyQuestionRanking() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(SurveyQuestionRanking.prototype, \"question\", {\n        get: function () {\n            return this.questionBase;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionRanking.prototype.renderElement = function () {\n        var _this = this;\n        if (!this.question.selectToRankEnabled) {\n            return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.question.rootClass, ref: function (root) { return (_this.setControl(root)); } }, this.getItems()));\n        }\n        else {\n            var unrankedItem = true;\n            return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.question.rootClass, ref: function (root) { return (_this.setControl(root)); } },\n                react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.question.getContainerClasses(\"from\"), \"data-ranking\": \"from-container\" },\n                    this.getItems(this.question.unRankingChoices, unrankedItem),\n                    this.question.unRankingChoices.length === 0 ? react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.question.cssClasses.containerPlaceholder },\n                        \" \",\n                        this.renderLocString(this.question.locSelectToRankEmptyRankedAreaText),\n                        \" \") : null),\n                react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.question.cssClasses.containersDivider }),\n                react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.question.getContainerClasses(\"to\"), \"data-ranking\": \"to-container\" },\n                    this.getItems(),\n                    this.question.rankingChoices.length === 0 ? react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.question.cssClasses.containerPlaceholder },\n                        \" \",\n                        this.renderLocString(this.question.locSelectToRankEmptyUnrankedAreaText),\n                        \" \") : null)));\n        }\n    };\n    SurveyQuestionRanking.prototype.getItems = function (choices, unrankedItem) {\n        var _this = this;\n        if (choices === void 0) { choices = this.question.rankingChoices; }\n        var items = [];\n        var _loop_1 = function (i) {\n            var item = choices[i];\n            items.push(this_1.renderItem(item, i, function (event) {\n                _this.question.handleKeydown.call(_this.question, event, item);\n            }, function (event) {\n                event.persist();\n                //event.preventDefault();\n                _this.question.handlePointerDown.call(_this.question, event, item, event.currentTarget);\n            }, this_1.question.cssClasses, this_1.question.getItemClass(item), this_1.question, unrankedItem));\n        };\n        var this_1 = this;\n        for (var i = 0; i < choices.length; i++) {\n            _loop_1(i);\n        }\n        return items;\n    };\n    SurveyQuestionRanking.prototype.renderItem = function (item, i, handleKeydown, handlePointerDown, cssClasses, itemClass, question, unrankedItem) {\n        var key = item.value + \"-\" + i + \"-item\";\n        var text = this.renderLocString(item.locText);\n        var index = i;\n        var indexText = this.question.getNumberByIndex(i);\n        var tabIndex = this.question.getItemTabIndex(item);\n        var renderedItem = (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](SurveyQuestionRankingItem, { key: key, text: text, index: index, indexText: indexText, itemTabIndex: tabIndex, handleKeydown: handleKeydown, handlePointerDown: handlePointerDown, cssClasses: cssClasses, itemClass: itemClass, question: question, unrankedItem: unrankedItem, item: item }));\n        var survey = this.question.survey;\n        var wrappedItem = null;\n        if (!!survey) {\n            wrappedItem = _reactsurveymodel__WEBPACK_IMPORTED_MODULE_3__[\"ReactSurveyElementsWrapper\"].wrapItemValue(survey, renderedItem, this.question, item);\n        }\n        return wrappedItem !== null && wrappedItem !== void 0 ? wrappedItem : renderedItem;\n    };\n    return SurveyQuestionRanking;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_1__[\"SurveyQuestionElementBase\"]));\n\nvar SurveyQuestionRankingItem = /** @class */ (function (_super) {\n    __extends(SurveyQuestionRankingItem, _super);\n    function SurveyQuestionRankingItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(SurveyQuestionRankingItem.prototype, \"text\", {\n        get: function () {\n            return this.props.text;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionRankingItem.prototype, \"index\", {\n        get: function () {\n            return this.props.index;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionRankingItem.prototype, \"indexText\", {\n        get: function () {\n            return this.props.indexText;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionRankingItem.prototype, \"handleKeydown\", {\n        get: function () {\n            return this.props.handleKeydown;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionRankingItem.prototype, \"handlePointerDown\", {\n        get: function () {\n            return this.props.handlePointerDown;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionRankingItem.prototype, \"cssClasses\", {\n        get: function () {\n            return this.props.cssClasses;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionRankingItem.prototype, \"itemClass\", {\n        get: function () {\n            return this.props.itemClass;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionRankingItem.prototype, \"itemTabIndex\", {\n        get: function () {\n            return this.props.itemTabIndex;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionRankingItem.prototype, \"question\", {\n        get: function () {\n            return this.props.question;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionRankingItem.prototype, \"unrankedItem\", {\n        get: function () {\n            return this.props.unrankedItem;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionRankingItem.prototype, \"item\", {\n        get: function () {\n            return this.props.item;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionRankingItem.prototype.renderEmptyIcon = function () {\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"svg\", null,\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"use\", { xlinkHref: this.question.dashSvgIcon })));\n    };\n    SurveyQuestionRankingItem.prototype.renderElement = function () {\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { tabIndex: this.itemTabIndex, className: this.itemClass, onKeyDown: this.handleKeydown, onPointerDown: this.handlePointerDown, \"data-sv-drop-target-ranking-item\": this.index },\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { tabIndex: -1, style: { outline: \"none\" } },\n                react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.cssClasses.itemGhostNode }),\n                react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.cssClasses.itemContent },\n                    react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.cssClasses.itemIconContainer },\n                        react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"svg\", { className: this.question.getIconHoverCss() },\n                            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"use\", { xlinkHref: this.question.dragDropSvgIcon })),\n                        react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"svg\", { className: this.question.getIconFocusCss() },\n                            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"use\", { xlinkHref: this.question.arrowsSvgIcon }))),\n                    react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.question.getItemIndexClasses(this.item) }, (!this.unrankedItem && this.indexText) ? this.indexText : this.renderEmptyIcon()),\n                    react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.cssClasses.controlLabel }, this.text)))));\n    };\n    return SurveyQuestionRankingItem;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_1__[\"ReactSurveyElement\"]));\n\n_reactquestion_factory__WEBPACK_IMPORTED_MODULE_2__[\"ReactQuestionFactory\"].Instance.registerQuestion(\"ranking\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](SurveyQuestionRanking, props);\n});\n\n\n/***/ }),\n\n/***/ \"./src/react/reactquestion_rating.tsx\":\n/*!********************************************!*\\\n  !*** ./src/react/reactquestion_rating.tsx ***!\n  \\********************************************/\n/*! exports provided: SurveyQuestionRating */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_991519__) {\n\n\"use strict\";\n__nested_webpack_require_991519__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_991519__.d(__nested_webpack_exports__, \"SurveyQuestionRating\", function() { return SurveyQuestionRating; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_991519__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_991519__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _reactquestion_element__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_991519__(/*! ./reactquestion_element */ \"./src/react/reactquestion_element.tsx\");\n/* harmony import */ var _reactquestion_factory__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_991519__(/*! ./reactquestion_factory */ \"./src/react/reactquestion_factory.tsx\");\n/* harmony import */ var _element_factory__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_991519__(/*! ./element-factory */ \"./src/react/element-factory.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\nvar SurveyQuestionRating = /** @class */ (function (_super) {\n    __extends(SurveyQuestionRating, _super);\n    function SurveyQuestionRating(props) {\n        var _this = _super.call(this, props) || this;\n        _this.handleOnClick = _this.handleOnClick.bind(_this);\n        return _this;\n    }\n    Object.defineProperty(SurveyQuestionRating.prototype, \"question\", {\n        get: function () {\n            return this.questionBase;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionRating.prototype.handleOnClick = function (event) {\n        this.question.setValueFromClick(event.target.value);\n        this.setState({ value: this.question.value });\n    };\n    SurveyQuestionRating.prototype.renderItem = function (item, index) {\n        var renderedItem = _element_factory__WEBPACK_IMPORTED_MODULE_3__[\"ReactElementFactory\"].Instance.createElement(this.question.itemComponent, {\n            question: this.question,\n            item: item,\n            index: index,\n            key: \"value\" + index,\n            handleOnClick: this.handleOnClick,\n            isDisplayMode: this.isDisplayMode\n        });\n        return renderedItem;\n    };\n    SurveyQuestionRating.prototype.renderElement = function () {\n        var _this = this;\n        var cssClasses = this.question.cssClasses;\n        var minText = this.question.minRateDescription\n            ? this.renderLocString(this.question.locMinRateDescription)\n            : null;\n        var maxText = this.question.maxRateDescription\n            ? this.renderLocString(this.question.locMaxRateDescription)\n            : null;\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.question.ratingRootCss, ref: function (div) { return (_this.setControl(div)); } },\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"fieldset\", { role: \"radiogroup\" },\n                react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"legend\", { role: \"presentation\", className: \"sv-hidden\" }),\n                !!this.question.hasMinLabel ? react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"span\", { className: cssClasses.minText }, minText) : null,\n                this.question.renderedRateItems.map(function (item, index) { return _this.renderItem(item, index); }),\n                !!this.question.hasMaxLabel ? react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"span\", { className: cssClasses.maxText }, maxText) : null)));\n    };\n    return SurveyQuestionRating;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_1__[\"SurveyQuestionElementBase\"]));\n\n_reactquestion_factory__WEBPACK_IMPORTED_MODULE_2__[\"ReactQuestionFactory\"].Instance.registerQuestion(\"rating\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](SurveyQuestionRating, props);\n});\n\n\n/***/ }),\n\n/***/ \"./src/react/reactquestion_tagbox.tsx\":\n/*!********************************************!*\\\n  !*** ./src/react/reactquestion_tagbox.tsx ***!\n  \\********************************************/\n/*! exports provided: SurveyQuestionTagbox */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_996383__) {\n\n\"use strict\";\n__nested_webpack_require_996383__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_996383__.d(__nested_webpack_exports__, \"SurveyQuestionTagbox\", function() { return SurveyQuestionTagbox; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_996383__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_996383__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _reactquestion_factory__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_996383__(/*! ./reactquestion_factory */ \"./src/react/reactquestion_factory.tsx\");\n/* harmony import */ var _dropdown_base__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_996383__(/*! ./dropdown-base */ \"./src/react/dropdown-base.tsx\");\n/* harmony import */ var _tagbox_item__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_996383__(/*! ./tagbox-item */ \"./src/react/tagbox-item.tsx\");\n/* harmony import */ var _tagbox_filter__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_996383__(/*! ./tagbox-filter */ \"./src/react/tagbox-filter.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\nvar SurveyQuestionTagbox = /** @class */ (function (_super) {\n    __extends(SurveyQuestionTagbox, _super);\n    function SurveyQuestionTagbox(props) {\n        return _super.call(this, props) || this;\n    }\n    SurveyQuestionTagbox.prototype.renderItem = function (key, item) {\n        var renderedItem = (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_tagbox_item__WEBPACK_IMPORTED_MODULE_3__[\"SurveyQuestionTagboxItem\"], { key: key, question: this.question, item: item }));\n        return renderedItem;\n    };\n    SurveyQuestionTagbox.prototype.renderInput = function (dropdownListModel) {\n        var _this = this;\n        var dropdownMultiSelectListModel = dropdownListModel;\n        var items = this.question.selectedChoices.map(function (choice, index) { return _this.renderItem(\"item\" + index, choice); });\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { id: this.question.inputId, className: this.question.getControlClass(), tabIndex: dropdownListModel.noTabIndex ? undefined : 0, \n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            disabled: this.question.isInputReadOnly, required: this.question.isRequired, onKeyDown: this.keyhandler, onBlur: this.blur, role: this.question.ariaRole, \"aria-required\": this.question.ariaRequired, \"aria-label\": this.question.ariaLabel, \"aria-invalid\": this.question.ariaInvalid, \"aria-errormessage\": this.question.ariaErrormessage, \"aria-expanded\": this.question.ariaExpanded === null ? undefined : this.question.ariaExpanded === \"true\", \"aria-controls\": dropdownListModel.listElementId, \"aria-activedescendant\": dropdownListModel.ariaActivedescendant },\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.question.cssClasses.controlValue },\n                items,\n                react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_tagbox_filter__WEBPACK_IMPORTED_MODULE_4__[\"TagboxFilterString\"], { model: dropdownMultiSelectListModel, question: this.question })),\n            this.createClearButton()));\n    };\n    SurveyQuestionTagbox.prototype.renderElement = function () {\n        var cssClasses = this.question.cssClasses;\n        var comment = this.question.isOtherSelected ? this.renderOther(cssClasses) : null;\n        var select = this.renderSelect(cssClasses);\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.question.renderCssRoot },\n            select,\n            comment));\n    };\n    SurveyQuestionTagbox.prototype.renderReadOnlyElement = function () {\n        if (this.question.locReadOnlyText) {\n            return this.renderLocString(this.question.locReadOnlyText);\n        }\n        else {\n            return null;\n        }\n    };\n    return SurveyQuestionTagbox;\n}(_dropdown_base__WEBPACK_IMPORTED_MODULE_2__[\"SurveyQuestionDropdownBase\"]));\n\n_reactquestion_factory__WEBPACK_IMPORTED_MODULE_1__[\"ReactQuestionFactory\"].Instance.registerQuestion(\"tagbox\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](SurveyQuestionTagbox, props);\n});\n\n\n/***/ }),\n\n/***/ \"./src/react/reactquestion_text.tsx\":\n/*!******************************************!*\\\n  !*** ./src/react/reactquestion_text.tsx ***!\n  \\******************************************/\n/*! exports provided: SurveyQuestionText */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_1001649__) {\n\n\"use strict\";\n__nested_webpack_require_1001649__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_1001649__.d(__nested_webpack_exports__, \"SurveyQuestionText\", function() { return SurveyQuestionText; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_1001649__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_1001649__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _reactquestion_element__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_1001649__(/*! ./reactquestion_element */ \"./src/react/reactquestion_element.tsx\");\n/* harmony import */ var _reactquestion_factory__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_1001649__(/*! ./reactquestion_factory */ \"./src/react/reactquestion_factory.tsx\");\n/* harmony import */ var _components_character_counter__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_1001649__(/*! ./components/character-counter */ \"./src/react/components/character-counter.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\nvar SurveyQuestionText = /** @class */ (function (_super) {\n    __extends(SurveyQuestionText, _super);\n    //controlRef: React.RefObject<HTMLInputElement>;\n    function SurveyQuestionText(props) {\n        return _super.call(this, props) || this;\n        //this.controlRef = React.createRef();\n    }\n    SurveyQuestionText.prototype.renderInput = function () {\n        var _this = this;\n        var inputClass = this.question.getControlClass();\n        var placeholder = this.question.renderedPlaceholder;\n        if (this.question.isReadOnlyRenderDiv()) {\n            return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", null, this.question.inputValue);\n        }\n        var counter = !!this.question.getMaxLength() ? (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_components_character_counter__WEBPACK_IMPORTED_MODULE_3__[\"CharacterCounterComponent\"], { counter: this.question.characterCounter, remainingCharacterCounter: this.question.cssClasses.remainingCharacterCounter })) : null;\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](react__WEBPACK_IMPORTED_MODULE_0__[\"Fragment\"], null,\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"input\", { id: this.question.inputId, disabled: this.isDisplayMode, className: inputClass, type: this.question.inputType, \n                //ref={this.controlRef}\n                ref: function (input) { return (_this.setControl(input)); }, style: this.question.inputStyle, maxLength: this.question.getMaxLength(), min: this.question.renderedMin, max: this.question.renderedMax, step: this.question.renderedStep, size: this.question.inputSize, placeholder: placeholder, list: this.question.dataListId, autoComplete: this.question.autocomplete, onBlur: this.question.onBlur, onFocus: this.question.onFocus, onChange: this.question.onChange, onKeyUp: this.question.onKeyUp, onKeyDown: this.question.onKeyDown, onCompositionUpdate: function (event) { return _this.question.onCompositionUpdate(event.nativeEvent); }, \"aria-required\": this.question.a11y_input_ariaRequired, \"aria-label\": this.question.a11y_input_ariaLabel, \"aria-labelledby\": this.question.a11y_input_ariaLabelledBy, \"aria-describedby\": this.question.a11y_input_ariaDescribedBy, \"aria-invalid\": this.question.a11y_input_ariaInvalid, \"aria-errormessage\": this.question.a11y_input_ariaErrormessage }),\n            counter));\n    };\n    SurveyQuestionText.prototype.renderElement = function () {\n        return (this.question.dataListId ?\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", null,\n                this.renderInput(),\n                this.renderDataList()) :\n            this.renderInput());\n    };\n    SurveyQuestionText.prototype.setValueCore = function (newValue) {\n        this.question.inputValue = newValue;\n    };\n    SurveyQuestionText.prototype.getValueCore = function () {\n        return this.question.inputValue;\n    };\n    SurveyQuestionText.prototype.renderDataList = function () {\n        if (!this.question.dataListId)\n            return null;\n        var items = this.question.dataList;\n        if (items.length == 0)\n            return null;\n        var options = [];\n        for (var i = 0; i < items.length; i++) {\n            options.push(react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"option\", { key: \"item\" + i, value: items[i] }));\n        }\n        return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"datalist\", { id: this.question.dataListId }, options);\n    };\n    return SurveyQuestionText;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_1__[\"SurveyQuestionUncontrolledElement\"]));\n\n_reactquestion_factory__WEBPACK_IMPORTED_MODULE_2__[\"ReactQuestionFactory\"].Instance.registerQuestion(\"text\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](SurveyQuestionText, props);\n});\n\n\n/***/ }),\n\n/***/ \"./src/react/reactsurveymodel.tsx\":\n/*!****************************************!*\\\n  !*** ./src/react/reactsurveymodel.tsx ***!\n  \\****************************************/\n/*! exports provided: ReactSurveyElementsWrapper */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_1007557__) {\n\n\"use strict\";\n__nested_webpack_require_1007557__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_1007557__.d(__nested_webpack_exports__, \"ReactSurveyElementsWrapper\", function() { return ReactSurveyElementsWrapper; });\n/* harmony import */ var survey_core__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_1007557__(/*! survey-core */ \"survey-core\");\n/* harmony import */ var survey_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_1007557__.n(survey_core__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _element_factory__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_1007557__(/*! ./element-factory */ \"./src/react/element-factory.tsx\");\n\n\nvar ReactSurveyElementsWrapper = /** @class */ (function () {\n    function ReactSurveyElementsWrapper() {\n    }\n    ReactSurveyElementsWrapper.wrapRow = function (survey, element, row) {\n        var componentName = survey.getRowWrapperComponentName(row);\n        var componentData = survey.getRowWrapperComponentData(row);\n        return _element_factory__WEBPACK_IMPORTED_MODULE_1__[\"ReactElementFactory\"].Instance.createElement(componentName, {\n            element: element,\n            row: row,\n            componentData: componentData,\n        });\n    };\n    ReactSurveyElementsWrapper.wrapElement = function (survey, element, question) {\n        var componentName = survey.getElementWrapperComponentName(question);\n        var componentData = survey.getElementWrapperComponentData(question);\n        return _element_factory__WEBPACK_IMPORTED_MODULE_1__[\"ReactElementFactory\"].Instance.createElement(componentName, {\n            element: element,\n            question: question,\n            componentData: componentData,\n        });\n    };\n    ReactSurveyElementsWrapper.wrapQuestionContent = function (survey, element, question) {\n        var componentName = survey.getQuestionContentWrapperComponentName(question);\n        var componentData = survey.getElementWrapperComponentData(question);\n        return _element_factory__WEBPACK_IMPORTED_MODULE_1__[\"ReactElementFactory\"].Instance.createElement(componentName, {\n            element: element,\n            question: question,\n            componentData: componentData,\n        });\n    };\n    ReactSurveyElementsWrapper.wrapItemValue = function (survey, element, question, item) {\n        var componentName = survey.getItemValueWrapperComponentName(item, question);\n        var componentData = survey.getItemValueWrapperComponentData(item, question);\n        return _element_factory__WEBPACK_IMPORTED_MODULE_1__[\"ReactElementFactory\"].Instance.createElement(componentName, {\n            key: element === null || element === void 0 ? void 0 : element.key,\n            element: element,\n            question: question,\n            item: item,\n            componentData: componentData,\n        });\n    };\n    ReactSurveyElementsWrapper.wrapMatrixCell = function (survey, element, cell, reason) {\n        if (reason === void 0) { reason = \"cell\"; }\n        var componentName = survey.getElementWrapperComponentName(cell, reason);\n        var componentData = survey.getElementWrapperComponentData(cell, reason);\n        return _element_factory__WEBPACK_IMPORTED_MODULE_1__[\"ReactElementFactory\"].Instance.createElement(componentName, {\n            element: element,\n            cell: cell,\n            componentData: componentData,\n        });\n    };\n    return ReactSurveyElementsWrapper;\n}());\n\nsurvey_core__WEBPACK_IMPORTED_MODULE_0__[\"SurveyModel\"].platform = \"react\";\n\n\n/***/ }),\n\n/***/ \"./src/react/reacttimerpanel.tsx\":\n/*!***************************************!*\\\n  !*** ./src/react/reacttimerpanel.tsx ***!\n  \\***************************************/\n/*! exports provided: SurveyTimerPanel */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_1011328__) {\n\n\"use strict\";\n__nested_webpack_require_1011328__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_1011328__.d(__nested_webpack_exports__, \"SurveyTimerPanel\", function() { return SurveyTimerPanel; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_1011328__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_1011328__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _components_svg_icon_svg_icon__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_1011328__(/*! ./components/svg-icon/svg-icon */ \"./src/react/components/svg-icon/svg-icon.tsx\");\n/* harmony import */ var _element_factory__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_1011328__(/*! ./element-factory */ \"./src/react/element-factory.tsx\");\n/* harmony import */ var _reactquestion_element__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_1011328__(/*! ./reactquestion_element */ \"./src/react/reactquestion_element.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\nvar SurveyTimerPanel = /** @class */ (function (_super) {\n    __extends(SurveyTimerPanel, _super);\n    function SurveyTimerPanel(props) {\n        var _this = _super.call(this, props) || this;\n        _this.circleLength = 440;\n        return _this;\n    }\n    SurveyTimerPanel.prototype.getStateElement = function () {\n        return this.timerModel;\n    };\n    Object.defineProperty(SurveyTimerPanel.prototype, \"timerModel\", {\n        get: function () {\n            return this.props.model;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyTimerPanel.prototype, \"progress\", {\n        get: function () {\n            return -this.timerModel.progress * this.circleLength;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyTimerPanel.prototype.render = function () {\n        if (!this.timerModel.isRunning) {\n            return null;\n        }\n        var result = react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.timerModel.survey.getCss().timerRoot }, this.timerModel.text);\n        if (this.timerModel.showTimerAsClock) {\n            var style = { strokeDasharray: this.circleLength, strokeDashoffset: this.progress };\n            var progress = (this.timerModel.showProgress ? react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_components_svg_icon_svg_icon__WEBPACK_IMPORTED_MODULE_1__[\"SvgIcon\"], { className: this.timerModel.getProgressCss(), style: style, iconName: \"icon-timercircle\", size: \"auto\" }) : null);\n            result =\n                (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.timerModel.rootCss },\n                    progress,\n                    react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.timerModel.textContainerCss },\n                        react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"span\", { className: this.timerModel.majorTextCss }, this.timerModel.clockMajorText),\n                        (this.timerModel.clockMinorText ? react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"span\", { className: this.timerModel.minorTextCss }, this.timerModel.clockMinorText) : null))));\n        }\n        return result;\n    };\n    return SurveyTimerPanel;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_3__[\"ReactSurveyElement\"]));\n\n_element_factory__WEBPACK_IMPORTED_MODULE_2__[\"ReactElementFactory\"].Instance.registerElement(\"sv-timerpanel\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](SurveyTimerPanel, props);\n});\n\n\n/***/ }),\n\n/***/ \"./src/react/row.tsx\":\n/*!***************************!*\\\n  !*** ./src/react/row.tsx ***!\n  \\***************************/\n/*! exports provided: SurveyRow */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_1015877__) {\n\n\"use strict\";\n__nested_webpack_require_1015877__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_1015877__.d(__nested_webpack_exports__, \"SurveyRow\", function() { return SurveyRow; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_1015877__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_1015877__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _reactquestion_element__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_1015877__(/*! ./reactquestion_element */ \"./src/react/reactquestion_element.tsx\");\n/* harmony import */ var _element__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_1015877__(/*! ./element */ \"./src/react/element.tsx\");\n/* harmony import */ var _element_factory__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_1015877__(/*! ./element-factory */ \"./src/react/element-factory.tsx\");\n/* harmony import */ var _reactsurveymodel__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_1015877__(/*! ./reactsurveymodel */ \"./src/react/reactsurveymodel.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\nvar SurveyRow = /** @class */ (function (_super) {\n    __extends(SurveyRow, _super);\n    function SurveyRow(props) {\n        var _this = _super.call(this, props) || this;\n        _this.rootRef = react__WEBPACK_IMPORTED_MODULE_0__[\"createRef\"]();\n        _this.recalculateCss();\n        return _this;\n    }\n    SurveyRow.prototype.recalculateCss = function () {\n        this.row.visibleElements.map(function (element) { return element.cssClasses; });\n    };\n    SurveyRow.prototype.getStateElement = function () {\n        return this.row;\n    };\n    Object.defineProperty(SurveyRow.prototype, \"row\", {\n        get: function () {\n            return this.props.row;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyRow.prototype, \"survey\", {\n        get: function () {\n            return this.props.survey;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyRow.prototype, \"creator\", {\n        get: function () {\n            return this.props.creator;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyRow.prototype, \"css\", {\n        get: function () {\n            return this.props.css;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyRow.prototype.canRender = function () {\n        return !!this.row && !!this.survey && !!this.creator;\n    };\n    SurveyRow.prototype.renderElementContent = function () {\n        var _this = this;\n        var elements = this.row.visibleElements.map(function (element, elementIndex) {\n            var index = elementIndex ? \"-\" + elementIndex : 0;\n            var key = element.name + index;\n            return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_element__WEBPACK_IMPORTED_MODULE_2__[\"SurveyRowElement\"], { element: element, index: elementIndex, row: _this.row, survey: _this.survey, creator: _this.creator, css: _this.css, key: key }));\n        });\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { ref: this.rootRef, className: this.row.getRowCss() }, elements));\n    };\n    SurveyRow.prototype.renderElement = function () {\n        var survey = this.survey;\n        var content = this.renderElementContent();\n        var wrapper = _reactsurveymodel__WEBPACK_IMPORTED_MODULE_4__[\"ReactSurveyElementsWrapper\"].wrapRow(survey, content, this.row);\n        return wrapper || content;\n    };\n    SurveyRow.prototype.componentDidMount = function () {\n        var _this = this;\n        _super.prototype.componentDidMount.call(this);\n        var el = this.rootRef.current;\n        if (this.rootRef.current) {\n            this.row.setRootElement(this.rootRef.current);\n        }\n        if (!!el && !this.row.isNeedRender) {\n            var rowContainerDiv = el;\n            setTimeout(function () {\n                _this.row.startLazyRendering(rowContainerDiv);\n            }, 10);\n        }\n    };\n    SurveyRow.prototype.shouldComponentUpdate = function (nextProps, nextState) {\n        if (!_super.prototype.shouldComponentUpdate.call(this, nextProps, nextState))\n            return false;\n        if (nextProps.row !== this.row) {\n            nextProps.row.isNeedRender = this.row.isNeedRender;\n            nextProps.row.setRootElement(this.rootRef.current);\n            this.row.setRootElement(undefined);\n            this.stopLazyRendering();\n        }\n        this.recalculateCss();\n        return true;\n    };\n    SurveyRow.prototype.stopLazyRendering = function () {\n        this.row.stopLazyRendering();\n        this.row.isNeedRender = !this.row.isLazyRendering();\n    };\n    SurveyRow.prototype.componentWillUnmount = function () {\n        _super.prototype.componentWillUnmount.call(this);\n        this.row.setRootElement(undefined);\n        this.stopLazyRendering();\n    };\n    SurveyRow.prototype.createElement = function (element, elementIndex) {\n        var index = elementIndex ? \"-\" + elementIndex : 0;\n        var elementType = element.getType();\n        if (!_element_factory__WEBPACK_IMPORTED_MODULE_3__[\"ReactElementFactory\"].Instance.isElementRegistered(elementType)) {\n            elementType = \"question\";\n        }\n        return _element_factory__WEBPACK_IMPORTED_MODULE_3__[\"ReactElementFactory\"].Instance.createElement(elementType, {\n            key: element.name + index,\n            element: element,\n            creator: this.creator,\n            survey: this.survey,\n            css: this.css,\n        });\n    };\n    return SurveyRow;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_1__[\"SurveyElementBase\"]));\n\n\n\n/***/ }),\n\n/***/ \"./src/react/signaturepad.tsx\":\n/*!************************************!*\\\n  !*** ./src/react/signaturepad.tsx ***!\n  \\************************************/\n/*! exports provided: SurveyQuestionSignaturePad */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_1022608__) {\n\n\"use strict\";\n__nested_webpack_require_1022608__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_1022608__.d(__nested_webpack_exports__, \"SurveyQuestionSignaturePad\", function() { return SurveyQuestionSignaturePad; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_1022608__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_1022608__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _reactquestion_element__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_1022608__(/*! ./reactquestion_element */ \"./src/react/reactquestion_element.tsx\");\n/* harmony import */ var _reactquestion_factory__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_1022608__(/*! ./reactquestion_factory */ \"./src/react/reactquestion_factory.tsx\");\n/* harmony import */ var _components_svg_icon_svg_icon__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_1022608__(/*! ./components/svg-icon/svg-icon */ \"./src/react/components/svg-icon/svg-icon.tsx\");\n/* harmony import */ var _components_loading_indicator__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_1022608__(/*! ./components/loading-indicator */ \"./src/react/components/loading-indicator.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\nvar SurveyQuestionSignaturePad = /** @class */ (function (_super) {\n    __extends(SurveyQuestionSignaturePad, _super);\n    function SurveyQuestionSignaturePad(props) {\n        var _this = _super.call(this, props) || this;\n        _this.state = { value: _this.question.value };\n        return _this;\n    }\n    Object.defineProperty(SurveyQuestionSignaturePad.prototype, \"question\", {\n        get: function () {\n            return this.questionBase;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionSignaturePad.prototype.renderElement = function () {\n        var _this = this;\n        var cssClasses = this.question.cssClasses;\n        var loadingIndicator = this.question.showLoadingIndicator ? this.renderLoadingIndicator() : null;\n        var clearButton = this.renderCleanButton();\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: cssClasses.root, ref: function (root) { return (_this.setControl(root)); }, style: { width: this.question.renderedCanvasWidth } },\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: cssClasses.placeholder, style: { display: this.question.needShowPlaceholder() ? \"\" : \"none\" } }, this.renderLocString(this.question.locPlaceholder)),\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", null,\n                this.renderBackgroundImage(),\n                react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"canvas\", { tabIndex: -1, className: this.question.cssClasses.canvas, onBlur: this.question.onBlur })),\n            clearButton,\n            loadingIndicator));\n    };\n    SurveyQuestionSignaturePad.prototype.renderBackgroundImage = function () {\n        if (!this.question.backgroundImage)\n            return null;\n        return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"img\", { className: this.question.cssClasses.backgroundImage, src: this.question.backgroundImage, style: { width: this.question.renderedCanvasWidth } });\n    };\n    SurveyQuestionSignaturePad.prototype.renderLoadingIndicator = function () {\n        return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.question.cssClasses.loadingIndicator },\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_components_loading_indicator__WEBPACK_IMPORTED_MODULE_4__[\"LoadingIndicatorComponent\"], null));\n    };\n    SurveyQuestionSignaturePad.prototype.renderCleanButton = function () {\n        var _this = this;\n        if (!this.question.canShowClearButton)\n            return null;\n        var cssClasses = this.question.cssClasses;\n        return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: cssClasses.controls },\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"button\", { type: \"button\", className: cssClasses.clearButton, title: this.question.clearButtonCaption, onClick: function () { return _this.question.clearValue(); } }, this.question.cssClasses.clearButtonIconId ? react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_components_svg_icon_svg_icon__WEBPACK_IMPORTED_MODULE_3__[\"SvgIcon\"], { iconName: this.question.cssClasses.clearButtonIconId, size: \"auto\" }) : react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"span\", null, \"\\u2716\")));\n    };\n    return SurveyQuestionSignaturePad;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_1__[\"SurveyQuestionElementBase\"]));\n\n_reactquestion_factory__WEBPACK_IMPORTED_MODULE_2__[\"ReactQuestionFactory\"].Instance.registerQuestion(\"signaturepad\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](SurveyQuestionSignaturePad, props);\n});\n\n\n/***/ }),\n\n/***/ \"./src/react/string-editor.tsx\":\n/*!*************************************!*\\\n  !*** ./src/react/string-editor.tsx ***!\n  \\*************************************/\n/*! exports provided: SurveyLocStringEditor */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_1028528__) {\n\n\"use strict\";\n__nested_webpack_require_1028528__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_1028528__.d(__nested_webpack_exports__, \"SurveyLocStringEditor\", function() { return SurveyLocStringEditor; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_1028528__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_1028528__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var survey_core__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_1028528__(/*! survey-core */ \"survey-core\");\n/* harmony import */ var survey_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__nested_webpack_require_1028528__.n(survey_core__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _element_factory__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_1028528__(/*! ./element-factory */ \"./src/react/element-factory.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar SurveyLocStringEditor = /** @class */ (function (_super) {\n    __extends(SurveyLocStringEditor, _super);\n    function SurveyLocStringEditor(props) {\n        var _this = _super.call(this, props) || this;\n        _this.onInput = function (event) {\n            _this.locStr.text = event.target.innerText;\n        };\n        _this.onClick = function (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        };\n        _this.state = { changed: 0 };\n        return _this;\n    }\n    Object.defineProperty(SurveyLocStringEditor.prototype, \"locStr\", {\n        get: function () {\n            return this.props.locStr;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyLocStringEditor.prototype, \"style\", {\n        get: function () {\n            return this.props.style;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyLocStringEditor.prototype.componentDidMount = function () {\n        if (!this.locStr)\n            return;\n        var self = this;\n        this.locStr.onChanged = function () {\n            self.setState({ changed: self.state.changed + 1 });\n        };\n    };\n    SurveyLocStringEditor.prototype.componentWillUnmount = function () {\n        if (!this.locStr)\n            return;\n        this.locStr.onChanged = function () { };\n    };\n    SurveyLocStringEditor.prototype.render = function () {\n        if (!this.locStr) {\n            return null;\n        }\n        if (this.locStr.hasHtml) {\n            var htmlValue = { __html: this.locStr.renderedHtml };\n            return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", { className: \"sv-string-editor\", contentEditable: \"true\", suppressContentEditableWarning: true, style: this.style, dangerouslySetInnerHTML: htmlValue, onBlur: this.onInput, onClick: this.onClick }));\n        }\n        return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", { className: \"sv-string-editor\", contentEditable: \"true\", suppressContentEditableWarning: true, style: this.style, onBlur: this.onInput, onClick: this.onClick }, this.locStr.renderedHtml));\n    };\n    return SurveyLocStringEditor;\n}(react__WEBPACK_IMPORTED_MODULE_0___default.a.Component));\n\n_element_factory__WEBPACK_IMPORTED_MODULE_2__[\"ReactElementFactory\"].Instance.registerElement(survey_core__WEBPACK_IMPORTED_MODULE_1__[\"LocalizableString\"].editableRenderer, function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(SurveyLocStringEditor, props);\n});\n\n\n/***/ }),\n\n/***/ \"./src/react/string-viewer.tsx\":\n/*!*************************************!*\\\n  !*** ./src/react/string-viewer.tsx ***!\n  \\*************************************/\n/*! exports provided: SurveyLocStringViewer */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_1033045__) {\n\n\"use strict\";\n__nested_webpack_require_1033045__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_1033045__.d(__nested_webpack_exports__, \"SurveyLocStringViewer\", function() { return SurveyLocStringViewer; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_1033045__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_1033045__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var survey_core__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_1033045__(/*! survey-core */ \"survey-core\");\n/* harmony import */ var survey_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__nested_webpack_require_1033045__.n(survey_core__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _element_factory__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_1033045__(/*! ./element-factory */ \"./src/react/element-factory.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar SurveyLocStringViewer = /** @class */ (function (_super) {\n    __extends(SurveyLocStringViewer, _super);\n    function SurveyLocStringViewer(props) {\n        var _this = _super.call(this, props) || this;\n        _this.onChangedHandler = function (sender, options) {\n            if (_this.isRendering)\n                return;\n            _this.setState({ changed: !!_this.state && _this.state.changed ? _this.state.changed + 1 : 1 });\n        };\n        _this.rootRef = react__WEBPACK_IMPORTED_MODULE_0___default.a.createRef();\n        return _this;\n    }\n    Object.defineProperty(SurveyLocStringViewer.prototype, \"locStr\", {\n        get: function () {\n            return this.props.locStr;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyLocStringViewer.prototype, \"style\", {\n        get: function () {\n            return this.props.style;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyLocStringViewer.prototype.componentDidMount = function () {\n        this.reactOnStrChanged();\n    };\n    SurveyLocStringViewer.prototype.componentWillUnmount = function () {\n        if (!this.locStr)\n            return;\n        this.locStr.onStringChanged.remove(this.onChangedHandler);\n    };\n    SurveyLocStringViewer.prototype.componentDidUpdate = function (prevProps, prevState) {\n        if (!!prevProps.locStr) {\n            prevProps.locStr.onStringChanged.remove(this.onChangedHandler);\n        }\n        this.reactOnStrChanged();\n    };\n    SurveyLocStringViewer.prototype.reactOnStrChanged = function () {\n        if (!this.locStr)\n            return;\n        this.locStr.onStringChanged.add(this.onChangedHandler);\n    };\n    SurveyLocStringViewer.prototype.render = function () {\n        if (!this.locStr)\n            return null;\n        this.isRendering = true;\n        var strEl = this.renderString();\n        this.isRendering = false;\n        return strEl;\n    };\n    SurveyLocStringViewer.prototype.renderString = function () {\n        var className = this.locStr.allowLineBreaks ? \"sv-string-viewer sv-string-viewer--multiline\" : \"sv-string-viewer\";\n        if (this.locStr.hasHtml) {\n            var htmlValue = { __html: this.locStr.renderedHtml };\n            return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", { ref: this.rootRef, className: className, style: this.style, dangerouslySetInnerHTML: htmlValue });\n        }\n        return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", { ref: this.rootRef, className: className, style: this.style }, this.locStr.renderedHtml);\n    };\n    return SurveyLocStringViewer;\n}(react__WEBPACK_IMPORTED_MODULE_0___default.a.Component));\n\n_element_factory__WEBPACK_IMPORTED_MODULE_2__[\"ReactElementFactory\"].Instance.registerElement(survey_core__WEBPACK_IMPORTED_MODULE_1__[\"LocalizableString\"].defaultRenderer, function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(SurveyLocStringViewer, props);\n});\n\n\n/***/ }),\n\n/***/ \"./src/react/svgbundle.tsx\":\n/*!*********************************!*\\\n  !*** ./src/react/svgbundle.tsx ***!\n  \\*********************************/\n/*! exports provided: SvgBundleComponent */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_1038002__) {\n\n\"use strict\";\n__nested_webpack_require_1038002__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_1038002__.d(__nested_webpack_exports__, \"SvgBundleComponent\", function() { return SvgBundleComponent; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_1038002__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_1038002__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var survey_core__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_1038002__(/*! survey-core */ \"survey-core\");\n/* harmony import */ var survey_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__nested_webpack_require_1038002__.n(survey_core__WEBPACK_IMPORTED_MODULE_1__);\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\nvar SvgBundleComponent = /** @class */ (function (_super) {\n    __extends(SvgBundleComponent, _super);\n    function SvgBundleComponent(props) {\n        var _this = _super.call(this, props) || this;\n        _this.containerRef = react__WEBPACK_IMPORTED_MODULE_0___default.a.createRef();\n        return _this;\n    }\n    SvgBundleComponent.prototype.componentDidMount = function () {\n        if (!!this.containerRef.current) {\n            this.containerRef.current.innerHTML = survey_core__WEBPACK_IMPORTED_MODULE_1__[\"SvgRegistry\"].iconsRenderedHtml();\n        }\n    };\n    SvgBundleComponent.prototype.render = function () {\n        var svgStyle = {\n            display: \"none\"\n        };\n        return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"svg\", { style: svgStyle, id: \"sv-icon-holder-global-container\", ref: this.containerRef });\n    };\n    return SvgBundleComponent;\n}(react__WEBPACK_IMPORTED_MODULE_0___default.a.Component));\n\n\n\n/***/ }),\n\n/***/ \"./src/react/tagbox-filter.tsx\":\n/*!*************************************!*\\\n  !*** ./src/react/tagbox-filter.tsx ***!\n  \\*************************************/\n/*! exports provided: TagboxFilterString */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_1040744__) {\n\n\"use strict\";\n__nested_webpack_require_1040744__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_1040744__.d(__nested_webpack_exports__, \"TagboxFilterString\", function() { return TagboxFilterString; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_1040744__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_1040744__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var survey_core__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_1040744__(/*! survey-core */ \"survey-core\");\n/* harmony import */ var survey_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__nested_webpack_require_1040744__.n(survey_core__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _reactquestion_factory__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_1040744__(/*! ./reactquestion_factory */ \"./src/react/reactquestion_factory.tsx\");\n/* harmony import */ var _reactquestion_element__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_1040744__(/*! ./reactquestion_element */ \"./src/react/reactquestion_element.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\nvar TagboxFilterString = /** @class */ (function (_super) {\n    __extends(TagboxFilterString, _super);\n    function TagboxFilterString(props) {\n        return _super.call(this, props) || this;\n    }\n    Object.defineProperty(TagboxFilterString.prototype, \"model\", {\n        get: function () {\n            return this.props.model;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TagboxFilterString.prototype, \"question\", {\n        get: function () {\n            return this.props.question;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    TagboxFilterString.prototype.componentDidUpdate = function (prevProps, prevState) {\n        _super.prototype.componentDidUpdate.call(this, prevProps, prevState);\n        this.updateDomElement();\n    };\n    TagboxFilterString.prototype.componentDidMount = function () {\n        _super.prototype.componentDidMount.call(this);\n        this.updateDomElement();\n    };\n    TagboxFilterString.prototype.updateDomElement = function () {\n        if (!!this.inputElement) {\n            var control = this.inputElement;\n            var newValue = this.model.inputStringRendered;\n            if (!survey_core__WEBPACK_IMPORTED_MODULE_1__[\"Helpers\"].isTwoValueEquals(newValue, control.value, false, true, false)) {\n                control.value = this.model.inputStringRendered;\n            }\n        }\n    };\n    TagboxFilterString.prototype.onChange = function (e) {\n        var root = survey_core__WEBPACK_IMPORTED_MODULE_1__[\"settings\"].environment.root;\n        if (e.target === root.activeElement) {\n            this.model.inputStringRendered = e.target.value;\n        }\n    };\n    TagboxFilterString.prototype.keyhandler = function (e) {\n        this.model.inputKeyHandler(e);\n    };\n    TagboxFilterString.prototype.onBlur = function (e) {\n        this.model.onBlur(e);\n    };\n    TagboxFilterString.prototype.onFocus = function (e) {\n        this.model.onFocus(e);\n    };\n    TagboxFilterString.prototype.getStateElement = function () {\n        return this.model;\n    };\n    TagboxFilterString.prototype.render = function () {\n        var _this = this;\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.question.cssClasses.hint },\n            this.model.showHintPrefix ?\n                (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.question.cssClasses.hintPrefix },\n                    react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"span\", null, this.model.hintStringPrefix))) : null,\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.question.cssClasses.hintSuffixWrapper },\n                this.model.showHintString ?\n                    (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.question.cssClasses.hintSuffix },\n                        react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"span\", { style: { visibility: \"hidden\" }, \"data-bind\": \"text: model.filterString\" }, this.model.inputStringRendered),\n                        react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"span\", null, this.model.hintStringSuffix))) : null,\n                react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"input\", { type: \"text\", autoComplete: \"off\", id: this.question.getInputId(), inputMode: this.model.inputMode, ref: function (element) { return (_this.inputElement = element); }, className: this.question.cssClasses.filterStringInput, disabled: this.question.isInputReadOnly, readOnly: this.model.filterReadOnly ? true : undefined, size: !this.model.inputStringRendered ? 1 : undefined, role: this.model.filterStringEnabled ? this.question.ariaRole : undefined, \"aria-expanded\": this.question.ariaExpanded === null ? undefined : this.question.ariaExpanded === \"true\", \"aria-label\": this.question.a11y_input_ariaLabel, \"aria-labelledby\": this.question.a11y_input_ariaLabelledBy, \"aria-describedby\": this.question.a11y_input_ariaDescribedBy, \"aria-controls\": this.model.listElementId, \"aria-activedescendant\": this.model.ariaActivedescendant, placeholder: this.model.filterStringPlaceholder, onKeyDown: function (e) { _this.keyhandler(e); }, onChange: function (e) { _this.onChange(e); }, onBlur: function (e) { _this.onBlur(e); }, onFocus: function (e) { _this.onFocus(e); } }))));\n    };\n    return TagboxFilterString;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_3__[\"SurveyElementBase\"]));\n\n_reactquestion_factory__WEBPACK_IMPORTED_MODULE_2__[\"ReactQuestionFactory\"].Instance.registerQuestion(\"sv-tagbox-filter\", function (props) {\n    return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](TagboxFilterString, props);\n});\n\n\n/***/ }),\n\n/***/ \"./src/react/tagbox-item.tsx\":\n/*!***********************************!*\\\n  !*** ./src/react/tagbox-item.tsx ***!\n  \\***********************************/\n/*! exports provided: SurveyQuestionTagboxItem */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_1047590__) {\n\n\"use strict\";\n__nested_webpack_require_1047590__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_1047590__.d(__nested_webpack_exports__, \"SurveyQuestionTagboxItem\", function() { return SurveyQuestionTagboxItem; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_1047590__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_1047590__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _reactquestion_element__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_1047590__(/*! ./reactquestion_element */ \"./src/react/reactquestion_element.tsx\");\n/* harmony import */ var _components_svg_icon_svg_icon__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_1047590__(/*! ./components/svg-icon/svg-icon */ \"./src/react/components/svg-icon/svg-icon.tsx\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar SurveyQuestionTagboxItem = /** @class */ (function (_super) {\n    __extends(SurveyQuestionTagboxItem, _super);\n    function SurveyQuestionTagboxItem(props) {\n        return _super.call(this, props) || this;\n    }\n    Object.defineProperty(SurveyQuestionTagboxItem.prototype, \"question\", {\n        get: function () {\n            return this.props.question;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyQuestionTagboxItem.prototype, \"item\", {\n        get: function () {\n            return this.props.item;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyQuestionTagboxItem.prototype.canRender = function () {\n        return !!this.item && !!this.question;\n    };\n    SurveyQuestionTagboxItem.prototype.renderElement = function () {\n        var _this = this;\n        var text = this.renderLocString(this.item.locText);\n        var removeItem = function (event) {\n            _this.question.dropdownListModel.deselectItem(_this.item.value);\n            event.stopPropagation();\n        };\n        return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: \"sv-tagbox__item\" },\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: \"sv-tagbox__item-text\" }, text),\n            react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: this.question.cssClasses.cleanItemButton, onClick: removeItem },\n                react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](_components_svg_icon_svg_icon__WEBPACK_IMPORTED_MODULE_2__[\"SvgIcon\"], { className: this.question.cssClasses.cleanItemButtonSvg, iconName: this.question.cssClasses.cleanItemButtonIconId, size: \"auto\" }))));\n    };\n    return SurveyQuestionTagboxItem;\n}(_reactquestion_element__WEBPACK_IMPORTED_MODULE_1__[\"ReactSurveyElement\"]));\n\n\n\n/***/ }),\n\n/***/ \"./src/settings.ts\":\n/*!*************************!*\\\n  !*** ./src/settings.ts ***!\n  \\*************************/\n/*! exports provided: settings */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_1051281__) {\n\n\"use strict\";\n__nested_webpack_require_1051281__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_1051281__.d(__nested_webpack_exports__, \"settings\", function() { return settings; });\n/* harmony import */ var _global_variables_utils__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_1051281__(/*! ./global_variables_utils */ \"./src/global_variables_utils.ts\");\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_1051281__(/*! ./utils/utils */ \"./src/utils/utils.ts\");\n\n\nvar document = typeof globalThis !== \"undefined\" ? globalThis.document : undefined.document;\nvar defaultEnvironment = (!!document ? {\n    root: document,\n    _rootElement: _global_variables_utils__WEBPACK_IMPORTED_MODULE_0__[\"DomDocumentHelper\"].getBody(),\n    get rootElement() {\n        var _a;\n        return (_a = this._rootElement) !== null && _a !== void 0 ? _a : _global_variables_utils__WEBPACK_IMPORTED_MODULE_0__[\"DomDocumentHelper\"].getBody();\n    },\n    set rootElement(rootElement) {\n        this._rootElement = rootElement;\n    },\n    _popupMountContainer: _global_variables_utils__WEBPACK_IMPORTED_MODULE_0__[\"DomDocumentHelper\"].getBody(),\n    get popupMountContainer() {\n        var _a;\n        return (_a = this._popupMountContainer) !== null && _a !== void 0 ? _a : _global_variables_utils__WEBPACK_IMPORTED_MODULE_0__[\"DomDocumentHelper\"].getBody();\n    },\n    set popupMountContainer(popupMountContainer) {\n        this._popupMountContainer = popupMountContainer;\n    },\n    svgMountContainer: document.head,\n    stylesSheetsMountContainer: document.head,\n} : undefined);\nvar columnWidthsByType = {\n    \"file\": { minWidth: \"240px\" },\n    \"comment\": { minWidth: \"200px\" }\n};\n/**\n * Global settings that apply to all surveys on the page. To specify one of the settings, use the code below:\n *\n * ```js\n * import { settings } from \"survey-core\";\n *\n * settings.settingName = \"value\";\n * ```\n */\nvar settings = {\n    /**\n     * An object that configures survey appearance when the survey is being designed in Survey Creator.\n     *\n     * Nested properties:\n     *\n     * - `showEmptyDescriptions`: `boolean`\\\n     * Specifies whether to display an empty description for pages and panels. Default value: `true`.\n     *\n     * - `showEmptyTitles`: `boolean`\\\n     * Specifies whether to display an empty title for pages and panels. Default value: `true`.\n     */\n    designMode: {\n        showEmptyDescriptions: true,\n        showEmptyTitles: true\n    },\n    //#region designMode section, Obsolete properties\n    get allowShowEmptyDescriptionInDesignMode() { return this.designMode.showEmptyDescriptions; },\n    set allowShowEmptyDescriptionInDesignMode(val) { this.designMode.showEmptyDescriptions = val; },\n    get allowShowEmptyTitleInDesignMode() { return this.designMode.showEmptyTitles; },\n    set allowShowEmptyTitleInDesignMode(val) { this.designMode.showEmptyTitles = val; },\n    //#endregion\n    /**\n     * An object that contains properties related to localization.\n     *\n     * Nested properties:\n     *\n     * - `useLocalTimeZone`: `boolean`\\\n     * Disable this property if you want internal SurveyJS functions to use methods that work with UTC date and time (`setUTCDate()` `setUTCHours()`, etc.) instead of methods that work with local date and time (`setYear()`, `setHours()`, etc.). Default value: `true`.\n     *\n     * - `defaultLocaleName`: `string`\\\n     * A property key that stores a translation for the default locale. Default value: `\"default\"`.\n     *\n     * - `storeDuplicatedTranslations`: `boolean`\\\n     * Specifies whether surveys should store translation strings that equal the translation strings in the default locale. Default value: `false`.\n     */\n    localization: {\n        useLocalTimeZone: true,\n        storeDuplicatedTranslations: false,\n        defaultLocaleName: \"default\"\n    },\n    //#region localization section, obsolete properties\n    get useLocalTimeZone() { return this.localization.useLocalTimeZone; },\n    set useLocalTimeZone(val) { this.localization.useLocalTimeZone = val; },\n    get storeDuplicatedTranslations() { return this.localization.storeDuplicatedTranslations; },\n    set storeDuplicatedTranslations(val) { this.localization.storeDuplicatedTranslations = val; },\n    get defaultLocaleName() { return this.localization.defaultLocaleName; },\n    set defaultLocaleName(val) { this.localization.defaultLocaleName = val; },\n    //#endregion\n    /**\n     * An object with properties that configure surveys when they work with a web service.\n     *\n     * Nested properties:\n     *\n     * - `encodeUrlParams`: `boolean`\\\n     * Specifies whether to encode URL parameters when you access a web service. Default value: `true`.\n     *\n     * - `cacheLoadedChoices`: `boolean`\\\n     * Specifies whether to cache [choices loaded from a web service](https://surveyjs.io/form-library/documentation/api-reference/questionselectbase#choicesByUrl). Default value: `true`.\n     *\n     * - `disableQuestionWhileLoadingChoices`: `boolean`\\\n     * Disables a question while its choices are being loaded from a web service. Default value: `false`.\n     *\n     * - `surveyServiceUrl`: `string`\\\n     * The URL of the SurveyJS Service API endpoint.\n     *\n     * - `onBeforeRequestChoices`: `(sender: ChoicesRestful, options: { request: XMLHttpRequest })`\\\n     * An event that is raised before a request for choices is send. Applies to questions with a specified [`choiceByUrl`](https://surveyjs.io/form-library/documentation/api-reference/questionselectbase#choicesByUrl) property. Use the `options.request` parameter to access and modify the `XMLHttpRequest` object. For instance, you can add authentication headers to it:\n     *\n     *     ```js\n     *     import { settings } from \"survey-core\";\n     *\n     *     settings.web.onBeforeSendRequest = (sender, options) => {\n     *       options.request.setRequestHeader('RequestVerificationToken', requestVerificationToken);\n     *     };\n     *     ```\n     */\n    web: {\n        onBeforeRequestChoices: function (sender, options) { },\n        encodeUrlParams: true,\n        cacheLoadedChoices: true,\n        disableQuestionWhileLoadingChoices: false,\n        surveyServiceUrl: \"https://api.surveyjs.io/public/v1/Survey\"\n    },\n    //#region web section, obsolete properties\n    get webserviceEncodeParameters() { return this.web.encodeUrlParams; },\n    set webserviceEncodeParameters(val) { this.web.encodeUrlParams = val; },\n    get useCachingForChoicesRestful() { return this.web.cacheLoadedChoices; },\n    set useCachingForChoicesRestful(val) { this.web.cacheLoadedChoices = val; },\n    get useCachingForChoicesRestfull() { return this.web.cacheLoadedChoices; },\n    set useCachingForChoicesRestfull(val) { this.web.cacheLoadedChoices = val; },\n    get disableOnGettingChoicesFromWeb() { return this.web.disableQuestionWhileLoadingChoices; },\n    set disableOnGettingChoicesFromWeb(val) { this.web.disableQuestionWhileLoadingChoices = val; },\n    get surveyServiceUrl() { return this.web.surveyServiceUrl; },\n    set surveyServiceUrl(val) { this.web.surveyServiceUrl = val; },\n    //#endregion\n    /**\n     * An object that contains properties related to [triggers](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#conditional-survey-logic-triggers).\n     *\n     * Nested properties:\n     *\n     * - `changeNavigationButtonsOnComplete`: `boolean`\\\n     * Specifies whether to re-evaluate an expression associated with the [Complete trigger](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#complete) immediately when a question value changes. If the expression evaluates to `true`, the trigger is executed. Default value: `false`.\\\n     * Keep this property set to `false` if you want to re-evaluate the Complete trigger's expression only when the respondents navigate to another page.\n     *\n     * - `executeCompleteOnValueChanged`: `boolean`\\\n     * Specifies whether to replace the Next button with the Complete button when the [Complete trigger](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#complete) is going to be executed. Default value: `true`.\n     *\n     * - `executeSkipOnValueChanged`: `boolean`\\\n     * Specifies whether to re-evaluate an expression associated with the [Skip trigger](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#skip) immediately when a question value changes. If the expression evaluates to `true`, the trigger is executed. Default value: `true`.\\\n     * Disable this property if you want to re-evaluate the Skip trigger's expression only when respondents navigate to another page.\n     */\n    triggers: {\n        changeNavigationButtonsOnComplete: true,\n        executeCompleteOnValueChanged: false,\n        executeSkipOnValueChanged: true\n    },\n    //#region triggers section, Obsolete properties\n    get executeCompleteTriggerOnValueChanged() { return this.triggers.executeCompleteOnValueChanged; },\n    set executeCompleteTriggerOnValueChanged(val) { this.triggers.executeCompleteOnValueChanged = val; },\n    get changeNavigationButtonsOnCompleteTrigger() { return this.triggers.changeNavigationButtonsOnComplete; },\n    set changeNavigationButtonsOnCompleteTrigger(val) { this.triggers.changeNavigationButtonsOnComplete = val; },\n    get executeSkipTriggerOnValueChanged() { return this.triggers.executeSkipOnValueChanged; },\n    set executeSkipTriggerOnValueChanged(val) { this.triggers.executeSkipOnValueChanged = val; },\n    //#endregion\n    /**\n     * An object that contains properties related to JSON serialization.\n     *\n     * Nested properties:\n     *\n     * - `itemValueSerializeAsObject`: `boolean`\\\n     * Enable this property if you want to serialize [`ItemValue`](https://surveyjs.io/form-library/documentation/api-reference/itemvalue) instances as objects even when they include only the `value` property. Default value: `false`. View an example below.\n     *\n     * - `itemValueSerializeDisplayText`: `boolean`\\\n     * Enable this property if you want to serialize the `text` property of [`ItemValue`](https://surveyjs.io/form-library/documentation/api-reference/itemvalue) objects even when it is empty or equal to the `value` property. Default value: `false`. View an example below.\n     *\n     * - `localizableStringSerializeAsObject`: `boolean`\\\n     * Enable this property if you want to serialize [`LocalizableString`](https://surveyjs.io/form-library/documentation/api-reference/localizablestring) instances as objects even when they include only a translation string for the default locale. For example, `\"Custom String\"` will be serialized as `{ default: \"Custom String\" }`. Default value: `false`.\n     *\n     * ```js\n     * import { ItemValue, settings } from \"survey-core\";\n     *\n     * // `itemValueSerializeAsObject` example\n     * settings.serialization.itemValueSerializeAsObject = true;\n     * const item = new ItemValue(5);\n     * const itemString = item.toJSON(); // Produces { value: 5 } instead of 5\n     *\n     * // `itemValueSerializeDisplayText` example\n     * settings.serialization.itemValueSerializeDisplayText = true;\n     * const item = new ItemValue(\"item1\");\n     * const itemString = item.toJSON(); // Produces { value: \"item1\", text: \"item1\" } instead of \"item1\"\n     * ```\n     */\n    serialization: {\n        itemValueSerializeAsObject: false,\n        itemValueSerializeDisplayText: false,\n        localizableStringSerializeAsObject: false\n    },\n    //#region serialization section, Obsolete properties\n    get itemValueAlwaysSerializeAsObject() { return this.serialization.itemValueSerializeAsObject; },\n    set itemValueAlwaysSerializeAsObject(val) { this.serialization.itemValueSerializeAsObject = val; },\n    get itemValueAlwaysSerializeText() { return this.serialization.itemValueSerializeDisplayText; },\n    set itemValueAlwaysSerializeText(val) { this.serialization.itemValueSerializeDisplayText = val; },\n    get serializeLocalizableStringAsObject() { return this.serialization.localizableStringSerializeAsObject; },\n    set serializeLocalizableStringAsObject(val) { this.serialization.localizableStringSerializeAsObject = val; },\n    //#endregion\n    /**\n     * An object that configures lazy rendering.\n     *\n     * Nested properties:\n     *\n     * - `enabled`: `boolean`\\\n     * Specifies whether to add questions to the DOM only when they get into the viewport. Default value: `false`.\n     *\n     * [View Demo](https://surveyjs.io/form-library/examples/survey-lazy/ (linkStyle))\n     * @see [SurveyModel.lazyRendering](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#lazyRendering)\n     */\n    lazyRender: {\n        enabled: false,\n        firstBatchSize: 3\n    },\n    //#region lazyRender section, Obsolete properties\n    get lazyRowsRendering() { return this.lazyRender.enabled; },\n    set lazyRowsRendering(val) { this.lazyRender.enabled = val; },\n    get lazyRowsRenderingStartRow() { return this.lazyRender.firstBatchSize; },\n    set lazyRowsRenderingStartRow(val) { this.lazyRender.firstBatchSize = val; },\n    //#endregion\n    /**\n     * An object with properties that apply to [Single-Choice](https://surveyjs.io/form-library/documentation/api-reference/matrix-table-question-model), [Multiple-Choice](https://surveyjs.io/form-library/documentation/api-reference/matrix-table-with-dropdown-list), and [Dynamic Matrix](https://surveyjs.io/form-library/documentation/api-reference/dynamic-matrix-table-question-model) questions.\n     *\n     * Nested properties:\n     *\n     * - `defaultRowName`: `string`\\\n     * A property key that stores an object with default cell values. Default value: \"default\".\n     *\n     * - `defaultCellType`: `string`\\\n     * The default type of matrix cells. Default value: `\"dropdown\"`.\\\n     * You can specify this setting for individual questions or matrix columns: [`cellType`](https://surveyjs.io/form-library/documentation/api-reference/dynamic-matrix-table-question-model#cellType). Refer to the `cellType` property description for information on possible values.\n     *\n     * - `totalsSuffix`: `string`\\\n     * A suffix added to the name of the property that stores total values. The resulting property name consists of the matrix name and the suffix. Default value: `\"-total\"`.\n     *\n     * - `maxRowCount`: `number`\\\n     * A maximum number of rows in a Dynamic Matrix. Default value: 1000.\\\n     * You can specify this setting for an individual Dynamic Matrix: [`maxRowCount`](https://surveyjs.io/form-library/documentation/api-reference/dynamic-matrix-table-question-model#maxRowCount).\n     *\n     * - `maxRowCountInCondition`: `number`\\\n     * A maximum number of matrix rows included in the Condition drop-down menu in Survey Creator. This menu is used to configure conditional survey logic. Default value: 1.\\\n     * If you set this property to 0, the Condition menu does not include any matrix rows. Users still can specify conditions that use matrix rows but only with Manual Entry.\n     *\n     * - `renderRemoveAsIcon`: `boolean`\\\n     * Disable this property if you want to render the Remove action in Dynamic Matrix as a button. Otherwise, the action is rendered as an icon. Default value: `true`.\n     *\n     * - `columnWidthsByType`: `object`\\\n     * An object that specifies fixed and minimum column width based on the column type.\\\n     * Example: `settings.matrix.columnWidthsByType = { \"tagbox\": { minWidth: \"240px\", width: \"300px\" } }`\n     *\n     * - `rateSize`: `\"small\"` (default) | `\"normal\"`\\\n     * Specifies the size of rate values. Applies to [Rating Scale](https://surveyjs.io/form-library/examples/rating-scale/) questions within matrixes.\n     */\n    matrix: {\n        defaultCellType: \"dropdown\",\n        defaultRowName: \"default\",\n        totalsSuffix: \"-total\",\n        maxRowCount: 1000,\n        maxRowCountInCondition: 1,\n        renderRemoveAsIcon: true,\n        columnWidthsByType: columnWidthsByType,\n        rateSize: \"small\",\n    },\n    //#region matrix section, Obsolete properties\n    get matrixDefaultRowName() { return this.matrix.defaultRowName; },\n    set matrixDefaultRowName(val) { this.matrix.defaultRowName = val; },\n    get matrixDefaultCellType() { return this.matrix.defaultCellType; },\n    set matrixDefaultCellType(val) { this.matrix.defaultCellType = val; },\n    get matrixTotalValuePostFix() { return this.matrix.totalsSuffix; },\n    set matrixTotalValuePostFix(val) { this.matrix.totalsSuffix = val; },\n    get matrixMaximumRowCount() { return this.matrix.maxRowCount; },\n    set matrixMaximumRowCount(val) { this.matrix.maxRowCount = val; },\n    get matrixMaxRowCountInCondition() { return this.matrix.maxRowCountInCondition; },\n    set matrixMaxRowCountInCondition(val) { this.matrix.maxRowCountInCondition = val; },\n    get matrixRenderRemoveAsIcon() { return this.matrix.renderRemoveAsIcon; },\n    set matrixRenderRemoveAsIcon(val) { this.matrix.renderRemoveAsIcon = val; },\n    //#endregion\n    /**\n     * An object with properties that apply to [Dynamic Panel](https://surveyjs.io/form-library/documentation/api-reference/dynamic-panel-model) questions.\n     *\n     * Nested properties:\n     *\n     * - `maxPanelCount`: `number`\\\n     * A maximum number of panels in Dynamic Panel. Default value: 100.\\\n     * You can specify this setting for an individual Dynamic Panel: [`maxPanelCount`](https://surveyjs.io/form-library/documentation/api-reference/dynamic-panel-model#maxPanelCount).\n     *\n     * - `maxPanelCountInCondition`: `number`\\\n     * A maximum number of Dynamic Panel panels included in the Condition drop-down menu in Survey Creator. This menu is used to configure conditional survey logic. Default value: 1.\\\n     * If you set this property to 0, the Condition menu does not include any panel questions. Users still can specify conditions that use panel questions but only with Manual Entry.\n     */\n    panel: {\n        maxPanelCount: 100,\n        maxPanelCountInCondition: 1\n    },\n    //#region panel section, Obsolete properties\n    get panelDynamicMaxPanelCountInCondition() { return this.panel.maxPanelCountInCondition; },\n    set panelDynamicMaxPanelCountInCondition(val) { this.panel.maxPanelCountInCondition = val; },\n    get panelMaximumPanelCount() { return this.panel.maxPanelCount; },\n    set panelMaximumPanelCount(val) { this.panel.maxPanelCount = val; },\n    //#endregion\n    /**\n     * An object with properties that configure questions in read-only mode.\n     *\n     * Nested properties:\n     *\n     * - `commentRenderMode`: `\"textarea\"` (default) | `\"div\"`\\\n     * Specifies how to render the input field of [Comment](https://surveyjs.io/form-library/documentation/api-reference/comment-field-model) questions in [read-only](https://surveyjs.io/form-library/documentation/api-reference/comment-field-model#readOnly) mode: as a disabled `<textarea>` element or as a `<div>` element with a non-editable question value within it.\n     *\n     * - `textRenderMode`: `\"input\"` (default) | `\"div\"`\\\n     * Specifies how to render the input field of [Text](https://surveyjs.io/form-library/documentation/api-reference/text-entry-question-model) questions in [read-only](https://surveyjs.io/form-library/documentation/api-reference/text-entry-question-model#readOnly) mode: as a disabled `<input>` element or as a `<div>` element with a non-editable question value within it.\n     */\n    readOnly: {\n        enableValidation: false,\n        commentRenderMode: \"textarea\",\n        textRenderMode: \"input\"\n    },\n    //#region readOnly section, Obsolete properties\n    get readOnlyCommentRenderMode() { return this.readOnly.commentRenderMode; },\n    set readOnlyCommentRenderMode(val) { this.readOnly.commentRenderMode = val; },\n    get readOnlyTextRenderMode() { return this.readOnly.textRenderMode; },\n    set readOnlyTextRenderMode(val) { this.readOnly.textRenderMode = val; },\n    //#endregion\n    /**\n     * An object with properties that configure question numbering.\n     *\n     * Nested properties:\n     *\n     * - `includeQuestionsWithHiddenNumber`: `boolean`\\\n     * Specifies whether to number questions whose [`hideNumber`](https://surveyjs.io/form-library/documentation/api-reference/question#hideNumber) property is enabled. Default value: `false`.\n     *\n     * - `includeQuestionsWithHiddenTitle`: `boolean`\\\n     * Specifies whether to number questions whose [`titleLocation`](https://surveyjs.io/form-library/documentation/api-reference/question#titleLocation) property is set to `\"hidden\"`. Default value: `false`.\n     */\n    numbering: {\n        includeQuestionsWithHiddenNumber: false,\n        includeQuestionsWithHiddenTitle: false\n    },\n    //#region numbering section, Obsolete properties\n    get setQuestionVisibleIndexForHiddenTitle() { return this.numbering.includeQuestionsWithHiddenTitle; },\n    set setQuestionVisibleIndexForHiddenTitle(val) { this.numbering.includeQuestionsWithHiddenTitle = val; },\n    get setQuestionVisibleIndexForHiddenNumber() { return this.numbering.includeQuestionsWithHiddenNumber; },\n    set setQuestionVisibleIndexForHiddenNumber(val) { this.numbering.includeQuestionsWithHiddenNumber = val; },\n    //#endregion\n    /**\n     * Specifies an action to perform when users press the Enter key within a survey.\n     *\n     * Possible values:\n     *\n     * - `\"moveToNextEditor\"` - Moves focus to the next editor.\n     * - `\"loseFocus\"` - Removes focus from the current editor.\n     * - `\"default\"` - Behaves as a standard `<input>` element.\n     */\n    enterKeyAction: \"default\",\n    /**\n     * An object that configures string comparison.\n     *\n     * Nested properties:\n     *\n     * - `trimStrings`: `boolean`\\\n     * Specifies whether to remove whitespace from both ends of a string before the comparison. Default value: `true`.\n     *\n     * - `caseSensitive`: `boolean`\\\n     * Specifies whether to differentiate between capital and lower-case letters. Default value: `false`.\n     */\n    comparator: {\n        trimStrings: true,\n        caseSensitive: false,\n        normalizeTextCallback: function (str, reason) { return str; }\n    },\n    expressionDisableConversionChar: \"#\",\n    get commentPrefix() { return settings.commentSuffix; },\n    set commentPrefix(val) { settings.commentSuffix = val; },\n    /**\n     * A suffix added to the name of the property that stores comments.\n     *\n     * Default value: \"-Comment\"\n     *\n     * You can specify this setting for an individual survey: [`commentSuffix`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#commentSuffix).\n     */\n    commentSuffix: \"-Comment\",\n    /**\n     * A separator used in a shorthand notation that specifies a value and display text for an [`ItemValue`](https://surveyjs.io/form-library/documentation/api-reference/itemvalue) object: `\"value|text\"`.\n     *\n     * Default value: `\"|\"`\n     */\n    itemValueSeparator: \"|\",\n    /**\n     * A maximum number of rate values in a [Rating](https://surveyjs.io/form-library/documentation/api-reference/rating-scale-question-model) question.\n     *\n     * Default value: 20\n     */\n    ratingMaximumRateValueCount: 20,\n    /**\n     * Specifies whether to close the drop-down menu of a [TagBox](https://surveyjs.io/form-library/examples/how-to-create-multiselect-tag-box/) question after a user selects a value.\n     *\n     * This setting applies to all TagBox questions on a page. You can use the [closeOnSelect](https://surveyjs.io/form-library/documentation/api-reference/dropdown-tag-box-model#closeOnSelect) property to specify the same setting for an individual TagBox question.\n     */\n    tagboxCloseOnSelect: false,\n    /**\n     * A function that activates a browser confirm dialog.\n     *\n     * Use the following code to execute this function:\n     *\n     * ```js\n     * import { settings } from \"survey-core\";\n     *\n     * // `result` contains `true` if the action was confirmed or `false` otherwise\n     * const result = settings.confirmActionFunc(\"Are you sure?\");\n     * ```\n     *\n     * You can redefine the `confirmActionFunc` function if you want to display a custom dialog window. Your function should return `true` if a user confirms an action or `false` otherwise.\n     * @param message A message to be displayed in the confirm dialog window.\n     */\n    confirmActionFunc: function (message) {\n        return confirm(message);\n    },\n    /**\n     * A function that activates a proprietary SurveyJS confirm dialog.\n     *\n     * Use the following code to execute this function:\n     *\n     * ```js\n     * import { settings } from \"survey-core\";\n     *\n     * settings.confirmActionAsync(\"Are you sure?\", (confirmed) => {\n     *   if (confirmed) {\n     *     // ...\n     *     // Proceed with the action\n     *     // ...\n     *   } else {\n     *     // ...\n     *     // Cancel the action\n     *     // ...\n     *   }\n     * });\n     * ```\n     *\n     * You can redefine the `confirmActionAsync` function if you want to display a custom dialog window. Your function should return `true` to be enabled; otherwise, a survey executes the [`confirmActionFunc`](#confirmActionFunc) function. Pass the dialog result as the `callback` parameter: `true` if a user confirms an action, `false` otherwise.\n     * @param message A message to be displayed in the confirm dialog window.\n     * @param callback A callback function that should be called with `true` if a user confirms an action or `false` otherwise.\n     */\n    confirmActionAsync: function (message, callback, applyTitle, locale, rootElement) {\n        return Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"showConfirmDialog\"])(message, callback, applyTitle, locale, rootElement);\n    },\n    /**\n     * A minimum width value for all survey elements.\n     *\n     * Default value: `\"300px\"`\n     *\n     * You can override this setting for individual elements: [`minWidth`](https://surveyjs.io/form-library/documentation/api-reference/surveyelement#minWidth).\n     */\n    minWidth: \"300px\",\n    /**\n     * A maximum width value for all survey elements.\n     *\n     * Default value: `\"100%\"`\n     *\n     * You can override this setting for individual elements: [`maxWidth`](https://surveyjs.io/form-library/documentation/api-reference/surveyelement#maxWidth).\n     */\n    maxWidth: \"100%\",\n    /**\n     * Specifies how many times surveys can re-evaluate expressions when a question value changes. This limit helps avoid recursions in expressions.\n     *\n     * Default value: 10\n     */\n    maxConditionRunCountOnValueChanged: 10,\n    /**\n     * An object that configures notifications.\n     *\n     * Nested properties:\n     *\n     * - `lifetime`: `number`\\\n     * Specifies a time period during which a notification is displayed; measured in milliseconds.\n     */\n    notifications: {\n        lifetime: 2000\n    },\n    /**\n     * Specifies how many milliseconds a survey should wait before it automatically switches to the next page. Applies only when [auto-advance](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#goNextPageAutomatic) is enabled.\n     *\n     * Default value: 300\n     */\n    autoAdvanceDelay: 300,\n    /**\n     * Specifies the direction in which to lay out Checkbox and Radiogroup items. This setting affects the resulting UI when items are arranged in [more than one column](https://surveyjs.io/form-library/documentation/api-reference/checkbox-question-model#colCount).\n     *\n     * Possible values:\n     *\n     * - `\"row\"` (default) - Items fill the current row, then move on to the next row.\n     * - `\"column\"` - Items fill the current column, then move on to the next column.\n     */\n    showItemsInOrder: \"default\",\n    /**\n     * A value to save in survey results when respondents select the \"None\" choice item.\n     *\n     * Default value: `\"none\"`\n     */\n    noneItemValue: \"none\",\n    /**\n     * A value to save in survey results when respondents select the \"Refuse to answer\" choice item.\n     *\n     * Default value: `\"refused\"`\n     */\n    refuseItemValue: \"refused\",\n    /**\n     * A value to save in survey results when respondents select the \"Don't know\" choice item.\n     *\n     * Default value: `\"dontknow\"`\n     */\n    dontKnowItemValue: \"dontknow\",\n    /**\n     * An object whose properties specify the order of the special choice items (\"None\", \"Other\", \"Select All\", \"Refuse to answer\", \"Don't know\") in select-based questions.\n     *\n     * Default value: `{ selectAllItem: [-1], noneItem: [1], otherItem: [2], dontKnowItem: [3], otherItem: [4] }`\n     *\n     * Use this object to reorder special choices. Each property accepts an array of integer numbers. Negative numbers place a special choice item above regular choice items, positive numbers place it below them. For instance, the code below specifies the following order of choices: None, Select All, regular choices, Other.\n     *\n     * ```js\n     * import { settings } from \"survey-core\";\n     *\n     * settings.specialChoicesOrder.noneItem = [-2];\n     * settings.specialChoicesOrder.selectAllItem = [-1];\n     * settings.specialChoicesOrder.otherItem = [1];\n     * ```\n     *\n     * If you want to duplicate a special choice item above and below other choices, add two numbers to the corresponding array:\n     *\n     * ```js\n     * settings.specialChoicesOrder.selectAllItem = [-1, 3] // Displays Select All above and below other choices\n     * ```\n     */\n    specialChoicesOrder: {\n        selectAllItem: [-1],\n        noneItem: [1],\n        refuseItem: [2],\n        dontKnowItem: [3],\n        otherItem: [4]\n    },\n    /**\n     * A list of supported validators by question type.\n     */\n    supportedValidators: {\n        question: [\"expression\"],\n        comment: [\"text\", \"regex\"],\n        text: [\"numeric\", \"text\", \"regex\", \"email\"],\n        checkbox: [\"answercount\"],\n        imagepicker: [\"answercount\"],\n    },\n    /**\n     * Specifies a minimum date that users can enter into a [Text](https://surveyjs.io/form-library/documentation/api-reference/text-entry-question-model) question with [`inputType`](https://surveyjs.io/form-library/documentation/api-reference/text-entry-question-model#inputType) set to `\"date\"` or `\"datetime-local\"`. Set this property to a string with the folllowing format: `\"yyyy-mm-dd\"`.\n     */\n    minDate: \"\",\n    /**\n     * Specifies a maximum date that users can enter into a [Text](https://surveyjs.io/form-library/documentation/api-reference/text-entry-question-model) question with [`inputType`](https://surveyjs.io/form-library/documentation/api-reference/text-entry-question-model#inputType) set to `\"date\"` or `\"datetime-local\"`. Set this property to a string with the folllowing format: `\"yyyy-mm-dd\"`.\n     */\n    maxDate: \"\",\n    showModal: undefined,\n    showDialog: undefined,\n    supportCreatorV2: false,\n    showDefaultItemsInCreatorV2: true,\n    /**\n     * An object that specifies icon replacements. Object keys are built-in icon names. To use a custom icon, assign its name to the key of the icon you want to replace:\n     *\n     * ```js\n     * import { settings } from \"survey-core\";\n     *\n     * settings.customIcons[\"icon-redo\"] = \"custom-redo-icon\";\n     * ```\n     *\n     * For more information about icons in SurveyJS, refer to the following help topic: [UI Icons](https://surveyjs.io/form-library/documentation/icons).\n     */\n    customIcons: {},\n    /**\n     * Specifies which part of a choice item responds to a drag gesture in Ranking questions.\n     *\n     * Possible values:\n     *\n     * - `\"entireItem\"` (default) - Users can use the entire choice item as a drag handle.\n     * - `\"icon\"` - Users can only use the choice item icon as a drag handle.\n     */\n    rankingDragHandleArea: \"entireItem\",\n    environment: defaultEnvironment,\n    /**\n     * Allows you to hide the maximum length indicator in text input questions.\n     *\n     * If you specify a question's [`maxLength`](https://surveyjs.io/form-library/documentation/api-reference/text-entry-question-model#maxLength) property or a survey's [`maxTextLength`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#maxTextLength) property, text input questions indicate the number of entered characters and the character limit. Assign `false` to the `settings.showMaxLengthIndicator` property if you want to hide this indicator.\n     *\n     * Default value: `true`\n     */\n    showMaxLengthIndicator: true,\n    /**\n     * Specifies whether to animate survey elements.\n     *\n     * Default value: `true`\n    */\n    animationEnabled: true,\n    /**\n     * An object that specifies heading levels (`<h1>`, `<h2>`, etc.) to use when rendering survey, page, panel, and question titles.\n     *\n     * Default value: `{ survey: \"h3\", page: \"h4\", panel: \"h4\", question: \"h5\" }`\n     *\n     * If you want to modify heading levels for individual titles, handle `SurveyModel`'s [`onGetTitleTagName`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onGetTitleTagName) event.\n     */\n    titleTags: {\n        survey: \"h3\",\n        page: \"h4\",\n        panel: \"h4\",\n        question: \"h5\",\n    },\n    questions: {\n        inputTypes: [\n            \"color\",\n            \"date\",\n            \"datetime-local\",\n            \"email\",\n            \"month\",\n            \"number\",\n            \"password\",\n            \"range\",\n            \"tel\",\n            \"text\",\n            \"time\",\n            \"url\",\n            \"week\",\n        ],\n        dataList: [\n            \"\",\n            \"name\",\n            \"honorific-prefix\",\n            \"given-name\",\n            \"additional-name\",\n            \"family-name\",\n            \"honorific-suffix\",\n            \"nickname\",\n            \"organization-title\",\n            \"username\",\n            \"new-password\",\n            \"current-password\",\n            \"organization\",\n            \"street-address\",\n            \"address-line1\",\n            \"address-line2\",\n            \"address-line3\",\n            \"address-level4\",\n            \"address-level3\",\n            \"address-level2\",\n            \"address-level1\",\n            \"country\",\n            \"country-name\",\n            \"postal-code\",\n            \"cc-name\",\n            \"cc-given-name\",\n            \"cc-additional-name\",\n            \"cc-family-name\",\n            \"cc-number\",\n            \"cc-exp\",\n            \"cc-exp-month\",\n            \"cc-exp-year\",\n            \"cc-csc\",\n            \"cc-type\",\n            \"transaction-currency\",\n            \"transaction-amount\",\n            \"language\",\n            \"bday\",\n            \"bday-day\",\n            \"bday-month\",\n            \"bday-year\",\n            \"sex\",\n            \"url\",\n            \"photo\",\n            \"tel\",\n            \"tel-country-code\",\n            \"tel-national\",\n            \"tel-area-code\",\n            \"tel-local\",\n            \"tel-local-prefix\",\n            \"tel-local-suffix\",\n            \"tel-extension\",\n            \"email\",\n            \"impp\",\n        ]\n    },\n    legacyProgressBarView: false,\n    /**\n     * An object with properties that configure input masks.\n     *\n     * Nested properties:\n     *\n     * - `patternPlaceholderChar`: `string`\\\n     * A symbol used as a placeholder for characters to be entered in [pattern masks](https://surveyjs.io/form-library/documentation/api-reference/inputmaskpattern). Default value: `\"_\"`.\n     *\n     * - `patternEscapeChar`: `string`\\\n     * A symbol used to insert literal representations of special characters in [pattern masks](https://surveyjs.io/form-library/documentation/api-reference/inputmaskpattern). Default value: `\"\\\\\"`.\n     *\n     * - `patternDefinitions`: `<{ [key: string]: RegExp }>`\\\n     * An object that maps placeholder symbols to regular expressions in [pattern masks](https://surveyjs.io/form-library/documentation/api-reference/inputmaskpattern). Default value: `{ \"9\": /[0-9]/, \"a\": /[a-zA-Z]/, \"#\": /[a-zA-Z0-9]/ }`.\n     */\n    maskSettings: {\n        patternPlaceholderChar: \"_\",\n        patternEscapeChar: \"\\\\\",\n        patternDefinitions: {\n            \"9\": /[0-9]/,\n            \"a\": /[a-zA-Z]/,\n            \"#\": /[a-zA-Z0-9]/\n        }\n    }\n};\n\n\n/***/ }),\n\n/***/ \"./src/survey-element.ts\":\n/*!*******************************!*\\\n  !*** ./src/survey-element.ts ***!\n  \\*******************************/\n/*! exports provided: SurveyElementCore, DragTypeOverMeEnum, SurveyElement */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_1087645__) {\n\n\"use strict\";\n__nested_webpack_require_1087645__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_1087645__.d(__nested_webpack_exports__, \"SurveyElementCore\", function() { return SurveyElementCore; });\n/* harmony export (binding) */ __nested_webpack_require_1087645__.d(__nested_webpack_exports__, \"DragTypeOverMeEnum\", function() { return DragTypeOverMeEnum; });\n/* harmony export (binding) */ __nested_webpack_require_1087645__.d(__nested_webpack_exports__, \"SurveyElement\", function() { return SurveyElement; });\n/* harmony import */ var _jsonobject__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_1087645__(/*! ./jsonobject */ \"./src/jsonobject.ts\");\n/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_1087645__(/*! ./base */ \"./src/base.ts\");\n/* harmony import */ var _actions_adaptive_container__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_1087645__(/*! ./actions/adaptive-container */ \"./src/actions/adaptive-container.ts\");\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_1087645__(/*! ./helpers */ \"./src/helpers.ts\");\n/* harmony import */ var _settings__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_1087645__(/*! ./settings */ \"./src/settings.ts\");\n/* harmony import */ var _actions_container__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_1087645__(/*! ./actions/container */ \"./src/actions/container.ts\");\n/* harmony import */ var _utils_cssClassBuilder__WEBPACK_IMPORTED_MODULE_6__ = __nested_webpack_require_1087645__(/*! ./utils/cssClassBuilder */ \"./src/utils/cssClassBuilder.ts\");\n/* harmony import */ var _utils_animation__WEBPACK_IMPORTED_MODULE_7__ = __nested_webpack_require_1087645__(/*! ./utils/animation */ \"./src/utils/animation.ts\");\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_8__ = __nested_webpack_require_1087645__(/*! ./utils/utils */ \"./src/utils/utils.ts\");\n/* harmony import */ var _global_variables_utils__WEBPACK_IMPORTED_MODULE_9__ = __nested_webpack_require_1087645__(/*! ./global_variables_utils */ \"./src/global_variables_utils.ts\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = ( false) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n\n\n\n\n\n\n\n\n\n/**\n * A base class for the [`SurveyElement`](https://surveyjs.io/form-library/documentation/surveyelement) and [`SurveyModel`](https://surveyjs.io/form-library/documentation/surveymodel) classes.\n */\nvar SurveyElementCore = /** @class */ (function (_super) {\n    __extends(SurveyElementCore, _super);\n    function SurveyElementCore() {\n        var _this = _super.call(this) || this;\n        _this.createLocTitleProperty();\n        return _this;\n    }\n    SurveyElementCore.prototype.createLocTitleProperty = function () {\n        return this.createLocalizableString(\"title\", this, true);\n    };\n    Object.defineProperty(SurveyElementCore.prototype, \"title\", {\n        /**\n         * A title for the survey element. If `title` is undefined, the `name` property value is displayed instead.\n         *\n         * Empty pages and panels do not display their titles or names.\n         *\n         * @see [Configure Question Titles](https://surveyjs.io/form-library/documentation/design-survey-question-titles)\n        */\n        get: function () {\n            return this.getLocalizableStringText(\"title\", this.getDefaultTitleValue());\n        },\n        set: function (val) {\n            this.setLocalizableStringText(\"title\", val);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyElementCore.prototype, \"locTitle\", {\n        get: function () {\n            return this.getLocalizableString(\"title\");\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyElementCore.prototype.getDefaultTitleValue = function () { return undefined; };\n    SurveyElementCore.prototype.updateDescriptionVisibility = function (newDescription) {\n        var showPlaceholder = false;\n        if (this.isDesignMode) {\n            var property_1 = _jsonobject__WEBPACK_IMPORTED_MODULE_0__[\"Serializer\"].findProperty(this.getType(), \"description\");\n            showPlaceholder = !!(property_1 === null || property_1 === void 0 ? void 0 : property_1.placeholder);\n        }\n        this.hasDescription = !!newDescription || (showPlaceholder && this.isDesignMode);\n    };\n    Object.defineProperty(SurveyElementCore.prototype, \"locDescription\", {\n        get: function () {\n            return this.getLocalizableString(\"description\");\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyElementCore.prototype, \"titleTagName\", {\n        get: function () {\n            var titleTagName = this.getDefaultTitleTagName();\n            var survey = this.getSurvey();\n            return !!survey ? survey.getElementTitleTagName(this, titleTagName) : titleTagName;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyElementCore.prototype.getDefaultTitleTagName = function () {\n        return _settings__WEBPACK_IMPORTED_MODULE_4__[\"settings\"].titleTags[this.getType()];\n    };\n    Object.defineProperty(SurveyElementCore.prototype, \"hasTitle\", {\n        get: function () { return this.title.length > 0; },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyElementCore.prototype, \"hasTitleActions\", {\n        get: function () { return false; },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyElementCore.prototype, \"hasTitleEvents\", {\n        get: function () {\n            return this.hasTitleActions;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyElementCore.prototype.getTitleToolbar = function () { return null; };\n    SurveyElementCore.prototype.getTitleOwner = function () { return undefined; };\n    Object.defineProperty(SurveyElementCore.prototype, \"isTitleOwner\", {\n        get: function () { return !!this.getTitleOwner(); },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyElementCore.prototype, \"isTitleRenderedAsString\", {\n        get: function () { return this.getIsTitleRenderedAsString(); },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyElementCore.prototype.toggleState = function () { return undefined; };\n    Object.defineProperty(SurveyElementCore.prototype, \"cssClasses\", {\n        get: function () { return {}; },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyElementCore.prototype, \"cssTitle\", {\n        get: function () { return \"\"; },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyElementCore.prototype, \"ariaTitleId\", {\n        get: function () { return undefined; },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyElementCore.prototype, \"ariaDescriptionId\", {\n        get: function () { return undefined; },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyElementCore.prototype, \"titleTabIndex\", {\n        get: function () { return undefined; },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyElementCore.prototype, \"titleAriaExpanded\", {\n        get: function () { return undefined; },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyElementCore.prototype, \"titleAriaRole\", {\n        get: function () { return undefined; },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyElementCore.prototype, \"ariaLabel\", {\n        get: function () {\n            return this.locTitle.renderedHtml;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyElementCore.prototype, \"titleAriaLabel\", {\n        get: function () {\n            return this.ariaLabel;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyElementCore.prototype.getIsTitleRenderedAsString = function () { return !this.isTitleOwner; };\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_0__[\"property\"])()\n    ], SurveyElementCore.prototype, \"hasDescription\", void 0);\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_0__[\"property\"])({\n            localizable: true,\n            onSet: function (newDescription, self) {\n                self.updateDescriptionVisibility(newDescription);\n            }\n        })\n    ], SurveyElementCore.prototype, \"description\", void 0);\n    return SurveyElementCore;\n}(_base__WEBPACK_IMPORTED_MODULE_1__[\"Base\"]));\n\n// TODO: rename\nvar DragTypeOverMeEnum;\n(function (DragTypeOverMeEnum) {\n    DragTypeOverMeEnum[DragTypeOverMeEnum[\"InsideEmptyPanel\"] = 1] = \"InsideEmptyPanel\";\n    DragTypeOverMeEnum[DragTypeOverMeEnum[\"MultilineRight\"] = 2] = \"MultilineRight\";\n    DragTypeOverMeEnum[DragTypeOverMeEnum[\"MultilineLeft\"] = 3] = \"MultilineLeft\";\n    DragTypeOverMeEnum[DragTypeOverMeEnum[\"Top\"] = 4] = \"Top\";\n    DragTypeOverMeEnum[DragTypeOverMeEnum[\"Right\"] = 5] = \"Right\";\n    DragTypeOverMeEnum[DragTypeOverMeEnum[\"Bottom\"] = 6] = \"Bottom\";\n    DragTypeOverMeEnum[DragTypeOverMeEnum[\"Left\"] = 7] = \"Left\";\n})(DragTypeOverMeEnum || (DragTypeOverMeEnum = {}));\n/**\n * A base class for all survey elements.\n */\nvar SurveyElement = /** @class */ (function (_super) {\n    __extends(SurveyElement, _super);\n    function SurveyElement(name) {\n        var _this = _super.call(this) || this;\n        _this.selectedElementInDesignValue = _this;\n        _this.disableDesignActions = SurveyElement.CreateDisabledDesignElements;\n        _this.parentQuestionValue = null;\n        _this.isContentElement = false;\n        _this.isEditableTemplateElement = false;\n        _this.isInteractiveDesignElement = true;\n        _this.isSingleInRow = true;\n        _this._renderedIsExpanded = true;\n        _this._isAnimatingCollapseExpand = false;\n        _this.animationCollapsed = new _utils_animation__WEBPACK_IMPORTED_MODULE_7__[\"AnimationBoolean\"](_this.getExpandCollapseAnimationOptions(), function (val) {\n            _this._renderedIsExpanded = val;\n            if (_this.animationAllowed) {\n                if (val) {\n                    _this.isAnimatingCollapseExpand = true;\n                }\n                else {\n                    _this.updateElementCss(false);\n                }\n            }\n        }, function () { return _this.renderedIsExpanded; });\n        _this.animationAllowedValue = true;\n        _this.name = name;\n        _this.createNewArray(\"errors\");\n        _this.createNewArray(\"titleActions\");\n        _this.registerPropertyChangedHandlers([\"isReadOnly\"], function () { _this.onReadOnlyChanged(); });\n        _this.registerPropertyChangedHandlers([\"errors\"], function () { _this.updateVisibleErrors(); });\n        _this.registerPropertyChangedHandlers([\"isSingleInRow\"], function () { _this.updateElementCss(false); });\n        return _this;\n    }\n    SurveyElement.getProgressInfoByElements = function (children, isRequired) {\n        var info = _base__WEBPACK_IMPORTED_MODULE_1__[\"Base\"].createProgressInfo();\n        for (var i = 0; i < children.length; i++) {\n            if (!children[i].isVisible)\n                continue;\n            var childInfo = children[i].getProgressInfo();\n            info.questionCount += childInfo.questionCount;\n            info.answeredQuestionCount += childInfo.answeredQuestionCount;\n            info.requiredQuestionCount += childInfo.requiredQuestionCount;\n            info.requiredAnsweredQuestionCount +=\n                childInfo.requiredAnsweredQuestionCount;\n        }\n        if (isRequired && info.questionCount > 0) {\n            if (info.requiredQuestionCount == 0)\n                info.requiredQuestionCount = 1;\n            if (info.answeredQuestionCount > 0)\n                info.requiredAnsweredQuestionCount = 1;\n        }\n        return info;\n    };\n    SurveyElement.ScrollElementToTop = function (elementId, scrollIfVisible) {\n        var root = _settings__WEBPACK_IMPORTED_MODULE_4__[\"settings\"].environment.root;\n        if (!elementId || typeof root === \"undefined\")\n            return false;\n        var el = root.getElementById(elementId);\n        return SurveyElement.ScrollElementToViewCore(el, false, scrollIfVisible);\n    };\n    SurveyElement.ScrollElementToViewCore = function (el, checkLeft, scrollIfVisible) {\n        if (!el || !el.scrollIntoView)\n            return false;\n        var elTop = scrollIfVisible ? -1 : el.getBoundingClientRect().top;\n        var needScroll = elTop < 0;\n        var elLeft = -1;\n        if (!needScroll && checkLeft) {\n            elLeft = el.getBoundingClientRect().left;\n            needScroll = elLeft < 0;\n        }\n        if (!needScroll && _global_variables_utils__WEBPACK_IMPORTED_MODULE_9__[\"DomWindowHelper\"].isAvailable()) {\n            var height = _global_variables_utils__WEBPACK_IMPORTED_MODULE_9__[\"DomWindowHelper\"].getInnerHeight();\n            needScroll = height > 0 && height < elTop;\n            if (!needScroll && checkLeft) {\n                var width = _global_variables_utils__WEBPACK_IMPORTED_MODULE_9__[\"DomWindowHelper\"].getInnerWidth();\n                needScroll = width > 0 && width < elLeft;\n            }\n        }\n        if (needScroll) {\n            el.scrollIntoView();\n        }\n        return needScroll;\n    };\n    SurveyElement.GetFirstNonTextElement = function (elements, removeSpaces) {\n        if (removeSpaces === void 0) { removeSpaces = false; }\n        if (!elements || !elements.length || elements.length == 0)\n            return null;\n        if (removeSpaces) {\n            var tEl = elements[0];\n            if (tEl.nodeName === \"#text\")\n                tEl.data = \"\";\n            tEl = elements[elements.length - 1];\n            if (tEl.nodeName === \"#text\")\n                tEl.data = \"\";\n        }\n        for (var i = 0; i < elements.length; i++) {\n            if (elements[i].nodeName != \"#text\" && elements[i].nodeName != \"#comment\")\n                return elements[i];\n        }\n        return null;\n    };\n    SurveyElement.FocusElement = function (elementId) {\n        if (!elementId || !_global_variables_utils__WEBPACK_IMPORTED_MODULE_9__[\"DomDocumentHelper\"].isAvailable())\n            return false;\n        var res = SurveyElement.focusElementCore(elementId);\n        if (!res) {\n            setTimeout(function () {\n                SurveyElement.focusElementCore(elementId);\n            }, 10);\n        }\n        return res;\n    };\n    SurveyElement.focusElementCore = function (elementId) {\n        var root = _settings__WEBPACK_IMPORTED_MODULE_4__[\"settings\"].environment.root;\n        if (!root)\n            return false;\n        var el = root.getElementById(elementId);\n        // https://stackoverflow.com/questions/19669786/check-if-element-is-visible-in-dom\n        if (el && !el[\"disabled\"] && el.style.display !== \"none\" && el.offsetParent !== null) {\n            SurveyElement.ScrollElementToViewCore(el, true, false);\n            el.focus();\n            return true;\n        }\n        return false;\n    };\n    SurveyElement.prototype.onPropertyValueChanged = function (name, oldValue, newValue) {\n        _super.prototype.onPropertyValueChanged.call(this, name, oldValue, newValue);\n        if (name === \"state\") {\n            this.updateElementCss(false);\n            this.notifyStateChanged(oldValue);\n            if (this.stateChangedCallback)\n                this.stateChangedCallback();\n        }\n    };\n    SurveyElement.prototype.getSkeletonComponentNameCore = function () {\n        if (this.survey) {\n            return this.survey.getSkeletonComponentName(this);\n        }\n        return \"\";\n    };\n    Object.defineProperty(SurveyElement.prototype, \"parentQuestion\", {\n        /**\n         * A Dynamic Panel, Dynamic Matrix, or Dropdown Matrix that includes the current question.\n         *\n         * This property is `null` for standalone questions.\n         */\n        get: function () {\n            return this.parentQuestionValue;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyElement.prototype.setParentQuestion = function (val) {\n        this.parentQuestionValue = val;\n        this.onParentQuestionChanged();\n    };\n    SurveyElement.prototype.onParentQuestionChanged = function () { };\n    Object.defineProperty(SurveyElement.prototype, \"skeletonComponentName\", {\n        get: function () {\n            return this.getSkeletonComponentNameCore();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyElement.prototype, \"state\", {\n        /**\n         * Gets and sets the survey element's expand state.\n         *\n         * Possible values:\n         *\n         * - `\"default\"` (default) - The survey element is displayed in full and cannot be collapsed in the UI.\n         * - `\"expanded\"` - The survey element is displayed in full and can be collapsed in the UI.\n         * - `\"collapsed\"` - The survey element displays only `title` and `description` and can be expanded in the UI.\n         *\n         * @see toggleState\n         * @see collapse\n         * @see expand\n         * @see isCollapsed\n         * @see isExpanded\n         */\n        get: function () {\n            return this.getPropertyValue(\"state\");\n        },\n        set: function (val) {\n            this.setPropertyValue(\"state\", val);\n            this.renderedIsExpanded = !(this.state === \"collapsed\" && !this.isDesignMode);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyElement.prototype.notifyStateChanged = function (prevState) {\n        if (this.survey) {\n            this.survey.elementContentVisibilityChanged(this);\n        }\n    };\n    Object.defineProperty(SurveyElement.prototype, \"isCollapsed\", {\n        /**\n         * Returns `true` if the survey element is collapsed.\n         * @see state\n         * @see toggleState\n         * @see collapse\n         * @see expand\n         * @see isExpanded\n         */\n        get: function () {\n            return this.state === \"collapsed\" && !this.isDesignMode;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyElement.prototype, \"isExpanded\", {\n        /**\n         * Returns `true` if the survey element is expanded.\n         * @see state\n         * @see toggleState\n         * @see collapse\n         * @see expand\n         * @see isCollapsed\n         */\n        get: function () {\n            return this.state === \"expanded\";\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Collapses the survey element.\n     *\n     * In collapsed state, the element displays only `title` and `description`.\n     * @see title\n     * @see description\n     * @see state\n     * @see toggleState\n     * @see expand\n     * @see isCollapsed\n     * @see isExpanded\n     */\n    SurveyElement.prototype.collapse = function () {\n        if (this.isDesignMode)\n            return;\n        this.state = \"collapsed\";\n    };\n    /**\n     * Expands the survey element.\n     * @see state\n     * @see toggleState\n     * @see collapse\n     * @see isCollapsed\n     * @see isExpanded\n     */\n    SurveyElement.prototype.expand = function () {\n        this.state = \"expanded\";\n    };\n    /**\n     * Toggles the survey element's `state` between collapsed and expanded.\n     * @see state\n     * @see collapse\n     * @see expand\n     * @see isCollapsed\n     * @see isExpanded\n     */\n    SurveyElement.prototype.toggleState = function () {\n        if (this.isCollapsed) {\n            this.expand();\n            return true;\n        }\n        if (this.isExpanded) {\n            this.collapse();\n            return false;\n        }\n        return true;\n    };\n    Object.defineProperty(SurveyElement.prototype, \"hasStateButton\", {\n        get: function () {\n            return this.isExpanded || this.isCollapsed;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyElement.prototype, \"shortcutText\", {\n        get: function () {\n            return this.title || this.name;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyElement.prototype.getTitleToolbar = function () {\n        if (!this.titleToolbarValue) {\n            this.titleToolbarValue = this.createActionContainer(true);\n            this.titleToolbarValue.containerCss = (this.isPanel ? this.cssClasses.panel.titleBar : this.cssClasses.titleBar) || \"sv-action-title-bar\";\n            this.titleToolbarValue.setItems(this.getTitleActions());\n        }\n        return this.titleToolbarValue;\n    };\n    SurveyElement.prototype.createActionContainer = function (allowAdaptiveActions) {\n        var actionContainer = allowAdaptiveActions ? new _actions_adaptive_container__WEBPACK_IMPORTED_MODULE_2__[\"AdaptiveActionContainer\"]() : new _actions_container__WEBPACK_IMPORTED_MODULE_5__[\"ActionContainer\"]();\n        if (this.survey && !!this.survey.getCss().actionBar) {\n            actionContainer.cssClasses = this.survey.getCss().actionBar;\n        }\n        return actionContainer;\n    };\n    Object.defineProperty(SurveyElement.prototype, \"titleActions\", {\n        get: function () {\n            return this.getPropertyValue(\"titleActions\");\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyElement.prototype.getTitleActions = function () {\n        if (!this.isTitleActionRequested) {\n            this.updateTitleActions();\n            this.isTitleActionRequested = true;\n        }\n        return this.titleActions;\n    };\n    SurveyElement.prototype.getDefaultTitleActions = function () {\n        return [];\n    };\n    SurveyElement.prototype.updateTitleActions = function () {\n        var actions = this.getDefaultTitleActions();\n        if (!!this.survey) {\n            actions = this.survey.getUpdatedElementTitleActions(this, actions);\n        }\n        this.setPropertyValue(\"titleActions\", actions);\n    };\n    Object.defineProperty(SurveyElement.prototype, \"hasTitleActions\", {\n        get: function () {\n            return this.getTitleActions().length > 0;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyElement.prototype, \"hasTitleEvents\", {\n        get: function () {\n            return this.state !== undefined && this.state !== \"default\";\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyElement.prototype, \"titleTabIndex\", {\n        get: function () {\n            return !this.isPage && this.state !== \"default\" ? 0 : undefined;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyElement.prototype, \"titleAriaExpanded\", {\n        get: function () {\n            if (this.isPage || this.state === \"default\")\n                return undefined;\n            return this.state === \"expanded\" ? \"true\" : \"false\";\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyElement.prototype, \"titleAriaRole\", {\n        get: function () {\n            if (this.isPage || this.state === \"default\")\n                return undefined;\n            return \"button\";\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyElement.prototype.setSurveyImpl = function (value, isLight) {\n        this.surveyImplValue = value;\n        if (!this.surveyImplValue) {\n            this.setSurveyCore(null);\n            this.surveyDataValue = null;\n        }\n        else {\n            this.surveyDataValue = this.surveyImplValue.getSurveyData();\n            this.setSurveyCore(this.surveyImplValue.getSurvey());\n            this.textProcessorValue = this.surveyImplValue.getTextProcessor();\n            this.onSetData();\n        }\n        if (!!this.survey) {\n            this.updateDescriptionVisibility(this.description);\n            this.clearCssClasses();\n        }\n    };\n    SurveyElement.prototype.canRunConditions = function () {\n        return _super.prototype.canRunConditions.call(this) && !!this.data;\n    };\n    SurveyElement.prototype.getDataFilteredValues = function () {\n        return !!this.data ? this.data.getFilteredValues() : {};\n    };\n    SurveyElement.prototype.getDataFilteredProperties = function () {\n        var props = !!this.data ? this.data.getFilteredProperties() : {};\n        props.question = this;\n        return props;\n    };\n    Object.defineProperty(SurveyElement.prototype, \"surveyImpl\", {\n        get: function () {\n            return this.surveyImplValue;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /* You shouldn't use this method ever */\n    SurveyElement.prototype.__setData = function (data) {\n        if (_settings__WEBPACK_IMPORTED_MODULE_4__[\"settings\"].supportCreatorV2) {\n            this.surveyDataValue = data;\n        }\n    };\n    Object.defineProperty(SurveyElement.prototype, \"data\", {\n        get: function () {\n            return this.surveyDataValue;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyElement.prototype, \"survey\", {\n        /**\n         * Returns the survey object.\n         */\n        get: function () {\n            return this.getSurvey();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyElement.prototype.getSurvey = function (live) {\n        if (live === void 0) { live = false; }\n        if (!!this.surveyValue)\n            return this.surveyValue;\n        if (!!this.surveyImplValue) {\n            this.setSurveyCore(this.surveyImplValue.getSurvey());\n        }\n        return this.surveyValue;\n    };\n    SurveyElement.prototype.setSurveyCore = function (value) {\n        this.surveyValue = value;\n        if (!!this.surveyChangedCallback) {\n            this.surveyChangedCallback();\n        }\n    };\n    Object.defineProperty(SurveyElement.prototype, \"isInternal\", {\n        get: function () {\n            return this.isContentElement;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyElement.prototype, \"areInvisibleElementsShowing\", {\n        get: function () {\n            return (!!this.survey &&\n                this.survey.areInvisibleElementsShowing &&\n                !this.isContentElement);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyElement.prototype, \"isVisible\", {\n        get: function () {\n            return true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyElement.prototype, \"isReadOnly\", {\n        /**\n         * Returns `true` if the survey element or its parent element is read-only.\n         *\n         * If you want to switch a survey element to the read-only state based on a condition, specify the [`enableIf`](https://surveyjs.io/form-library/documentation/question#enableIf) property. Refer to the following help topic for information: [Conditional Visibility](https://surveyjs.io/form-library/documentation/design-survey-conditional-logic#conditional-visibility).\n         * @see readOnly\n         */\n        get: function () {\n            return this.readOnly;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyElement.prototype, \"readOnly\", {\n        /**\n         * Makes the survey element read-only.\n         *\n         * If you want to switch a survey element to the read-only state based on a condition, specify the [`enableIf`](https://surveyjs.io/form-library/documentation/question#enableIf) property. Refer to the following help topic for information: [Conditional Visibility](https://surveyjs.io/form-library/documentation/design-survey-conditional-logic#conditional-visibility).\n         * @see isReadOnly\n         */\n        get: function () {\n            return this.getPropertyValue(\"readOnly\");\n        },\n        set: function (val) {\n            if (this.readOnly == val)\n                return;\n            this.setPropertyValue(\"readOnly\", val);\n            if (!this.isLoadingFromJson) {\n                this.setPropertyValue(\"isReadOnly\", this.isReadOnly);\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyElement.prototype.onReadOnlyChanged = function () {\n        if (!!this.readOnlyChangedCallback) {\n            this.readOnlyChangedCallback();\n        }\n    };\n    Object.defineProperty(SurveyElement.prototype, \"css\", {\n        get: function () {\n            return !!this.survey ? this.survey.getCss() : {};\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyElement.prototype, \"cssClassesValue\", {\n        get: function () {\n            return this.getPropertyValueWithoutDefault(\"cssClassesValue\");\n        },\n        set: function (val) {\n            this.setPropertyValue(\"cssClassesValue\", val);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyElement.prototype.ensureCssClassesValue = function () {\n        if (!this.cssClassesValue) {\n            this.cssClassesValue = this.calcCssClasses(this.css);\n            this.updateElementCssCore(this.cssClassesValue);\n        }\n    };\n    Object.defineProperty(SurveyElement.prototype, \"cssClasses\", {\n        /**\n         * Returns an object in which keys are UI elements and values are CSS classes applied to them.\n         *\n         * Use the following events of the [`SurveyModel`](https://surveyjs.io/form-library/documentation/surveymodel) object to override CSS classes:\n         *\n         * - [`onUpdateQuestionCssClasses`](https://surveyjs.io/form-library/documentation/surveymodel#onUpdateQuestionCssClasses)\n         * - [`onUpdatePanelCssClasses`](https://surveyjs.io/form-library/documentation/surveymodel#onUpdatePanelCssClasses)\n         * - [`onUpdatePageCssClasses`](https://surveyjs.io/form-library/documentation/surveymodel#onUpdatePageCssClasses)\n         * - [`onUpdateChoiceItemCss`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onUpdateChoiceItemCss)\n         */\n        get: function () {\n            var _dummy = this.cssClassesValue;\n            if (!this.survey)\n                return this.calcCssClasses(this.css);\n            this.ensureCssClassesValue();\n            return this.cssClassesValue;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyElement.prototype, \"cssTitleNumber\", {\n        get: function () {\n            var css = this.cssClasses;\n            if (css.number)\n                return css.number;\n            return css.panel ? css.panel.number : undefined;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyElement.prototype.calcCssClasses = function (css) { return undefined; };\n    SurveyElement.prototype.updateElementCssCore = function (cssClasses) { };\n    Object.defineProperty(SurveyElement.prototype, \"cssError\", {\n        get: function () { return \"\"; },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyElement.prototype.updateElementCss = function (reNew) {\n        this.clearCssClasses();\n    };\n    SurveyElement.prototype.clearCssClasses = function () {\n        this.cssClassesValue = undefined;\n    };\n    SurveyElement.prototype.getIsLoadingFromJson = function () {\n        if (_super.prototype.getIsLoadingFromJson.call(this))\n            return true;\n        return this.surveyValue ? this.surveyValue.isLoadingFromJson : false;\n    };\n    Object.defineProperty(SurveyElement.prototype, \"name\", {\n        /**\n         * A survey element identifier.\n         *\n         * > Question names must be unique.\n         */\n        get: function () {\n            return this.getPropertyValue(\"name\", \"\");\n        },\n        set: function (val) {\n            var oldValue = this.name;\n            this.setPropertyValue(\"name\", this.getValidName(val));\n            if (!this.isLoadingFromJson && !!oldValue) {\n                this.onNameChanged(oldValue);\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyElement.prototype.getValidName = function (name) {\n        return name;\n    };\n    SurveyElement.prototype.onNameChanged = function (oldValue) { };\n    SurveyElement.prototype.updateBindingValue = function (valueName, value) {\n        if (!!this.data &&\n            !this.isTwoValueEquals(value, this.data.getValue(valueName))) {\n            this.data.setValue(valueName, value, false);\n        }\n    };\n    Object.defineProperty(SurveyElement.prototype, \"errors\", {\n        /**\n         * Validation errors. Call the `validate()` method to validate survey element data.\n         * @see validate\n         */\n        get: function () {\n            return this.getPropertyValue(\"errors\");\n        },\n        set: function (val) {\n            this.setPropertyValue(\"errors\", val);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyElement.prototype.updateVisibleErrors = function () {\n        var counter = 0;\n        for (var i = 0; i < this.errors.length; i++) {\n            if (this.errors[i].visible)\n                counter++;\n        }\n        this.hasVisibleErrors = counter > 0;\n    };\n    Object.defineProperty(SurveyElement.prototype, \"containsErrors\", {\n        /**\n         * Returns `true` if the survey element or its child elements have validation errors.\n         *\n         * This property contains the result of the most recent validation. This result may be outdated. Call the `validate` method to get an up-to-date value.\n         * @see errors\n         */\n        get: function () {\n            return this.getPropertyValue(\"containsErrors\", false);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyElement.prototype.updateContainsErrors = function () {\n        this.setPropertyValue(\"containsErrors\", this.getContainsErrors());\n    };\n    SurveyElement.prototype.getContainsErrors = function () {\n        return this.errors.length > 0;\n    };\n    Object.defineProperty(SurveyElement.prototype, \"selectedElementInDesign\", {\n        get: function () {\n            return this.selectedElementInDesignValue;\n        },\n        set: function (val) {\n            this.selectedElementInDesignValue = val;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyElement.prototype.updateCustomWidgets = function () { };\n    SurveyElement.prototype.onSurveyLoad = function () { };\n    Object.defineProperty(SurveyElement.prototype, \"wasRendered\", {\n        get: function () { return !!this.wasRenderedValue; },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyElement.prototype.onFirstRendering = function () {\n        this.wasRenderedValue = true;\n        this.ensureCssClassesValue();\n    };\n    SurveyElement.prototype.endLoadingFromJson = function () {\n        _super.prototype.endLoadingFromJson.call(this);\n        if (!this.survey) {\n            this.onSurveyLoad();\n        }\n        this.updateDescriptionVisibility(this.description);\n    };\n    SurveyElement.prototype.setVisibleIndex = function (index) {\n        return 0;\n    };\n    Object.defineProperty(SurveyElement.prototype, \"isPage\", {\n        /**\n         * Returns `true` if the survey element is a page.\n         * @see Base.getType\n         */\n        get: function () {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyElement.prototype, \"isPanel\", {\n        /**\n         * Returns `true` if the survey element is a panel.\n         * @see Base.getType\n         */\n        get: function () {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyElement.prototype, \"isQuestion\", {\n        /**\n         * Returns `true` if the survey element is a question.\n         * @see Base.getType\n         */\n        get: function () {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyElement.prototype.delete = function (doDispose) { };\n    /**\n     * Returns the survey's [locale](https://surveyjs.io/form-library/documentation/surveymodel#locale).\n     *\n     * If a default locale is used, this method returns an empty string. To get the applied locale in this case, use the following code:\n     *\n     * ```js\n     * import { surveyLocalization } from 'survey-core';\n     * const defaultLocale = surveyLocalization.defaultLocale;\n     * ```\n     *\n     * @see [Localization & Globalization](https://surveyjs.io/form-library/documentation/localization)\n     */\n    SurveyElement.prototype.getLocale = function () {\n        return this.survey\n            ? this.survey.getLocale()\n            : this.locOwner\n                ? this.locOwner.getLocale()\n                : \"\";\n    };\n    SurveyElement.prototype.getMarkdownHtml = function (text, name) {\n        return this.survey\n            ? this.survey.getSurveyMarkdownHtml(this, text, name)\n            : this.locOwner\n                ? this.locOwner.getMarkdownHtml(text, name)\n                : undefined;\n    };\n    SurveyElement.prototype.getRenderer = function (name) {\n        return this.survey && typeof this.survey.getRendererForString === \"function\"\n            ? this.survey.getRendererForString(this, name)\n            : this.locOwner && typeof this.locOwner.getRenderer === \"function\"\n                ? this.locOwner.getRenderer(name)\n                : null;\n    };\n    SurveyElement.prototype.getRendererContext = function (locStr) {\n        return this.survey && typeof this.survey.getRendererContextForString === \"function\"\n            ? this.survey.getRendererContextForString(this, locStr)\n            : this.locOwner && typeof this.locOwner.getRendererContext === \"function\"\n                ? this.locOwner.getRendererContext(locStr)\n                : locStr;\n    };\n    SurveyElement.prototype.getProcessedText = function (text) {\n        if (this.isLoadingFromJson)\n            return text;\n        if (this.textProcessor)\n            return this.textProcessor.processText(text, this.getUseDisplayValuesInDynamicTexts());\n        if (this.locOwner)\n            return this.locOwner.getProcessedText(text);\n        return text;\n    };\n    SurveyElement.prototype.getUseDisplayValuesInDynamicTexts = function () { return true; };\n    SurveyElement.prototype.removeSelfFromList = function (list) {\n        if (!list || !Array.isArray(list))\n            return;\n        var index = list.indexOf(this);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    };\n    Object.defineProperty(SurveyElement.prototype, \"textProcessor\", {\n        get: function () {\n            return this.textProcessorValue;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyElement.prototype.getProcessedHtml = function (html) {\n        if (!html || !this.textProcessor)\n            return html;\n        return this.textProcessor.processText(html, true);\n    };\n    SurveyElement.prototype.onSetData = function () { };\n    Object.defineProperty(SurveyElement.prototype, \"parent\", {\n        get: function () {\n            return this.getPropertyValue(\"parent\", null);\n        },\n        set: function (val) {\n            this.setPropertyValue(\"parent\", val);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyElement.prototype.getPage = function (parent) {\n        while (parent && parent.parent)\n            parent = parent.parent;\n        if (parent && parent.getType() == \"page\")\n            return parent;\n        return null;\n    };\n    SurveyElement.prototype.moveToBase = function (parent, container, insertBefore) {\n        if (insertBefore === void 0) { insertBefore = null; }\n        if (!container)\n            return false;\n        parent.removeElement(this);\n        var index = -1;\n        if (_helpers__WEBPACK_IMPORTED_MODULE_3__[\"Helpers\"].isNumber(insertBefore)) {\n            index = parseInt(insertBefore);\n        }\n        if (index == -1 && !!insertBefore && !!insertBefore.getType) {\n            index = container.indexOf(insertBefore);\n        }\n        container.addElement(this, index);\n        return true;\n    };\n    SurveyElement.prototype.setPage = function (parent, newPage) {\n        var oldPage = this.getPage(parent);\n        //fix for the creator v1: https://github.com/surveyjs/survey-creator/issues/1744\n        if (typeof newPage === \"string\") {\n            var survey = this.getSurvey();\n            survey.pages.forEach(function (page) {\n                if (newPage === page.name)\n                    newPage = page;\n            });\n        }\n        if (oldPage === newPage)\n            return;\n        if (parent)\n            parent.removeElement(this);\n        if (newPage) {\n            newPage.addElement(this, -1);\n        }\n    };\n    SurveyElement.prototype.getSearchableLocKeys = function (keys) {\n        keys.push(\"title\");\n        keys.push(\"description\");\n    };\n    Object.defineProperty(SurveyElement.prototype, \"isDefaultV2Theme\", {\n        get: function () {\n            return this.survey && this.survey.getCss().root == \"sd-root-modern\";\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyElement.prototype, \"hasParent\", {\n        get: function () {\n            return (this.parent && !this.parent.isPage && (!this.parent.originalPage)) || (this.parent === undefined);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyElement.prototype.shouldAddRunnerStyles = function () {\n        return !this.isDesignMode && this.isDefaultV2Theme;\n    };\n    Object.defineProperty(SurveyElement.prototype, \"isCompact\", {\n        get: function () {\n            return this.survey && this.survey[\"isCompact\"];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyElement.prototype.getHasFrameV2 = function () {\n        return this.shouldAddRunnerStyles() && (!this.hasParent);\n    };\n    SurveyElement.prototype.getIsNested = function () {\n        return this.shouldAddRunnerStyles() && (this.hasParent);\n    };\n    SurveyElement.prototype.getCssRoot = function (cssClasses) {\n        var isExpanadable = !!this.isCollapsed || !!this.isExpanded;\n        return new _utils_cssClassBuilder__WEBPACK_IMPORTED_MODULE_6__[\"CssClassBuilder\"]()\n            .append(cssClasses.withFrame, this.getHasFrameV2() && !this.isCompact)\n            .append(cssClasses.compact, this.isCompact && this.getHasFrameV2())\n            .append(cssClasses.collapsed, !!this.isCollapsed)\n            .append(cssClasses.expandableAnimating, isExpanadable && this.isAnimatingCollapseExpand)\n            .append(cssClasses.expanded, !!this.isExpanded && this.renderedIsExpanded)\n            .append(cssClasses.expandable, isExpanadable)\n            .append(cssClasses.nested, this.getIsNested())\n            .toString();\n    };\n    Object.defineProperty(SurveyElement.prototype, \"width\", {\n        /**\n         * Sets survey element width in CSS values.\n         *\n         * Default value: \"\"\n         * @see minWidth\n         * @see maxWidth\n        */\n        get: function () {\n            return this.getPropertyValue(\"width\", \"\");\n        },\n        set: function (val) {\n            this.setPropertyValue(\"width\", val);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyElement.prototype, \"minWidth\", {\n        /**\n         * Gets or sets minimum survey element width in CSS values.\n         *\n         * Default value: \"300px\" (taken from [`settings.minWidth`](https://surveyjs.io/form-library/documentation/settings#minWidth))\n         * @see maxWidth\n         * @see renderWidth\n         * @see width\n         */\n        get: function () {\n            return this.getPropertyValue(\"minWidth\");\n        },\n        set: function (val) {\n            this.setPropertyValue(\"minWidth\", val);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyElement.prototype, \"maxWidth\", {\n        /**\n         * Gets or sets maximum survey element width in CSS values.\n         *\n         * Default value: \"100%\" (taken from [`settings.maxWidth`](https://surveyjs.io/form-library/documentation/settings#maxWidth))\n         * @see minWidth\n         * @see renderWidth\n         * @see width\n         */\n        get: function () {\n            return this.getPropertyValue(\"maxWidth\");\n        },\n        set: function (val) {\n            this.setPropertyValue(\"maxWidth\", val);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyElement.prototype, \"renderWidth\", {\n        /**\n         * Returns a calculated width of the rendered survey element in CSS values.\n         * @see width\n         * @see minWidth\n         * @see maxWidth\n         */\n        get: function () {\n            return this.getPropertyValue(\"renderWidth\", \"\");\n        },\n        set: function (val) {\n            this.setPropertyValue(\"renderWidth\", val);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyElement.prototype, \"indent\", {\n        /**\n         * Increases or decreases an indent of survey element content from the left edge. Accepts positive integer values and 0. Does not apply in the Default V2 theme.\n         * @see rightIndent\n         */\n        get: function () {\n            return this.getPropertyValue(\"indent\");\n        },\n        set: function (val) {\n            this.setPropertyValue(\"indent\", val);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyElement.prototype, \"rightIndent\", {\n        /**\n         * Increases or decreases an indent of survey element content from the right edge. Accepts positive integer values and 0. Does not apply in the Default V2 theme.\n         * @see indent\n         */\n        get: function () {\n            return this.getPropertyValue(\"rightIndent\", 0);\n        },\n        set: function (val) {\n            this.setPropertyValue(\"rightIndent\", val);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyElement.prototype.getRootStyle = function () {\n        var style = {};\n        if (!!this.paddingLeft) {\n            style[\"--sv-element-add-padding-left\"] = this.paddingLeft;\n        }\n        if (!!this.paddingRight) {\n            style[\"--sv-element-add-padding-right\"] = this.paddingRight;\n        }\n        return style;\n    };\n    Object.defineProperty(SurveyElement.prototype, \"paddingLeft\", {\n        get: function () {\n            return this.getPropertyValue(\"paddingLeft\", \"\");\n        },\n        set: function (val) {\n            this.setPropertyValue(\"paddingLeft\", val);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyElement.prototype, \"paddingRight\", {\n        get: function () {\n            return this.getPropertyValue(\"paddingRight\", \"\");\n        },\n        set: function (val) {\n            this.setPropertyValue(\"paddingRight\", val);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyElement.prototype, \"rootStyle\", {\n        get: function () {\n            var style = {};\n            var minWidth = this.minWidth;\n            if (minWidth != \"auto\")\n                minWidth = \"min(100%, \" + this.minWidth + \")\";\n            if (this.allowRootStyle && this.renderWidth) {\n                // style[\"width\"] = this.renderWidth;\n                style[\"flexGrow\"] = 1;\n                style[\"flexShrink\"] = 1;\n                style[\"flexBasis\"] = this.renderWidth;\n                style[\"minWidth\"] = minWidth;\n                style[\"maxWidth\"] = this.maxWidth;\n            }\n            return style;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyElement.prototype.isContainsSelection = function (el) {\n        var elementWithSelection = undefined;\n        var _document = _global_variables_utils__WEBPACK_IMPORTED_MODULE_9__[\"DomDocumentHelper\"].getDocument();\n        if (_global_variables_utils__WEBPACK_IMPORTED_MODULE_9__[\"DomDocumentHelper\"].isAvailable() && !!_document && _document[\"selection\"]) {\n            elementWithSelection = _document[\"selection\"].createRange().parentElement();\n        }\n        else {\n            var selection = _global_variables_utils__WEBPACK_IMPORTED_MODULE_9__[\"DomWindowHelper\"].getSelection();\n            if (!!selection && selection.rangeCount > 0) {\n                var range = selection.getRangeAt(0);\n                if (range.startOffset !== range.endOffset) {\n                    elementWithSelection = range.startContainer.parentNode;\n                }\n            }\n        }\n        return elementWithSelection == el;\n    };\n    Object.defineProperty(SurveyElement.prototype, \"clickTitleFunction\", {\n        get: function () {\n            var _this = this;\n            if (this.needClickTitleFunction()) {\n                return function (event) {\n                    if (!!event && _this.isContainsSelection(event.target)) {\n                        return;\n                    }\n                    return _this.processTitleClick();\n                };\n            }\n            return undefined;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyElement.prototype.needClickTitleFunction = function () {\n        return this.state !== \"default\";\n    };\n    SurveyElement.prototype.processTitleClick = function () {\n        if (this.state !== \"default\") {\n            this.toggleState();\n        }\n    };\n    Object.defineProperty(SurveyElement.prototype, \"additionalTitleToolbar\", {\n        get: function () {\n            return this.getAdditionalTitleToolbar();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyElement.prototype.getAdditionalTitleToolbar = function () {\n        return null;\n    };\n    SurveyElement.prototype.getCssTitle = function (cssClasses) {\n        var isExpandable = this.state !== \"default\";\n        var numInlineLimit = 4;\n        return new _utils_cssClassBuilder__WEBPACK_IMPORTED_MODULE_6__[\"CssClassBuilder\"]()\n            .append(cssClasses.title)\n            .append(cssClasses.titleNumInline, (this.no || \"\").length > numInlineLimit || isExpandable)\n            .append(cssClasses.titleExpandable, isExpandable)\n            .append(cssClasses.titleExpanded, this.isExpanded)\n            .append(cssClasses.titleCollapsed, this.isCollapsed)\n            .append(cssClasses.titleDisabled, this.isReadOnly)\n            .append(cssClasses.titleOnError, this.containsErrors).toString();\n    };\n    SurveyElement.prototype.localeChanged = function () {\n        _super.prototype.localeChanged.call(this);\n        this.updateDescriptionVisibility(this.description);\n        if (this.errors.length > 0) {\n            this.errors.forEach(function (err) {\n                err.updateText();\n            });\n        }\n    };\n    SurveyElement.prototype.setWrapperElement = function (element) {\n        this.wrapperElement = element;\n    };\n    SurveyElement.prototype.getWrapperElement = function () {\n        return this.wrapperElement;\n    };\n    Object.defineProperty(SurveyElement.prototype, \"isAnimatingCollapseExpand\", {\n        get: function () {\n            return this._isAnimatingCollapseExpand || this._renderedIsExpanded != this.isExpanded;\n        },\n        set: function (val) {\n            if (val !== this._isAnimatingCollapseExpand) {\n                this._isAnimatingCollapseExpand = val;\n                this.updateElementCss(false);\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyElement.prototype.getExpandCollapseAnimationOptions = function () {\n        var _this = this;\n        var beforeRunAnimation = function (el) {\n            _this.isAnimatingCollapseExpand = true;\n            el.style.setProperty(\"--animation-height\", el.offsetHeight + \"px\");\n        };\n        var afterRunAnimation = function (el) {\n            _this.isAnimatingCollapseExpand = false;\n        };\n        return {\n            getEnterOptions: function () {\n                var cssClasses = _this.isPanel ? _this.cssClasses.panel : _this.cssClasses;\n                return {\n                    cssClass: cssClasses.contentFadeIn,\n                    onBeforeRunAnimation: beforeRunAnimation,\n                    onAfterRunAnimation: afterRunAnimation,\n                };\n            },\n            getLeaveOptions: function () {\n                var cssClasses = _this.isPanel ? _this.cssClasses.panel : _this.cssClasses;\n                return { cssClass: cssClasses.contentFadeOut,\n                    onBeforeRunAnimation: beforeRunAnimation,\n                    onAfterRunAnimation: afterRunAnimation\n                };\n            },\n            getAnimatedElement: function () {\n                var _a;\n                var cssClasses = _this.isPanel ? _this.cssClasses.panel : _this.cssClasses;\n                if (cssClasses.content) {\n                    var selector = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_8__[\"classesToSelector\"])(cssClasses.content);\n                    if (selector) {\n                        return (_a = _this.getWrapperElement()) === null || _a === void 0 ? void 0 : _a.querySelector(selector);\n                    }\n                }\n                return undefined;\n            },\n            isAnimationEnabled: function () { return _settings__WEBPACK_IMPORTED_MODULE_4__[\"settings\"].animationEnabled && _this.animationAllowed && !_this.isDesignMode; }\n        };\n    };\n    Object.defineProperty(SurveyElement.prototype, \"renderedIsExpanded\", {\n        get: function () {\n            return !!this._renderedIsExpanded;\n        },\n        set: function (val) {\n            this.animationCollapsed.sync(val);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SurveyElement.prototype, \"animationAllowed\", {\n        get: function () {\n            return !this.isLoadingFromJson && !this.isDisposed && !!this.survey && this.animationAllowedValue;\n        },\n        set: function (val) {\n            this.animationAllowedValue = val;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SurveyElement.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        if (this.titleToolbarValue) {\n            this.titleToolbarValue.dispose();\n        }\n    };\n    SurveyElement.CreateDisabledDesignElements = false;\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_0__[\"property\"])({ defaultValue: null })\n    ], SurveyElement.prototype, \"dragTypeOverMe\", void 0);\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_0__[\"property\"])({ defaultValue: false })\n    ], SurveyElement.prototype, \"isDragMe\", void 0);\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_0__[\"property\"])({ defaultValue: false })\n    ], SurveyElement.prototype, \"hasVisibleErrors\", void 0);\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_0__[\"property\"])({ defaultValue: true })\n    ], SurveyElement.prototype, \"isSingleInRow\", void 0);\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_0__[\"property\"])({ defaultValue: true })\n    ], SurveyElement.prototype, \"allowRootStyle\", void 0);\n    __decorate([\n        Object(_jsonobject__WEBPACK_IMPORTED_MODULE_0__[\"property\"])()\n    ], SurveyElement.prototype, \"_renderedIsExpanded\", void 0);\n    return SurveyElement;\n}(SurveyElementCore));\n\n\n\n/***/ }),\n\n/***/ \"./src/surveyStrings.ts\":\n/*!******************************!*\\\n  !*** ./src/surveyStrings.ts ***!\n  \\******************************/\n/*! exports provided: surveyLocalization, surveyStrings */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_1145030__) {\n\n\"use strict\";\n__nested_webpack_require_1145030__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_1145030__.d(__nested_webpack_exports__, \"surveyLocalization\", function() { return surveyLocalization; });\n/* harmony export (binding) */ __nested_webpack_require_1145030__.d(__nested_webpack_exports__, \"surveyStrings\", function() { return surveyStrings; });\n/* harmony import */ var _localization_english__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_1145030__(/*! ./localization/english */ \"./src/localization/english.ts\");\n\nvar surveyLocalization = {\n    currentLocaleValue: \"\",\n    defaultLocaleValue: \"en\",\n    locales: {},\n    localeNames: {},\n    supportedLocales: [],\n    get currentLocale() {\n        return this.currentLocaleValue === this.defaultLocaleValue ? \"\" : this.currentLocaleValue;\n    },\n    set currentLocale(val) {\n        if (val === \"cz\")\n            val = \"cs\";\n        this.currentLocaleValue = val;\n    },\n    get defaultLocale() {\n        return this.defaultLocaleValue;\n    },\n    set defaultLocale(val) {\n        if (val === \"cz\")\n            val = \"cs\";\n        this.defaultLocaleValue = val;\n    },\n    getLocaleStrings: function (loc) {\n        return this.locales[loc];\n    },\n    getString: function (strName, locale) {\n        var _this = this;\n        if (locale === void 0) { locale = null; }\n        var locs = new Array();\n        var addLocaleCore = function (locName) {\n            var strs = _this.locales[locName];\n            if (!!strs)\n                locs.push(strs);\n        };\n        var addLocale = function (locName) {\n            if (!locName)\n                return;\n            addLocaleCore(locName);\n            var index = locName.indexOf(\"-\");\n            if (index < 1)\n                return;\n            locName = locName.substring(0, index);\n            addLocaleCore(locName);\n        };\n        addLocale(locale);\n        addLocale(this.currentLocale);\n        addLocale(this.defaultLocale);\n        if (this.defaultLocale !== \"en\") {\n            addLocaleCore(\"en\");\n        }\n        for (var i = 0; i < locs.length; i++) {\n            var res = locs[i][strName];\n            if (res !== undefined)\n                return res;\n        }\n        return this.onGetExternalString(strName, locale);\n    },\n    getLocales: function (removeDefaultLoc) {\n        if (removeDefaultLoc === void 0) { removeDefaultLoc = false; }\n        var res = [];\n        res.push(\"\");\n        var locs = this.locales;\n        if (this.supportedLocales && this.supportedLocales.length > 0) {\n            locs = {};\n            for (var i = 0; i < this.supportedLocales.length; i++) {\n                locs[this.supportedLocales[i]] = true;\n            }\n        }\n        for (var key in locs) {\n            if (removeDefaultLoc && key == this.defaultLocale)\n                continue;\n            res.push(key);\n        }\n        var locName = function (loc) {\n            if (!loc)\n                return \"\";\n            var res = surveyLocalization.localeNames[loc];\n            if (!res)\n                res = loc;\n            return res.toLowerCase();\n        };\n        res.sort(function (a, b) {\n            var str1 = locName(a);\n            var str2 = locName(b);\n            if (str1 === str2)\n                return 0;\n            return str1 < str2 ? -1 : 1;\n        });\n        return res;\n    },\n    onGetExternalString: function (name, locale) { return undefined; }\n};\nvar surveyStrings = _localization_english__WEBPACK_IMPORTED_MODULE_0__[\"englishStrings\"];\nsurveyLocalization.locales[\"en\"] = _localization_english__WEBPACK_IMPORTED_MODULE_0__[\"englishStrings\"];\nsurveyLocalization.localeNames[\"en\"] = \"english\";\n\n\n/***/ }),\n\n/***/ \"./src/utils/animation.ts\":\n/*!********************************!*\\\n  !*** ./src/utils/animation.ts ***!\n  \\********************************/\n/*! exports provided: AnimationUtils, AnimationPropertyUtils, AnimationGroupUtils, AnimationBoolean, AnimationGroup */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_1149014__) {\n\n\"use strict\";\n__nested_webpack_require_1149014__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_1149014__.d(__nested_webpack_exports__, \"AnimationUtils\", function() { return AnimationUtils; });\n/* harmony export (binding) */ __nested_webpack_require_1149014__.d(__nested_webpack_exports__, \"AnimationPropertyUtils\", function() { return AnimationPropertyUtils; });\n/* harmony export (binding) */ __nested_webpack_require_1149014__.d(__nested_webpack_exports__, \"AnimationGroupUtils\", function() { return AnimationGroupUtils; });\n/* harmony export (binding) */ __nested_webpack_require_1149014__.d(__nested_webpack_exports__, \"AnimationBoolean\", function() { return AnimationBoolean; });\n/* harmony export (binding) */ __nested_webpack_require_1149014__.d(__nested_webpack_exports__, \"AnimationGroup\", function() { return AnimationGroup; });\n/* harmony import */ var _global_variables_utils__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_1149014__(/*! ../global_variables_utils */ \"./src/global_variables_utils.ts\");\n/* harmony import */ var _taskmanager__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_1149014__(/*! ./taskmanager */ \"./src/utils/taskmanager.ts\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\nvar AnimationUtils = /** @class */ (function () {\n    function AnimationUtils() {\n        this.cancelQueue = [];\n    }\n    AnimationUtils.prototype.getMsFromRule = function (value) {\n        if (value === \"auto\")\n            return 0;\n        return Number(value.slice(0, -1).replace(\",\", \".\")) * 1000;\n    };\n    AnimationUtils.prototype.getAnimationsCount = function (element) {\n        var animationName = \"\";\n        if (getComputedStyle) {\n            animationName = getComputedStyle(element).animationName;\n        }\n        return (animationName && animationName != \"none\" ? animationName.split(\", \").length : 0);\n    };\n    AnimationUtils.prototype.getAnimationDuration = function (element) {\n        var style = getComputedStyle(element);\n        var delays = style[\"animationDelay\"].split(\", \");\n        var durations = style[\"animationDuration\"].split(\", \");\n        var duration = 0;\n        for (var i = 0; i < Math.max(durations.length, delays.length); i++) {\n            duration = Math.max(duration, this.getMsFromRule(durations[i % durations.length]) + this.getMsFromRule(delays[i % delays.length]));\n        }\n        return duration;\n    };\n    AnimationUtils.prototype.onAnimationEnd = function (element, callback, options) {\n        var _this = this;\n        var cancelTimeout;\n        var animationsCount = this.getAnimationsCount(element);\n        var onEndCallback = function (isCancel) {\n            if (isCancel === void 0) { isCancel = true; }\n            options.onAfterRunAnimation && options.onAfterRunAnimation(element);\n            callback(isCancel);\n            clearTimeout(cancelTimeout);\n            _this.cancelQueue.splice(_this.cancelQueue.indexOf(onEndCallback), 1);\n            element.removeEventListener(\"animationend\", onAnimationEndCallback);\n        };\n        var onAnimationEndCallback = function (event) {\n            if (event.target == event.currentTarget && --animationsCount <= 0) {\n                onEndCallback(false);\n            }\n        };\n        if (animationsCount > 0) {\n            element.addEventListener(\"animationend\", onAnimationEndCallback);\n            this.cancelQueue.push(onEndCallback);\n            cancelTimeout = setTimeout(function () {\n                onEndCallback(false);\n            }, this.getAnimationDuration(element) + 10);\n        }\n        else {\n            callback(true);\n        }\n    };\n    AnimationUtils.prototype.beforeAnimationRun = function (element, options) {\n        if (element) {\n            options.onBeforeRunAnimation && options.onBeforeRunAnimation(element);\n        }\n    };\n    AnimationUtils.prototype.runLeaveAnimation = function (element, options, callback) {\n        if (element && options.cssClass) {\n            element.classList.add(options.cssClass);\n            var onAnimationEndCallback = function (isCancel) {\n                callback();\n                if (isCancel) {\n                    element.classList.remove(options.cssClass);\n                }\n                else {\n                    _global_variables_utils__WEBPACK_IMPORTED_MODULE_0__[\"DomWindowHelper\"].requestAnimationFrame(function () {\n                        _global_variables_utils__WEBPACK_IMPORTED_MODULE_0__[\"DomWindowHelper\"].requestAnimationFrame(function () {\n                            element.classList.remove(options.cssClass);\n                        });\n                    });\n                }\n            };\n            this.onAnimationEnd(element, onAnimationEndCallback, options);\n        }\n        else {\n            callback();\n        }\n    };\n    AnimationUtils.prototype.runEnterAnimation = function (element, options) {\n        if (element && options.cssClass) {\n            element.classList.add(options.cssClass);\n            this.onAnimationEnd(element, function () {\n                element.classList.remove(options.cssClass);\n            }, options);\n        }\n    };\n    AnimationUtils.prototype.cancel = function () {\n        var cancelQueue = [].concat(this.cancelQueue);\n        cancelQueue.forEach(function (callback) { return callback(); });\n        this.cancelQueue = [];\n    };\n    return AnimationUtils;\n}());\n\nvar AnimationPropertyUtils = /** @class */ (function (_super) {\n    __extends(AnimationPropertyUtils, _super);\n    function AnimationPropertyUtils() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    AnimationPropertyUtils.prototype.onEnter = function (getElement, options) {\n        var _this = this;\n        var callback = function () {\n            var element = getElement();\n            _this.beforeAnimationRun(element, options);\n            _this.runEnterAnimation(element, options);\n        };\n        _global_variables_utils__WEBPACK_IMPORTED_MODULE_0__[\"DomWindowHelper\"].requestAnimationFrame(function () {\n            if (getElement()) {\n                callback();\n            }\n            else {\n                _global_variables_utils__WEBPACK_IMPORTED_MODULE_0__[\"DomWindowHelper\"].requestAnimationFrame(callback);\n            }\n        });\n    };\n    AnimationPropertyUtils.prototype.onLeave = function (getElement, callback, options) {\n        var element = getElement();\n        this.beforeAnimationRun(element, options);\n        this.runLeaveAnimation(element, options, callback);\n    };\n    return AnimationPropertyUtils;\n}(AnimationUtils));\n\nvar AnimationGroupUtils = /** @class */ (function (_super) {\n    __extends(AnimationGroupUtils, _super);\n    function AnimationGroupUtils() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    AnimationGroupUtils.prototype.onEnter = function (getElement, getOptions, elements) {\n        var _this = this;\n        if (elements.length == 0)\n            return;\n        _global_variables_utils__WEBPACK_IMPORTED_MODULE_0__[\"DomWindowHelper\"].requestAnimationFrame(function () {\n            var callback = function () {\n                elements.forEach(function (el) {\n                    _this.beforeAnimationRun(getElement(el), getOptions(el));\n                });\n                elements.forEach(function (el) {\n                    _this.runEnterAnimation(getElement(el), getOptions(el));\n                });\n            };\n            if (!getElement(elements[0])) {\n                _global_variables_utils__WEBPACK_IMPORTED_MODULE_0__[\"DomWindowHelper\"].requestAnimationFrame(callback);\n            }\n            else {\n                callback();\n            }\n        });\n    };\n    AnimationGroupUtils.prototype.onLeave = function (getElement, callback, getOptions, elements) {\n        var _this = this;\n        elements.forEach(function (el) {\n            _this.beforeAnimationRun(getElement(el), getOptions(el));\n        });\n        var counter = elements.length;\n        var onEndCallback = function () {\n            if (--counter <= 0) {\n                callback();\n            }\n        };\n        elements.forEach(function (el) {\n            _this.runLeaveAnimation(getElement(el), getOptions(el), onEndCallback);\n        });\n    };\n    return AnimationGroupUtils;\n}(AnimationUtils));\n\nvar AnimationProperty = /** @class */ (function () {\n    function AnimationProperty(animationOptions, update, getCurrentValue) {\n        var _this = this;\n        this.animationOptions = animationOptions;\n        this.update = update;\n        this.getCurrentValue = getCurrentValue;\n        this._debouncedSync = Object(_taskmanager__WEBPACK_IMPORTED_MODULE_1__[\"debounce\"])(function (newValue) {\n            _this.animation.cancel();\n            _this._sync(newValue);\n        });\n    }\n    AnimationProperty.prototype.sync = function (newValue) {\n        if (this.animationOptions.isAnimationEnabled()) {\n            this._debouncedSync.run(newValue);\n        }\n        else {\n            this.update(newValue);\n        }\n    };\n    AnimationProperty.prototype.cancel = function () {\n        this.animation.cancel();\n        this._debouncedSync.cancel();\n    };\n    return AnimationProperty;\n}());\nvar AnimationBoolean = /** @class */ (function (_super) {\n    __extends(AnimationBoolean, _super);\n    function AnimationBoolean() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.animation = new AnimationPropertyUtils();\n        return _this;\n    }\n    AnimationBoolean.prototype._sync = function (newValue) {\n        var _this = this;\n        if (newValue !== this.getCurrentValue()) {\n            if (newValue) {\n                this.update(newValue);\n                this.animation.onEnter(function () { return _this.animationOptions.getAnimatedElement(); }, this.animationOptions.getEnterOptions());\n            }\n            else {\n                this.animation.onLeave(function () { return _this.animationOptions.getAnimatedElement(); }, function () {\n                    _this.update(newValue);\n                }, this.animationOptions.getLeaveOptions());\n            }\n        }\n        else {\n            this.update(newValue);\n        }\n    };\n    return AnimationBoolean;\n}(AnimationProperty));\n\nvar AnimationGroup = /** @class */ (function (_super) {\n    __extends(AnimationGroup, _super);\n    function AnimationGroup() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.animation = new AnimationGroupUtils();\n        return _this;\n    }\n    AnimationGroup.prototype._sync = function (newValue) {\n        var _this = this;\n        var oldValue = this.getCurrentValue();\n        var itemsToAdd = newValue.filter(function (el) { return oldValue.indexOf(el) < 0; });\n        var deletedItems = oldValue.filter(function (el) { return newValue.indexOf(el) < 0; });\n        this.animation.onEnter(function (el) { return _this.animationOptions.getAnimatedElement(el); }, function (el) { return _this.animationOptions.getEnterOptions(el); }, itemsToAdd);\n        if (itemsToAdd.length == 0 && (deletedItems === null || deletedItems === void 0 ? void 0 : deletedItems.length) > 0) {\n            this.animation.onLeave(function (el) { return _this.animationOptions.getAnimatedElement(el); }, function () {\n                _this.update(newValue);\n            }, function (el) { return _this.animationOptions.getLeaveOptions(el); }, deletedItems);\n        }\n        else {\n            this.update(newValue);\n        }\n    };\n    return AnimationGroup;\n}(AnimationProperty));\n\n\n\n/***/ }),\n\n/***/ \"./src/utils/cssClassBuilder.ts\":\n/*!**************************************!*\\\n  !*** ./src/utils/cssClassBuilder.ts ***!\n  \\**************************************/\n/*! exports provided: CssClassBuilder */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_1161474__) {\n\n\"use strict\";\n__nested_webpack_require_1161474__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_1161474__.d(__nested_webpack_exports__, \"CssClassBuilder\", function() { return CssClassBuilder; });\nvar CssClassBuilder = /** @class */ (function () {\n    function CssClassBuilder() {\n        this.classes = [];\n    }\n    CssClassBuilder.prototype.isEmpty = function () {\n        return this.toString() === \"\";\n    };\n    CssClassBuilder.prototype.append = function (value, condition) {\n        if (condition === void 0) { condition = true; }\n        if (!!value && condition) {\n            if (typeof value === \"string\") {\n                value = value.trim();\n            }\n            this.classes.push(value);\n        }\n        return this;\n    };\n    CssClassBuilder.prototype.toString = function () {\n        return this.classes.join(\" \");\n    };\n    return CssClassBuilder;\n}());\n\n\n\n/***/ }),\n\n/***/ \"./src/utils/responsivity-manager.ts\":\n/*!*******************************************!*\\\n  !*** ./src/utils/responsivity-manager.ts ***!\n  \\*******************************************/\n/*! exports provided: ResponsivityManager, VerticalResponsivityManager */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_1162700__) {\n\n\"use strict\";\n__nested_webpack_require_1162700__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_1162700__.d(__nested_webpack_exports__, \"ResponsivityManager\", function() { return ResponsivityManager; });\n/* harmony export (binding) */ __nested_webpack_require_1162700__.d(__nested_webpack_exports__, \"VerticalResponsivityManager\", function() { return VerticalResponsivityManager; });\n/* harmony import */ var _global_variables_utils__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_1162700__(/*! ../global_variables_utils */ \"./src/global_variables_utils.ts\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_1162700__(/*! ./utils */ \"./src/utils/utils.ts\");\nvar __extends = ( false) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\nvar ResponsivityManager = /** @class */ (function () {\n    function ResponsivityManager(container, model, itemsSelector, dotsItemSize, delayedUpdateFunction) {\n        var _this = this;\n        if (dotsItemSize === void 0) { dotsItemSize = null; }\n        this.container = container;\n        this.model = model;\n        this.itemsSelector = itemsSelector;\n        this.dotsItemSize = dotsItemSize;\n        this.delayedUpdateFunction = delayedUpdateFunction;\n        this.resizeObserver = undefined;\n        this.isInitialized = false;\n        this.minDimensionConst = 56;\n        this.separatorSize = 17;\n        this.separatorAddConst = 1;\n        this.paddingSizeConst = 8;\n        this.dotsSizeConst = 48;\n        this.recalcMinDimensionConst = true;\n        this.getComputedStyle = function (elt) {\n            return _global_variables_utils__WEBPACK_IMPORTED_MODULE_0__[\"DomDocumentHelper\"].getComputedStyle(elt);\n        };\n        this.model.updateCallback = function (isResetInitialized) {\n            if (isResetInitialized)\n                _this.isInitialized = false;\n            setTimeout(function () { _this.process(); }, 1);\n        };\n        if (typeof ResizeObserver !== \"undefined\") {\n            this.resizeObserver = new ResizeObserver(function (entries) {\n                _global_variables_utils__WEBPACK_IMPORTED_MODULE_0__[\"DomWindowHelper\"].requestAnimationFrame(function () {\n                    _this.process();\n                });\n            });\n            this.resizeObserver.observe(this.container.parentElement);\n        }\n    }\n    ResponsivityManager.prototype.getDimensions = function (element) {\n        return {\n            scroll: element.scrollWidth,\n            offset: element.offsetWidth,\n        };\n    };\n    ResponsivityManager.prototype.getAvailableSpace = function () {\n        var style = this.getComputedStyle(this.container);\n        var space = this.container.offsetWidth;\n        if (style.boxSizing === \"border-box\") {\n            space -= parseFloat(style.paddingLeft) + parseFloat(style.paddingRight);\n        }\n        return space;\n    };\n    ResponsivityManager.prototype.calcItemSize = function (item) {\n        return item.offsetWidth;\n    };\n    ResponsivityManager.prototype.calcMinDimension = function (currentAction) {\n        var minDimensionConst = this.minDimensionConst;\n        if (currentAction.iconSize && this.recalcMinDimensionConst) {\n            minDimensionConst = 2 * currentAction.iconSize + this.paddingSizeConst;\n        }\n        return currentAction.canShrink\n            ? minDimensionConst +\n                (currentAction.needSeparator ? this.separatorSize : 0)\n            : currentAction.maxDimension;\n    };\n    ResponsivityManager.prototype.getRenderedVisibleActionsCount = function () {\n        var _this = this;\n        var count = 0;\n        this.container.querySelectorAll(this.itemsSelector).forEach(function (item) {\n            if (_this.calcItemSize(item) > 0) {\n                count++;\n            }\n        });\n        return count;\n    };\n    ResponsivityManager.prototype.calcItemsSizes = function () {\n        var _this = this;\n        var actions = this.model.actions;\n        var _items = this.container.querySelectorAll(this.itemsSelector);\n        (_items || []).forEach(function (item, index) {\n            var currentAction = actions[index];\n            _this.calcActionDimensions(currentAction, item);\n        });\n    };\n    ResponsivityManager.prototype.calcActionDimensions = function (currentAction, item) {\n        currentAction.maxDimension = this.calcItemSize(item);\n        currentAction.minDimension = this.calcMinDimension(currentAction);\n    };\n    Object.defineProperty(ResponsivityManager.prototype, \"isContainerVisible\", {\n        get: function () {\n            return Object(_utils__WEBPACK_IMPORTED_MODULE_1__[\"isContainerVisible\"])(this.container);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ResponsivityManager.prototype.process = function () {\n        var _this = this;\n        if (this.isContainerVisible && !this.model.isResponsivenessDisabled) {\n            if (!this.isInitialized) {\n                this.model.setActionsMode(\"large\");\n            }\n            var processResponsiveness_1 = function () {\n                var _a;\n                var dotsItemSize = _this.dotsItemSize;\n                if (!_this.dotsItemSize) {\n                    var dotsItemElement = (_a = _this.container) === null || _a === void 0 ? void 0 : _a.querySelector(\".sv-dots\");\n                    dotsItemSize = dotsItemElement && _this.calcItemSize(dotsItemElement) || _this.dotsSizeConst;\n                }\n                _this.model.fit(_this.getAvailableSpace(), dotsItemSize);\n            };\n            if (!this.isInitialized) {\n                var callback = function () {\n                    _this.calcItemsSizes();\n                    _this.isInitialized = true;\n                    processResponsiveness_1();\n                };\n                if (this.getRenderedVisibleActionsCount() < this.model.visibleActions.length) {\n                    if (this.delayedUpdateFunction) {\n                        this.delayedUpdateFunction(callback);\n                    }\n                    else if (queueMicrotask) {\n                        queueMicrotask(callback);\n                    }\n                    else {\n                        callback();\n                    }\n                }\n                else {\n                    callback();\n                }\n            }\n            else {\n                processResponsiveness_1();\n            }\n        }\n    };\n    ResponsivityManager.prototype.dispose = function () {\n        this.model.updateCallback = undefined;\n        if (!!this.resizeObserver) {\n            this.resizeObserver.disconnect();\n        }\n    };\n    return ResponsivityManager;\n}());\n\nvar VerticalResponsivityManager = /** @class */ (function (_super) {\n    __extends(VerticalResponsivityManager, _super);\n    function VerticalResponsivityManager(container, model, itemsSelector, dotsItemSize, minDimension, delayedUpdateFunction) {\n        if (minDimension === void 0) { minDimension = 40; }\n        var _this = _super.call(this, container, model, itemsSelector, dotsItemSize, delayedUpdateFunction) || this;\n        _this.minDimensionConst = minDimension;\n        _this.recalcMinDimensionConst = false;\n        return _this;\n    }\n    VerticalResponsivityManager.prototype.getDimensions = function () {\n        return {\n            scroll: this.container.scrollHeight,\n            offset: this.container.offsetHeight,\n        };\n    };\n    VerticalResponsivityManager.prototype.getAvailableSpace = function () {\n        var style = this.getComputedStyle(this.container);\n        var space = this.container.offsetHeight;\n        if (style.boxSizing === \"border-box\") {\n            space -= parseFloat(style.paddingTop) + parseFloat(style.paddingBottom);\n        }\n        return space;\n    };\n    VerticalResponsivityManager.prototype.calcItemSize = function (item) {\n        return item.offsetHeight;\n    };\n    VerticalResponsivityManager.prototype.calcActionDimensions = function (currentAction, item) {\n        currentAction.maxDimension = this.calcItemSize(item);\n        currentAction.minDimension = this.calcItemSize(item);\n    };\n    return VerticalResponsivityManager;\n}(ResponsivityManager));\n\n\n\n/***/ }),\n\n/***/ \"./src/utils/taskmanager.ts\":\n/*!**********************************!*\\\n  !*** ./src/utils/taskmanager.ts ***!\n  \\**********************************/\n/*! exports provided: Task, TaskManger, debounce */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_1171804__) {\n\n\"use strict\";\n__nested_webpack_require_1171804__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_1171804__.d(__nested_webpack_exports__, \"Task\", function() { return Task; });\n/* harmony export (binding) */ __nested_webpack_require_1171804__.d(__nested_webpack_exports__, \"TaskManger\", function() { return TaskManger; });\n/* harmony export (binding) */ __nested_webpack_require_1171804__.d(__nested_webpack_exports__, \"debounce\", function() { return debounce; });\nvar Task = /** @class */ (function () {\n    function Task(func, isMultiple) {\n        var _this = this;\n        if (isMultiple === void 0) { isMultiple = false; }\n        this.func = func;\n        this.isMultiple = isMultiple;\n        this._isCompleted = false;\n        this.execute = function () {\n            if (!_this._isCompleted) {\n                _this.func();\n                _this._isCompleted = !_this.isMultiple;\n            }\n        };\n    }\n    Task.prototype.discard = function () {\n        this._isCompleted = true;\n    };\n    Object.defineProperty(Task.prototype, \"isCompleted\", {\n        get: function () {\n            return this._isCompleted;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Task;\n}());\n\nvar TaskManger = /** @class */ (function () {\n    function TaskManger(interval) {\n        if (interval === void 0) { interval = 100; }\n        this.interval = interval;\n        setTimeout(TaskManger.Instance().tick, interval);\n    }\n    // dispose\n    TaskManger.Instance = function () {\n        if (!TaskManger.instance) {\n            TaskManger.instance = new TaskManger();\n        }\n        return TaskManger.instance;\n    };\n    TaskManger.prototype.tick = function () {\n        try {\n            var newTasks = [];\n            for (var i = 0; i < TaskManger.tasks.length; i++) {\n                var task = TaskManger.tasks[i];\n                task.execute();\n                if (!task.isCompleted) {\n                    newTasks.push(task);\n                }\n                else {\n                    if (typeof task.dispose === \"function\") {\n                        task.dispose();\n                    }\n                }\n            }\n            TaskManger.tasks = newTasks;\n        }\n        finally {\n            setTimeout(TaskManger.Instance().tick, this.interval);\n        }\n    };\n    TaskManger.schedule = function (task) {\n        TaskManger.tasks.push(task);\n    };\n    TaskManger.instance = undefined;\n    TaskManger.tasks = [];\n    return TaskManger;\n}());\n\nfunction debounce(func) {\n    var _this = this;\n    var isSheduled = false;\n    var isCanceled = false;\n    var funcArgs;\n    return { run: (function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            isCanceled = false;\n            funcArgs = args;\n            if (!isSheduled) {\n                isSheduled = true;\n                queueMicrotask(function () {\n                    if (!isCanceled) {\n                        func.apply(_this, funcArgs);\n                    }\n                    isCanceled = false;\n                    isSheduled = false;\n                });\n            }\n        }), cancel: function () {\n            isCanceled = true;\n        } };\n}\n\n\n/***/ }),\n\n/***/ \"./src/utils/utils.ts\":\n/*!****************************!*\\\n  !*** ./src/utils/utils.ts ***!\n  \\****************************/\n/*! exports provided: unwrap, getRenderedSize, getRenderedStyleSize, doKey2ClickBlur, doKey2ClickUp, doKey2ClickDown, sanitizeEditableContent, Logger, showConfirmDialog, configConfirmDialog, mergeValues, getElementWidth, isContainerVisible, classesToSelector, compareVersions, confirmAction, confirmActionAsync, detectIEOrEdge, detectIEBrowser, loadFileFromBase64, isMobile, isShadowDOM, getElement, isElementVisible, findScrollableParent, scrollElementByChildId, navigateToUrl, wrapUrlForBackgroundImage, createSvg, getIconNameFromProxy, increaseHeightByContent, getOriginalEvent, preventDefaults, findParentByClassNames, getFirstVisibleChild, chooseFiles */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_1175907__) {\n\n\"use strict\";\n__nested_webpack_require_1175907__.r(__nested_webpack_exports__);\n/* harmony export (binding) */ __nested_webpack_require_1175907__.d(__nested_webpack_exports__, \"unwrap\", function() { return unwrap; });\n/* harmony export (binding) */ __nested_webpack_require_1175907__.d(__nested_webpack_exports__, \"getRenderedSize\", function() { return getRenderedSize; });\n/* harmony export (binding) */ __nested_webpack_require_1175907__.d(__nested_webpack_exports__, \"getRenderedStyleSize\", function() { return getRenderedStyleSize; });\n/* harmony export (binding) */ __nested_webpack_require_1175907__.d(__nested_webpack_exports__, \"doKey2ClickBlur\", function() { return doKey2ClickBlur; });\n/* harmony export (binding) */ __nested_webpack_require_1175907__.d(__nested_webpack_exports__, \"doKey2ClickUp\", function() { return doKey2ClickUp; });\n/* harmony export (binding) */ __nested_webpack_require_1175907__.d(__nested_webpack_exports__, \"doKey2ClickDown\", function() { return doKey2ClickDown; });\n/* harmony export (binding) */ __nested_webpack_require_1175907__.d(__nested_webpack_exports__, \"sanitizeEditableContent\", function() { return sanitizeEditableContent; });\n/* harmony export (binding) */ __nested_webpack_require_1175907__.d(__nested_webpack_exports__, \"Logger\", function() { return Logger; });\n/* harmony export (binding) */ __nested_webpack_require_1175907__.d(__nested_webpack_exports__, \"showConfirmDialog\", function() { return showConfirmDialog; });\n/* harmony export (binding) */ __nested_webpack_require_1175907__.d(__nested_webpack_exports__, \"configConfirmDialog\", function() { return configConfirmDialog; });\n/* harmony export (binding) */ __nested_webpack_require_1175907__.d(__nested_webpack_exports__, \"mergeValues\", function() { return mergeValues; });\n/* harmony export (binding) */ __nested_webpack_require_1175907__.d(__nested_webpack_exports__, \"getElementWidth\", function() { return getElementWidth; });\n/* harmony export (binding) */ __nested_webpack_require_1175907__.d(__nested_webpack_exports__, \"isContainerVisible\", function() { return isContainerVisible; });\n/* harmony export (binding) */ __nested_webpack_require_1175907__.d(__nested_webpack_exports__, \"classesToSelector\", function() { return classesToSelector; });\n/* harmony export (binding) */ __nested_webpack_require_1175907__.d(__nested_webpack_exports__, \"compareVersions\", function() { return compareVersions; });\n/* harmony export (binding) */ __nested_webpack_require_1175907__.d(__nested_webpack_exports__, \"confirmAction\", function() { return confirmAction; });\n/* harmony export (binding) */ __nested_webpack_require_1175907__.d(__nested_webpack_exports__, \"confirmActionAsync\", function() { return confirmActionAsync; });\n/* harmony export (binding) */ __nested_webpack_require_1175907__.d(__nested_webpack_exports__, \"detectIEOrEdge\", function() { return detectIEOrEdge; });\n/* harmony export (binding) */ __nested_webpack_require_1175907__.d(__nested_webpack_exports__, \"detectIEBrowser\", function() { return detectIEBrowser; });\n/* harmony export (binding) */ __nested_webpack_require_1175907__.d(__nested_webpack_exports__, \"loadFileFromBase64\", function() { return loadFileFromBase64; });\n/* harmony export (binding) */ __nested_webpack_require_1175907__.d(__nested_webpack_exports__, \"isMobile\", function() { return isMobile; });\n/* harmony export (binding) */ __nested_webpack_require_1175907__.d(__nested_webpack_exports__, \"isShadowDOM\", function() { return isShadowDOM; });\n/* harmony export (binding) */ __nested_webpack_require_1175907__.d(__nested_webpack_exports__, \"getElement\", function() { return getElement; });\n/* harmony export (binding) */ __nested_webpack_require_1175907__.d(__nested_webpack_exports__, \"isElementVisible\", function() { return isElementVisible; });\n/* harmony export (binding) */ __nested_webpack_require_1175907__.d(__nested_webpack_exports__, \"findScrollableParent\", function() { return findScrollableParent; });\n/* harmony export (binding) */ __nested_webpack_require_1175907__.d(__nested_webpack_exports__, \"scrollElementByChildId\", function() { return scrollElementByChildId; });\n/* harmony export (binding) */ __nested_webpack_require_1175907__.d(__nested_webpack_exports__, \"navigateToUrl\", function() { return navigateToUrl; });\n/* harmony export (binding) */ __nested_webpack_require_1175907__.d(__nested_webpack_exports__, \"wrapUrlForBackgroundImage\", function() { return wrapUrlForBackgroundImage; });\n/* harmony export (binding) */ __nested_webpack_require_1175907__.d(__nested_webpack_exports__, \"createSvg\", function() { return createSvg; });\n/* harmony export (binding) */ __nested_webpack_require_1175907__.d(__nested_webpack_exports__, \"getIconNameFromProxy\", function() { return getIconNameFromProxy; });\n/* harmony export (binding) */ __nested_webpack_require_1175907__.d(__nested_webpack_exports__, \"increaseHeightByContent\", function() { return increaseHeightByContent; });\n/* harmony export (binding) */ __nested_webpack_require_1175907__.d(__nested_webpack_exports__, \"getOriginalEvent\", function() { return getOriginalEvent; });\n/* harmony export (binding) */ __nested_webpack_require_1175907__.d(__nested_webpack_exports__, \"preventDefaults\", function() { return preventDefaults; });\n/* harmony export (binding) */ __nested_webpack_require_1175907__.d(__nested_webpack_exports__, \"findParentByClassNames\", function() { return findParentByClassNames; });\n/* harmony export (binding) */ __nested_webpack_require_1175907__.d(__nested_webpack_exports__, \"getFirstVisibleChild\", function() { return getFirstVisibleChild; });\n/* harmony export (binding) */ __nested_webpack_require_1175907__.d(__nested_webpack_exports__, \"chooseFiles\", function() { return chooseFiles; });\n/* harmony import */ var _localizablestring__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_1175907__(/*! ../localizablestring */ \"./src/localizablestring.ts\");\n/* harmony import */ var _settings__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_1175907__(/*! ./../settings */ \"./src/settings.ts\");\n/* harmony import */ var _surveyStrings__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_1175907__(/*! ../surveyStrings */ \"./src/surveyStrings.ts\");\n/* harmony import */ var _global_variables_utils__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_1175907__(/*! ../global_variables_utils */ \"./src/global_variables_utils.ts\");\n\n\n\n\nfunction compareVersions(a, b) {\n    var regExStrip0 = /(\\.0+)+$/;\n    var segmentsA = a.replace(regExStrip0, \"\").split(\".\");\n    var segmentsB = b.replace(regExStrip0, \"\").split(\".\");\n    var len = Math.min(segmentsA.length, segmentsB.length);\n    for (var i = 0; i < len; i++) {\n        var diff = parseInt(segmentsA[i], 10) - parseInt(segmentsB[i], 10);\n        if (diff) {\n            return diff;\n        }\n    }\n    return segmentsA.length - segmentsB.length;\n}\nfunction confirmAction(message) {\n    if (!!_settings__WEBPACK_IMPORTED_MODULE_1__[\"settings\"] && !!_settings__WEBPACK_IMPORTED_MODULE_1__[\"settings\"].confirmActionFunc)\n        return _settings__WEBPACK_IMPORTED_MODULE_1__[\"settings\"].confirmActionFunc(message);\n    return confirm(message);\n}\nfunction confirmActionAsync(message, funcOnYes, funcOnNo, locale, rootElement) {\n    var callbackFunc = function (res) {\n        if (res)\n            funcOnYes();\n        else if (!!funcOnNo)\n            funcOnNo();\n    };\n    if (!!_settings__WEBPACK_IMPORTED_MODULE_1__[\"settings\"] && !!_settings__WEBPACK_IMPORTED_MODULE_1__[\"settings\"].confirmActionAsync) {\n        if (_settings__WEBPACK_IMPORTED_MODULE_1__[\"settings\"].confirmActionAsync(message, callbackFunc, undefined, locale, rootElement))\n            return;\n    }\n    callbackFunc(confirmAction(message));\n}\nfunction detectIEBrowser() {\n    var ua = navigator.userAgent;\n    var oldIe = ua.indexOf(\"MSIE \");\n    var elevenIe = ua.indexOf(\"Trident/\");\n    return oldIe > -1 || elevenIe > -1;\n}\nfunction detectIEOrEdge() {\n    if (typeof detectIEOrEdge.isIEOrEdge === \"undefined\") {\n        var ua = navigator.userAgent;\n        var msie = ua.indexOf(\"MSIE \");\n        var trident = ua.indexOf(\"Trident/\");\n        var edge = ua.indexOf(\"Edge/\");\n        detectIEOrEdge.isIEOrEdge = edge > 0 || trident > 0 || msie > 0;\n    }\n    return detectIEOrEdge.isIEOrEdge;\n}\nfunction loadFileFromBase64(b64Data, fileName) {\n    try {\n        var byteString = atob(b64Data.split(\",\")[1]);\n        // separate out the mime component\n        var mimeString = b64Data\n            .split(\",\")[0]\n            .split(\":\")[1]\n            .split(\";\")[0];\n        // write the bytes of the string to an ArrayBuffer\n        var ab = new ArrayBuffer(byteString.length);\n        var ia = new Uint8Array(ab);\n        for (var i = 0; i < byteString.length; i++) {\n            ia[i] = byteString.charCodeAt(i);\n        }\n        // write the ArrayBuffer to a blob, and you're done\n        var bb = new Blob([ab], { type: mimeString });\n        if (!!navigator && navigator[\"msSaveBlob\"]) {\n            navigator[\"msSaveOrOpenBlob\"](bb, fileName);\n        }\n    }\n    catch (err) { }\n}\nfunction isMobile() {\n    return (_global_variables_utils__WEBPACK_IMPORTED_MODULE_3__[\"DomWindowHelper\"].isAvailable() && _global_variables_utils__WEBPACK_IMPORTED_MODULE_3__[\"DomWindowHelper\"].hasOwn(\"orientation\"));\n}\nvar isShadowDOM = function (rootElement) {\n    return !!rootElement && !!(\"host\" in rootElement && rootElement.host);\n};\nvar getElement = function (element) {\n    var root = _settings__WEBPACK_IMPORTED_MODULE_1__[\"settings\"].environment.root;\n    return typeof element === \"string\" ? root.getElementById(element) : element;\n};\nfunction isElementVisible(element, threshold) {\n    if (threshold === void 0) { threshold = 0; }\n    if (typeof _settings__WEBPACK_IMPORTED_MODULE_1__[\"settings\"].environment === \"undefined\") {\n        return false;\n    }\n    var root = _settings__WEBPACK_IMPORTED_MODULE_1__[\"settings\"].environment.root;\n    var clientHeight = isShadowDOM(root)\n        ? root.host.clientHeight\n        : root.documentElement.clientHeight;\n    var elementRect = element.getBoundingClientRect();\n    var viewHeight = Math.max(clientHeight, _global_variables_utils__WEBPACK_IMPORTED_MODULE_3__[\"DomWindowHelper\"].getInnerHeight());\n    var topWin = -threshold;\n    var bottomWin = viewHeight + threshold;\n    var topEl = elementRect.top;\n    var bottomEl = elementRect.bottom;\n    var maxTop = Math.max(topWin, topEl);\n    var minBottom = Math.min(bottomWin, bottomEl);\n    return maxTop <= minBottom;\n}\nfunction findScrollableParent(element) {\n    var root = _settings__WEBPACK_IMPORTED_MODULE_1__[\"settings\"].environment.root;\n    if (!element) {\n        return isShadowDOM(root)\n            ? root.host\n            : root.documentElement;\n    }\n    if (element.scrollHeight > element.clientHeight &&\n        (getComputedStyle(element).overflowY === \"scroll\" ||\n            getComputedStyle(element).overflowY === \"auto\")) {\n        return element;\n    }\n    if (element.scrollWidth > element.clientWidth &&\n        (getComputedStyle(element).overflowX === \"scroll\" ||\n            getComputedStyle(element).overflowX === \"auto\")) {\n        return element;\n    }\n    return findScrollableParent(element.parentElement);\n}\nfunction scrollElementByChildId(id) {\n    var environment = _settings__WEBPACK_IMPORTED_MODULE_1__[\"settings\"].environment;\n    if (!environment)\n        return;\n    var root = environment.root;\n    var el = root.getElementById(id);\n    if (!el)\n        return;\n    var scrollableEl = findScrollableParent(el);\n    if (!!scrollableEl) {\n        setTimeout(function () { return scrollableEl.dispatchEvent(new CustomEvent(\"scroll\")); }, 10);\n    }\n}\nfunction navigateToUrl(url) {\n    var location = _global_variables_utils__WEBPACK_IMPORTED_MODULE_3__[\"DomWindowHelper\"].getLocation();\n    if (!url || !location)\n        return;\n    location.href = url;\n}\nfunction wrapUrlForBackgroundImage(url) {\n    return !!url ? [\"url(\", url, \")\"].join(\"\") : \"\";\n}\nfunction getIconNameFromProxy(iconName) {\n    if (!iconName)\n        return iconName;\n    var proxyName = _settings__WEBPACK_IMPORTED_MODULE_1__[\"settings\"].customIcons[iconName];\n    return !!proxyName ? proxyName : iconName;\n}\nfunction createSvg(size, width, height, iconName, svgElem, title) {\n    if (!svgElem)\n        return;\n    if (size !== \"auto\") {\n        svgElem.style.width = (size || width || 16) + \"px\";\n        svgElem.style.height = (size || height || 16) + \"px\";\n    }\n    var node = svgElem.childNodes[0];\n    var realIconName = getIconNameFromProxy(iconName);\n    node.setAttributeNS(\"http://www.w3.org/1999/xlink\", \"xlink:href\", \"#\" + realIconName);\n    var titleElement = svgElem.getElementsByTagName(\"title\")[0];\n    if (!title) {\n        if (!!titleElement) {\n            svgElem.removeChild(titleElement);\n        }\n        return;\n    }\n    else {\n        if (!titleElement) {\n            titleElement = _global_variables_utils__WEBPACK_IMPORTED_MODULE_3__[\"DomDocumentHelper\"].getDocument().createElementNS(\"http://www.w3.org/2000/svg\", \"title\");\n            svgElem.appendChild(titleElement);\n        }\n    }\n    titleElement.textContent = title;\n}\nfunction unwrap(value) {\n    if (typeof value !== \"function\") {\n        return value;\n    }\n    else {\n        return value();\n    }\n}\n// export function getSize(value: any): number {\n//   if (typeof value === \"number\") {\n//     return value;\n//   }\n//   if (typeof value === \"string\" && value.includes(\"px\")) {\n//     return parseInt(value);\n//   }\n//   if (!!value && typeof value === \"string\" && value.length > 0) {\n//     const lastSymbol: string = value[value.length - 1];\n//     if ((lastSymbol >= \"0\" && lastSymbol <= \"9\") || lastSymbol == \".\") {\n//       try {\n//         const num: number = parseInt(value);\n//         return num;\n//       } catch { }\n//     }\n//   }\n//   return value;\n// }\nfunction getRenderedSize(val) {\n    if (typeof val == \"string\") {\n        if (!isNaN(Number(val))) {\n            return Number(val);\n        }\n        else if (val.includes(\"px\")) {\n            return parseFloat(val);\n        }\n    }\n    if (typeof val == \"number\") {\n        return val;\n    }\n    return undefined;\n}\nfunction getRenderedStyleSize(val) {\n    if (getRenderedSize(val) !== undefined) {\n        return undefined;\n    }\n    return val;\n}\nvar keyFocusedClassName = \"sv-focused--by-key\";\nfunction doKey2ClickBlur(evt) {\n    var element = evt.target;\n    if (!element || !element.classList)\n        return;\n    element.classList.remove(keyFocusedClassName);\n}\nfunction doKey2ClickUp(evt, options) {\n    if (!!evt.target && evt.target[\"contentEditable\"] === \"true\") {\n        return;\n    }\n    var element = evt.target;\n    if (!element)\n        return;\n    var char = evt.which || evt.keyCode;\n    if (char === 9) {\n        if (!!element.classList && !element.classList.contains(keyFocusedClassName)) {\n            element.classList.add(keyFocusedClassName);\n        }\n        return;\n    }\n    if (options) {\n        if (!options.__keyDownReceived)\n            return;\n        options.__keyDownReceived = false;\n    }\n    if (char === 13 || char === 32) {\n        if (element.click)\n            element.click();\n    }\n    else if ((!options || options.processEsc) && char === 27) {\n        if (element.blur)\n            element.blur();\n    }\n}\nfunction doKey2ClickDown(evt, options) {\n    if (options === void 0) { options = { processEsc: true }; }\n    if (options)\n        options.__keyDownReceived = true;\n    if (!!evt.target && evt.target[\"contentEditable\"] === \"true\") {\n        return;\n    }\n    var char = evt.which || evt.keyCode;\n    var supportedCodes = [13, 32];\n    if (options.processEsc) {\n        supportedCodes.push(27);\n    }\n    if (supportedCodes.indexOf(char) !== -1) {\n        evt.preventDefault();\n    }\n}\nfunction increaseHeightByContent(element, getComputedStyle) {\n    if (!element)\n        return;\n    if (!getComputedStyle)\n        getComputedStyle = function (elt) { return _global_variables_utils__WEBPACK_IMPORTED_MODULE_3__[\"DomDocumentHelper\"].getComputedStyle(elt); };\n    var style = getComputedStyle(element);\n    element.style.height = \"auto\";\n    if (!!element.scrollHeight) {\n        element.style.height = (element.scrollHeight + parseFloat(style.borderTopWidth) + parseFloat(style.borderBottomWidth)) + \"px\";\n    }\n}\nfunction getOriginalEvent(event) {\n    return event.originalEvent || event;\n}\nfunction preventDefaults(event) {\n    event.preventDefault();\n    event.stopPropagation();\n}\nfunction classesToSelector(str) {\n    var re = /\\s*?([\\w-]+)\\s*?/g;\n    return str.replace(re, \".$1\");\n}\nfunction getElementWidth(el) {\n    return !!getComputedStyle ? Number.parseFloat(getComputedStyle(el).width) : el.offsetWidth;\n}\nfunction isContainerVisible(el) {\n    return !!(el.offsetWidth ||\n        el.offsetHeight ||\n        el.getClientRects().length);\n}\nfunction getFirstVisibleChild(el) {\n    var result;\n    for (var index = 0; index < el.children.length; index++) {\n        if (!result && getComputedStyle(el.children[index]).display !== \"none\") {\n            result = el.children[index];\n        }\n    }\n    return result;\n}\nfunction findParentByClassNames(element, classNames) {\n    if (!!element) {\n        if (classNames.every(function (className) { return !className || element.classList.contains(className); })) {\n            return element;\n        }\n        else {\n            return findParentByClassNames(element.parentElement, classNames);\n        }\n    }\n}\nfunction sanitizeEditableContent(element, cleanLineBreaks) {\n    if (cleanLineBreaks === void 0) { cleanLineBreaks = true; }\n    if (_global_variables_utils__WEBPACK_IMPORTED_MODULE_3__[\"DomWindowHelper\"].isAvailable() && _global_variables_utils__WEBPACK_IMPORTED_MODULE_3__[\"DomDocumentHelper\"].isAvailable() && element.childNodes.length > 0) {\n        var selection = _global_variables_utils__WEBPACK_IMPORTED_MODULE_3__[\"DomWindowHelper\"].getSelection();\n        if (selection.rangeCount == 0) {\n            return;\n        }\n        var range = selection.getRangeAt(0);\n        range.setStart(range.endContainer, range.endOffset);\n        range.setEndAfter(element.lastChild);\n        selection.removeAllRanges();\n        selection.addRange(range);\n        var tail = selection.toString();\n        var innerText = element.innerText;\n        tail = tail.replace(/\\r/g, \"\");\n        if (cleanLineBreaks) {\n            tail = tail.replace(/\\n/g, \"\");\n            innerText = innerText.replace(/\\n/g, \"\");\n        }\n        var tail_len = tail.length;\n        element.innerText = innerText;\n        range = _global_variables_utils__WEBPACK_IMPORTED_MODULE_3__[\"DomDocumentHelper\"].getDocument().createRange();\n        range.setStart(element.firstChild, 0);\n        range.setEnd(element.firstChild, 0);\n        selection.removeAllRanges();\n        selection.addRange(range);\n        while (selection.toString().length < innerText.length - tail_len) {\n            var selLen = selection.toString().length;\n            selection.modify(\"extend\", \"forward\", \"character\");\n            if (selection.toString().length == selLen)\n                break;\n        }\n        range = selection.getRangeAt(0);\n        range.setStart(range.endContainer, range.endOffset);\n    }\n}\nfunction mergeValues(src, dest) {\n    if (!dest || !src)\n        return;\n    if (typeof dest !== \"object\")\n        return;\n    for (var key in src) {\n        var value = src[key];\n        if (!Array.isArray(value) && value && typeof value === \"object\") {\n            if (!dest[key] || typeof dest[key] !== \"object\")\n                dest[key] = {};\n            mergeValues(value, dest[key]);\n        }\n        else {\n            dest[key] = value;\n        }\n    }\n}\nvar Logger = /** @class */ (function () {\n    function Logger() {\n        this._result = \"\";\n    }\n    Logger.prototype.log = function (action) {\n        this._result += \"->\" + action;\n    };\n    Object.defineProperty(Logger.prototype, \"result\", {\n        get: function () {\n            return this._result;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Logger;\n}());\n\nfunction showConfirmDialog(message, callback, applyTitle, locale, rootElement) {\n    var locStr = new _localizablestring__WEBPACK_IMPORTED_MODULE_0__[\"LocalizableString\"](undefined);\n    var popupViewModel = _settings__WEBPACK_IMPORTED_MODULE_1__[\"settings\"].showDialog({\n        componentName: \"sv-string-viewer\",\n        data: { locStr: locStr, locString: locStr, model: locStr },\n        onApply: function () {\n            callback(true);\n            return true;\n        },\n        onCancel: function () {\n            callback(false);\n            return false;\n        },\n        title: message,\n        displayMode: \"popup\",\n        isFocusedContent: false,\n        cssClass: \"sv-popup--confirm-delete\"\n    }, rootElement);\n    var toolbar = popupViewModel.footerToolbar;\n    var applyBtn = toolbar.getActionById(\"apply\");\n    var cancelBtn = toolbar.getActionById(\"cancel\");\n    cancelBtn.title = _surveyStrings__WEBPACK_IMPORTED_MODULE_2__[\"surveyLocalization\"].getString(\"cancel\", locale);\n    cancelBtn.innerCss = \"sv-popup__body-footer-item sv-popup__button sd-btn sd-btn--small\";\n    applyBtn.title = applyTitle || _surveyStrings__WEBPACK_IMPORTED_MODULE_2__[\"surveyLocalization\"].getString(\"ok\", locale);\n    applyBtn.innerCss = \"sv-popup__body-footer-item sv-popup__button sv-popup__button--danger sd-btn sd-btn--small sd-btn--danger\";\n    configConfirmDialog(popupViewModel);\n    return true;\n}\nfunction configConfirmDialog(popupViewModel) {\n    popupViewModel.width = \"min-content\";\n}\nfunction chooseFiles(input, callback) {\n    if (!_global_variables_utils__WEBPACK_IMPORTED_MODULE_3__[\"DomWindowHelper\"].isFileReaderAvailable())\n        return;\n    input.value = \"\";\n    input.onchange = function (event) {\n        if (!_global_variables_utils__WEBPACK_IMPORTED_MODULE_3__[\"DomWindowHelper\"].isFileReaderAvailable())\n            return;\n        if (!input || !input.files || input.files.length < 1)\n            return;\n        var files = [];\n        for (var i = 0; i < input.files.length; i++) {\n            files.push(input.files[i]);\n        }\n        callback(files);\n    };\n    input.click();\n}\n\n\n\n/***/ }),\n\n/***/ \"react\":\n/*!**************************************************************************************!*\\\n  !*** external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"} ***!\n  \\**************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_react__;\n\n/***/ }),\n\n/***/ \"react-dom\":\n/*!*****************************************************************************************************!*\\\n  !*** external {\"root\":\"ReactDOM\",\"commonjs2\":\"react-dom\",\"commonjs\":\"react-dom\",\"amd\":\"react-dom\"} ***!\n  \\*****************************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_react_dom__;\n\n/***/ }),\n\n/***/ \"survey-core\":\n/*!*********************************************************************************************************!*\\\n  !*** external {\"root\":\"Survey\",\"commonjs2\":\"survey-core\",\"commonjs\":\"survey-core\",\"amd\":\"survey-core\"} ***!\n  \\*********************************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_survey_core__;\n\n/***/ })\n\n/******/ });\n});\n//# sourceMappingURL=survey-react-ui.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/survey-react-ui/survey-react-ui.js\n");

/***/ })

};
;